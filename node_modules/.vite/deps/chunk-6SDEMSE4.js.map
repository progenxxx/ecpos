{
  "version": 3,
  "sources": ["../../datatables.net/js/dataTables.mjs"],
  "sourcesContent": ["/*! DataTables 2.1.8\r\n * Â© SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\nimport jQuery from 'jquery';\r\n\r\n// DataTables code uses $ internally, but we want to be able to\r\n// reassign $ with the `use` method, so it is a regular var.\r\nvar $ = jQuery;\r\n\r\n\r\nvar DataTable = function ( selector, options )\r\n{\r\n\t// Check if called with a window or jQuery object for DOM less applications\r\n\t// This is for backwards compatibility\r\n\tif (DataTable.factory(selector, options)) {\r\n\t\treturn DataTable;\r\n\t}\r\n\r\n\t// When creating with `new`, create a new DataTable, returning the API instance\r\n\tif (this instanceof DataTable) {\r\n\t\treturn $(selector).DataTable(options);\r\n\t}\r\n\telse {\r\n\t\t// Argument switching\r\n\t\toptions = selector;\r\n\t}\r\n\r\n\tvar _that = this;\r\n\tvar emptyInit = options === undefined;\r\n\tvar len = this.length;\r\n\r\n\tif ( emptyInit ) {\r\n\t\toptions = {};\r\n\t}\r\n\r\n\t// Method to get DT API instance from jQuery object\r\n\tthis.api = function ()\r\n\t{\r\n\t\treturn new _Api( this );\r\n\t};\r\n\r\n\tthis.each(function() {\r\n\t\t// For each initialisation we want to give it a clean initialisation\r\n\t\t// object that can be bashed around\r\n\t\tvar o = {};\r\n\t\tvar oInit = len > 1 ? // optimisation for single table case\r\n\t\t\t_fnExtend( o, options, true ) :\r\n\t\t\toptions;\r\n\r\n\t\t\r\n\t\tvar i=0, iLen;\r\n\t\tvar sId = this.getAttribute( 'id' );\r\n\t\tvar defaults = DataTable.defaults;\r\n\t\tvar $this = $(this);\r\n\t\t\r\n\t\t\r\n\t\t/* Sanity check */\r\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\r\n\t\t{\r\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t$(this).trigger( 'options.dt', oInit );\r\n\t\t\r\n\t\t/* Backwards compatibility for the defaults */\r\n\t\t_fnCompatOpts( defaults );\r\n\t\t_fnCompatCols( defaults.column );\r\n\t\t\r\n\t\t/* Convert the camel-case defaults to Hungarian */\r\n\t\t_fnCamelToHungarian( defaults, defaults, true );\r\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\r\n\t\t\r\n\t\t/* Setting up the initialisation object */\r\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/* Check to see if we are re-initialising a table */\r\n\t\tvar allSettings = DataTable.settings;\r\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tvar s = allSettings[i];\r\n\t\t\r\n\t\t\t/* Base check on table node */\r\n\t\t\tif (\r\n\t\t\t\ts.nTable == this ||\r\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\r\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\r\n\t\t\t) {\r\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\r\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\r\n\t\t\r\n\t\t\t\tif ( emptyInit || bRetrieve )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn s.oInstance;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( bDestroy )\r\n\t\t\t\t{\r\n\t\t\t\t\tnew DataTable.Api(s).destroy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\r\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\r\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\r\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\r\n\t\t\t */\r\n\t\t\tif ( s.sTableId == this.id )\r\n\t\t\t{\r\n\t\t\t\tallSettings.splice( i, 1 );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/* Ensure the table has an ID - required for accessibility */\r\n\t\tif ( sId === null || sId === \"\" )\r\n\t\t{\r\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\r\n\t\t\tthis.id = sId;\r\n\t\t}\r\n\t\t\r\n\t\t/* Create the settings object for this table and set some of the default parameters */\r\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\r\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\r\n\t\t\t\"sInstance\":     sId,\r\n\t\t\t\"sTableId\":      sId,\r\n\t\t\tcolgroup: $('<colgroup>').prependTo(this),\r\n\t\t\tfastData: function (row, column, type) {\r\n\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\r\n\t\t\t}\r\n\t\t} );\r\n\t\toSettings.nTable = this;\r\n\t\toSettings.oInit  = oInit;\r\n\t\t\r\n\t\tallSettings.push( oSettings );\r\n\t\t\r\n\t\t// Make a single API instance available for internal handling\r\n\t\toSettings.api = new _Api( oSettings );\r\n\t\t\r\n\t\t// Need to add the instance after the instance after the settings object has been added\r\n\t\t// to the settings array, so we can self reference the table instance if more than one\r\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\r\n\t\t\r\n\t\t// Backwards compatibility, before we apply all the defaults\r\n\t\t_fnCompatOpts( oInit );\r\n\t\t\r\n\t\t// If the length menu is given, but the init display length is not, use the length menu\r\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\r\n\t\t{\r\n\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\r\n\t\t\t\t? oInit.aLengthMenu[0][0]\r\n\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\r\n\t\t\t\t\t? oInit.aLengthMenu[0].value\r\n\t\t\t\t\t: oInit.aLengthMenu[0];\r\n\t\t}\r\n\t\t\r\n\t\t// Apply the defaults and init options to make a single init object will all\r\n\t\t// options defined from defaults and instance options.\r\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\r\n\t\t\r\n\t\t\r\n\t\t// Map the initialisation options onto the settings object\r\n\t\t_fnMap( oSettings.oFeatures, oInit, [\r\n\t\t\t\"bPaginate\",\r\n\t\t\t\"bLengthChange\",\r\n\t\t\t\"bFilter\",\r\n\t\t\t\"bSort\",\r\n\t\t\t\"bSortMulti\",\r\n\t\t\t\"bInfo\",\r\n\t\t\t\"bProcessing\",\r\n\t\t\t\"bAutoWidth\",\r\n\t\t\t\"bSortClasses\",\r\n\t\t\t\"bServerSide\",\r\n\t\t\t\"bDeferRender\"\r\n\t\t] );\r\n\t\t_fnMap( oSettings, oInit, [\r\n\t\t\t\"ajax\",\r\n\t\t\t\"fnFormatNumber\",\r\n\t\t\t\"sServerMethod\",\r\n\t\t\t\"aaSorting\",\r\n\t\t\t\"aaSortingFixed\",\r\n\t\t\t\"aLengthMenu\",\r\n\t\t\t\"sPaginationType\",\r\n\t\t\t\"iStateDuration\",\r\n\t\t\t\"bSortCellsTop\",\r\n\t\t\t\"iTabIndex\",\r\n\t\t\t\"sDom\",\r\n\t\t\t\"fnStateLoadCallback\",\r\n\t\t\t\"fnStateSaveCallback\",\r\n\t\t\t\"renderer\",\r\n\t\t\t\"searchDelay\",\r\n\t\t\t\"rowId\",\r\n\t\t\t\"caption\",\r\n\t\t\t\"layout\",\r\n\t\t\t\"orderDescReverse\",\r\n\t\t\t\"typeDetect\",\r\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\r\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\r\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\r\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oScroll, oInit, [\r\n\t\t\t[ \"sScrollX\", \"sX\" ],\r\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\r\n\t\t\t[ \"sScrollY\", \"sY\" ],\r\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\r\n\t\t\r\n\t\t/* Callback functions which are array driven */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\r\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\r\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\r\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\r\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\r\n\t\t\r\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\r\n\t\t\r\n\t\t/* Browser support detection */\r\n\t\t_fnBrowserDetect( oSettings );\r\n\t\t\r\n\t\tvar oClasses = oSettings.oClasses;\r\n\t\t\r\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\r\n\t\t$this.addClass( oClasses.table );\r\n\t\t\r\n\t\tif (! oSettings.oFeatures.bPaginate) {\r\n\t\t\toInit.iDisplayStart = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif ( oSettings.iInitDisplayStart === undefined )\r\n\t\t{\r\n\t\t\t/* Display start point, taking into account the save saving */\r\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\r\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\r\n\t\t}\r\n\t\t\r\n\t\tvar defer = oInit.iDeferLoading;\r\n\t\tif ( defer !== null )\r\n\t\t{\r\n\t\t\toSettings.deferLoading = true;\r\n\t\t\r\n\t\t\tvar tmp = Array.isArray(defer);\r\n\t\t\toSettings._iRecordsDisplay = tmp ? defer[0] : defer;\r\n\t\t\toSettings._iRecordsTotal = tmp ? defer[1] : defer;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Columns\r\n\t\t * See if we should load columns automatically or use defined ones\r\n\t\t */\r\n\t\tvar columnsInit = [];\r\n\t\tvar thead = this.getElementsByTagName('thead');\r\n\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\r\n\t\t\r\n\t\t// If we don't have a columns array, then generate one with nulls\r\n\t\tif ( oInit.aoColumns ) {\r\n\t\t\tcolumnsInit = oInit.aoColumns;\r\n\t\t}\r\n\t\telse if ( initHeaderLayout.length ) {\r\n\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\r\n\t\t\t\tcolumnsInit.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Add the columns\r\n\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\r\n\t\t\t_fnAddColumn( oSettings );\r\n\t\t}\r\n\t\t\r\n\t\t// Apply the column definitions\r\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\r\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\r\n\t\t} );\r\n\t\t\r\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\r\n\t\t * attributes are found\r\n\t\t */\r\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\r\n\t\t\r\n\t\tif ( rowOne.length ) {\r\n\t\t\tvar a = function ( cell, name ) {\r\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\r\n\t\t\t};\r\n\t\t\r\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\r\n\t\t\t\tvar col = oSettings.aoColumns[i];\r\n\t\t\r\n\t\t\t\tif (! col) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tif ( col.mData === i ) {\r\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\r\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\r\n\t\t\r\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\r\n\t\t\t\t\t\tcol.mData = {\r\n\t\t\t\t\t\t\t_:      i+'.display',\r\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcol._isArrayHost = true;\r\n\t\t\r\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\t\r\n\t\t// Must be done after everything which can be overridden by the state saving!\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\r\n\t\t\r\n\t\tvar features = oSettings.oFeatures;\r\n\t\tif ( oInit.bStateSave )\r\n\t\t{\r\n\t\t\tfeatures.bStateSave = true;\r\n\t\t}\r\n\t\t\r\n\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\r\n\t\t// in case that has been altered, so the default sort reflects that option\r\n\t\tif ( oInit.aaSorting === undefined ) {\r\n\t\t\tvar sorting = oSettings.aaSorting;\r\n\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\r\n\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Do a first pass on the sorting classes (allows any size changes to be taken into\r\n\t\t// account, and also will apply sorting disabled classes if disabled\r\n\t\t_fnSortingClasses( oSettings );\r\n\t\t\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\r\n\t\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\t}\r\n\t\t} );\r\n\t\t\r\n\t\t\r\n\t\t/*\r\n\t\t * Table HTML init\r\n\t\t * Cache the header, body and footer as required, creating them if needed\r\n\t\t */\r\n\t\tvar caption = $this.children('caption');\r\n\t\t\r\n\t\tif ( oSettings.caption ) {\r\n\t\t\tif ( caption.length === 0 ) {\r\n\t\t\t\tcaption = $('<caption/>').appendTo( $this );\r\n\t\t\t}\r\n\t\t\r\n\t\t\tcaption.html( oSettings.caption );\r\n\t\t}\r\n\t\t\r\n\t\t// Store the caption side, so we can remove the element from the document\r\n\t\t// when creating the element\r\n\t\tif (caption.length) {\r\n\t\t\tcaption[0]._captionSide = caption.css('caption-side');\r\n\t\t\toSettings.captionNode = caption[0];\r\n\t\t}\r\n\t\t\r\n\t\tif ( thead.length === 0 ) {\r\n\t\t\tthead = $('<thead/>').appendTo($this);\r\n\t\t}\r\n\t\toSettings.nTHead = thead[0];\r\n\t\t$('tr', thead).addClass(oClasses.thead.row);\r\n\t\t\r\n\t\tvar tbody = $this.children('tbody');\r\n\t\tif ( tbody.length === 0 ) {\r\n\t\t\ttbody = $('<tbody/>').insertAfter(thead);\r\n\t\t}\r\n\t\toSettings.nTBody = tbody[0];\r\n\t\t\r\n\t\tvar tfoot = $this.children('tfoot');\r\n\t\tif ( tfoot.length === 0 ) {\r\n\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\r\n\t\t\t// a tfoot element for the caption element to be appended to\r\n\t\t\ttfoot = $('<tfoot/>').appendTo($this);\r\n\t\t}\r\n\t\toSettings.nTFoot = tfoot[0];\r\n\t\t$('tr', tfoot).addClass(oClasses.tfoot.row);\r\n\t\t\r\n\t\t// Copy the data index array\r\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\r\n\t\t\r\n\t\t// Initialisation complete - table can be drawn\r\n\t\toSettings.bInitialised = true;\r\n\t\t\r\n\t\t// Language definitions\r\n\t\tvar oLanguage = oSettings.oLanguage;\r\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\r\n\t\t\r\n\t\tif ( oLanguage.sUrl ) {\r\n\t\t\t// Get the language definitions from a file\r\n\t\t\t$.ajax( {\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\turl: oLanguage.sUrl,\r\n\t\t\t\tsuccess: function ( json ) {\r\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\r\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\r\n\t\t\r\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t},\r\n\t\t\t\terror: function () {\r\n\t\t\t\t\t// Error occurred loading language file\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\r\n\t\t\r\n\t\t\t\t\t// Continue on as best we can\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\r\n\t\t\t_fnInitialise( oSettings );\r\n\t\t}\r\n\t} );\r\n\t_that = null;\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n/**\r\n * DataTables extensions\r\n * \r\n * This namespace acts as a collection area for plug-ins that can be used to\r\n * extend DataTables capabilities. Indeed many of the build in methods\r\n * use this method to provide their own capabilities (sorting methods for\r\n * example).\r\n *\r\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\r\n * reasons\r\n *\r\n *  @namespace\r\n */\r\nDataTable.ext = _ext = {\r\n\t/**\r\n\t * Buttons. For use with the Buttons extension for DataTables. This is\r\n\t * defined here so other extensions can define buttons regardless of load\r\n\t * order. It is _not_ used by DataTables core.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tbuttons: {},\r\n\r\n\r\n\t/**\r\n\t * Element class names\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tclasses: {},\r\n\r\n\r\n\t/**\r\n\t * DataTables build type (expanded by the download builder)\r\n\t *\r\n\t *  @type string\r\n\t */\r\n\tbuilder: \"-source-\",\r\n\r\n\r\n\t/**\r\n\t * Error reporting.\r\n\t * \r\n\t * How should DataTables report an error. Can take the value 'alert',\r\n\t * 'throw', 'none' or a function.\r\n\t *\r\n\t *  @type string|function\r\n\t *  @default alert\r\n\t */\r\n\terrMode: \"alert\",\r\n\r\n\r\n\t/**\r\n\t * Legacy so v1 plug-ins don't throw js errors on load\r\n\t */\r\n\tfeature: [],\r\n\r\n\t/**\r\n\t * Feature plug-ins.\r\n\t * \r\n\t * This is an object of callbacks which provide the features for DataTables\r\n\t * to be initialised via the `layout` option.\r\n\t */\r\n\tfeatures: {},\r\n\r\n\r\n\t/**\r\n\t * Row searching.\r\n\t * \r\n\t * This method of searching is complimentary to the default type based\r\n\t * searching, and a lot more comprehensive as it allows you complete control\r\n\t * over the searching logic. Each element in this array is a function\r\n\t * (parameters described below) that is called for every row in the table,\r\n\t * and your logic decides if it should be included in the searching data set\r\n\t * or not.\r\n\t *\r\n\t * Searching functions have the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{array|object}` Data for the row to be processed (same as the\r\n\t *    original format that was passed in as the data source, or an array\r\n\t *    from a DOM data source\r\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\r\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\r\n\t *\r\n\t * And the following return is expected:\r\n\t *\r\n\t * * {boolean} Include the row in the searched result set (true) or not\r\n\t *   (false)\r\n\t *\r\n\t * Note that as with the main search ability in DataTables, technically this\r\n\t * is \"filtering\", since it is subtractive. However, for consistency in\r\n\t * naming we call it searching here.\r\n\t *\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @example\r\n\t *    // The following example shows custom search being applied to the\r\n\t *    // fourth column (i.e. the data[3] index) based on two input values\r\n\t *    // from the end-user, matching the data in a certain range.\r\n\t *    $.fn.dataTable.ext.search.push(\r\n\t *      function( settings, data, dataIndex ) {\r\n\t *        var min = document.getElementById('min').value * 1;\r\n\t *        var max = document.getElementById('max').value * 1;\r\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\r\n\t *\r\n\t *        if ( min == \"\" && max == \"\" ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min == \"\" && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && \"\" == max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        return false;\r\n\t *      }\r\n\t *    );\r\n\t */\r\n\tsearch: [],\r\n\r\n\r\n\t/**\r\n\t * Selector extensions\r\n\t *\r\n\t * The `selector` option can be used to extend the options available for the\r\n\t * selector modifier options (`selector-modifier` object data type) that\r\n\t * each of the three built in selector types offer (row, column and cell +\r\n\t * their plural counterparts). For example the Select extension uses this\r\n\t * mechanism to provide an option to select only rows, columns and cells\r\n\t * that have been marked as selected by the end user (`{selected: true}`),\r\n\t * which can be used in conjunction with the existing built in selector\r\n\t * options.\r\n\t *\r\n\t * Each property is an array to which functions can be pushed. The functions\r\n\t * take three attributes:\r\n\t *\r\n\t * * Settings object for the host table\r\n\t * * Options object (`selector-modifier` object type)\r\n\t * * Array of selected item indexes\r\n\t *\r\n\t * The return is an array of the resulting item indexes after the custom\r\n\t * selector has been applied.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tselector: {\r\n\t\tcell: [],\r\n\t\tcolumn: [],\r\n\t\trow: []\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Legacy configuration options. Enable and disable legacy options that\r\n\t * are available in DataTables.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tlegacy: {\r\n\t\t/**\r\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\r\n\t\t * requests\r\n\t\t *\r\n\t\t *  @type boolean\r\n\t\t *  @default null\r\n\t\t */\r\n\t\tajax: null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Pagination plug-in methods.\r\n\t * \r\n\t * Each entry in this object is a function and defines which buttons should\r\n\t * be shown by the pagination rendering method that is used for the table:\r\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\r\n\t * buttons are displayed in the document, while the functions here tell it\r\n\t * what buttons to display. This is done by returning an array of button\r\n\t * descriptions (what each button will do).\r\n\t *\r\n\t * Pagination types (the four built in options and any additional plug-in\r\n\t * options defined here) can be used through the `paginationType`\r\n\t * initialisation parameter.\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{int} page` The current page index\r\n\t * 2. `{int} pages` The number of pages in the table\r\n\t *\r\n\t * Each function is expected to return an array where each element of the\r\n\t * array can be one of:\r\n\t *\r\n\t * * `first` - Jump to first page when activated\r\n\t * * `last` - Jump to last page when activated\r\n\t * * `previous` - Show previous page when activated\r\n\t * * `next` - Show next page when activated\r\n\t * * `{int}` - Show page of the index given\r\n\t * * `{array}` - A nested array containing the above elements to add a\r\n\t *   containing 'DIV' element (might be useful for styling).\r\n\t *\r\n\t * Note that DataTables v1.9- used this object slightly differently whereby\r\n\t * an object with two functions would be defined for each plug-in. That\r\n\t * ability is still supported by DataTables 1.10+ to provide backwards\r\n\t * compatibility, but this option of use is now decremented and no longer\r\n\t * documented in DataTables 1.10+.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t *\r\n\t *  @example\r\n\t *    // Show previous, next and current page buttons only\r\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\r\n\t *      return [ 'previous', page, 'next' ];\r\n\t *    };\r\n\t */\r\n\tpager: {},\r\n\r\n\r\n\trenderer: {\r\n\t\tpageButton: {},\r\n\t\theader: {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Ordering plug-ins - custom data source\r\n\t * \r\n\t * The extension options for ordering of data available here is complimentary\r\n\t * to the default type based ordering that DataTables typically uses. It\r\n\t * allows much greater control over the the data that is being used to\r\n\t * order a column, but is necessarily therefore more complex.\r\n\t * \r\n\t * This type of ordering is useful if you want to do ordering based on data\r\n\t * live from the DOM (for example the contents of an 'input' element) rather\r\n\t * than just the static string that DataTables knows of.\r\n\t * \r\n\t * The way these plug-ins work is that you create an array of the values you\r\n\t * wish to be ordering for the column in question and then return that\r\n\t * array. The data in the array much be in the index order of the rows in\r\n\t * the table (not the currently ordering order!). Which order data gathering\r\n\t * function is run here depends on the `dt-init columns.orderDataType`\r\n\t * parameter that is used for the column (if any).\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{int}` Target column index\r\n\t *\r\n\t * Each function is expected to return an array:\r\n\t *\r\n\t * * `{array}` Data for the column to be ordering upon\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    // Ordering using `input` node values\r\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\r\n\t *    {\r\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\r\n\t *        return $('input', td).val();\r\n\t *      } );\r\n\t *    }\r\n\t */\r\n\torder: {},\r\n\r\n\r\n\t/**\r\n\t * Type based plug-ins.\r\n\t *\r\n\t * Each column in DataTables has a type assigned to it, either by automatic\r\n\t * detection or by direct assignment using the `type` option for the column.\r\n\t * The type of a column will effect how it is ordering and search (plug-ins\r\n\t * can also make use of the column type if required).\r\n\t *\r\n\t * @namespace\r\n\t */\r\n\ttype: {\r\n\t\t/**\r\n\t\t * Automatic column class assignment\r\n\t\t */\r\n\t\tclassName: {},\r\n\r\n\t\t/**\r\n\t\t * Type detection functions.\r\n\t\t *\r\n\t\t * The functions defined in this object are used to automatically detect\r\n\t\t * a column's type, making initialisation of DataTables super easy, even\r\n\t\t * when complex data is in the table.\r\n\t\t *\r\n\t\t * The functions defined take two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be analysed\r\n\t     *  2. `{settings}` DataTables settings object. This can be used to\r\n\t     *     perform context specific type detection - for example detection\r\n\t     *     based on language settings such as using a comma for a decimal\r\n\t     *     place. Generally speaking the options from the settings will not\r\n\t     *     be required\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\r\n\t\t *   pass it on to the other type detection functions.\r\n\t\t *\r\n\t\t *  @type array\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Currency type detection plug-in:\r\n\t\t *    $.fn.dataTable.ext.type.detect.push(\r\n\t\t *      function ( data, settings ) {\r\n\t\t *        // Check the numeric part\r\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\r\n\t\t *          return null;\r\n\t\t *        }\r\n\t\t *\r\n\t\t *        // Check prefixed by currency\r\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\r\n\t\t *          return 'currency';\r\n\t\t *        }\r\n\t\t *        return null;\r\n\t\t *      }\r\n\t\t *    );\r\n\t\t */\r\n\t\tdetect: [],\r\n\r\n\t\t/**\r\n\t\t * Automatic renderer assignment\r\n\t\t */\r\n\t\trender: {},\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based search formatting.\r\n\t\t *\r\n\t\t * The type based searching functions can be used to pre-format the\r\n\t\t * data to be search on. For example, it can be used to strip HTML\r\n\t\t * tags or to de-format telephone numbers for numeric only searching.\r\n\t\t *\r\n\t\t * Note that is a search is not defined for a column of a given type,\r\n\t\t * no search formatting will be performed.\r\n\t\t * \r\n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\r\n\t\t * for a column (or have it automatically detected for you by DataTables\r\n\t\t * or a type detection plug-in), you will typically be using this for\r\n\t\t * custom sorting, but it can also be used to provide custom searching\r\n\t\t * by allowing you to pre-processing the data and returning the data in\r\n\t\t * the format that should be searched upon. This is done by adding\r\n\t\t * functions this object with a parameter name which matches the sType\r\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\r\n\t\t * for searching data.\r\n\t\t *\r\n\t\t * The functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\r\n\t\t *\r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\r\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\r\n\t\t *    }\r\n\t\t */\r\n\t\tsearch: {},\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based ordering.\r\n\t\t *\r\n\t\t * The column type tells DataTables what ordering to apply to the table\r\n\t\t * when a column is sorted upon. The order for each type that is defined,\r\n\t\t * is defined by the functions available in this object.\r\n\t\t *\r\n\t\t * Each ordering option can be described by three properties added to\r\n\t\t * this object:\r\n\t\t *\r\n\t\t * * `{type}-pre` - Pre-formatting function\r\n\t\t * * `{type}-asc` - Ascending order function\r\n\t\t * * `{type}-desc` - Descending order function\r\n\t\t *\r\n\t\t * All three can be used together, only `{type}-pre` or only\r\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\r\n\t\t * that only `{type}-pre` is used, as this provides the optimal\r\n\t\t * implementation in terms of speed, although the others are provided\r\n\t\t * for compatibility with existing Javascript sort functions.\r\n\t\t *\r\n\t\t * `{type}-pre`: Functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\r\n\t\t *\r\n\t\t * And return:\r\n\t\t *\r\n\t\t * * `{*}` Data to be sorted upon\r\n\t\t *\r\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\r\n\t\t * functions, taking two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data to compare to the second parameter\r\n\t     *  2. `{*}` Data to compare to the first parameter\r\n\t\t *\r\n\t\t * And returning:\r\n\t\t *\r\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\r\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\r\n\t\t *   >0 if the first parameter should be sorted height than the second\r\n\t\t *   parameter.\r\n\t\t * \r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\r\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\r\n\t\t *      \"string-pre\": function(x) {\r\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\r\n\t\t *        return parseFloat( a );\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\r\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\r\n\t\t *      \"string-case-asc\": function(x,y) {\r\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t\t *      },\r\n\t\t *      \"string-case-desc\": function(x,y) {\r\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t */\r\n\t\torder: {}\r\n\t},\r\n\r\n\t/**\r\n\t * Unique DataTables instance counter\r\n\t *\r\n\t * @type int\r\n\t * @private\r\n\t */\r\n\t_unique: 0,\r\n\r\n\r\n\t//\r\n\t// Depreciated\r\n\t// The following properties are retained for backwards compatibility only.\r\n\t// The should not be used in new projects and will be removed in a future\r\n\t// version\r\n\t//\r\n\r\n\t/**\r\n\t * Version check function.\r\n\t *  @type function\r\n\t *  @depreciated Since 1.10\r\n\t */\r\n\tfnVersionCheck: DataTable.fnVersionCheck,\r\n\r\n\r\n\t/**\r\n\t * Index for what 'this' index API functions should use\r\n\t *  @type int\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tiApiIndex: 0,\r\n\r\n\r\n\t/**\r\n\t * Software version\r\n\t *  @type string\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tsVersion: DataTable.version\r\n};\r\n\r\n\r\n//\r\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\r\n//\r\n$.extend( _ext, {\r\n\tafnFiltering: _ext.search,\r\n\taTypes:       _ext.type.detect,\r\n\tofnSearch:    _ext.type.search,\r\n\toSort:        _ext.type.order,\r\n\tafnSortData:  _ext.order,\r\n\taoFeatures:   _ext.feature,\r\n\toStdClasses:  _ext.classes,\r\n\toPagination:  _ext.pager\r\n} );\r\n\r\n\r\n$.extend( DataTable.ext.classes, {\r\n\tcontainer: 'dt-container',\r\n\tempty: {\r\n\t\trow: 'dt-empty'\r\n\t},\r\n\tinfo: {\r\n\t\tcontainer: 'dt-info'\r\n\t},\r\n\tlayout: {\r\n\t\trow: 'dt-layout-row',\r\n\t\tcell: 'dt-layout-cell',\r\n\t\ttableRow: 'dt-layout-table',\r\n\t\ttableCell: '',\r\n\t\tstart: 'dt-layout-start',\r\n\t\tend: 'dt-layout-end',\r\n\t\tfull: 'dt-layout-full'\r\n\t},\r\n\tlength: {\r\n\t\tcontainer: 'dt-length',\r\n\t\tselect: 'dt-input'\r\n\t},\r\n\torder: {\r\n\t\tcanAsc: 'dt-orderable-asc',\r\n\t\tcanDesc: 'dt-orderable-desc',\r\n\t\tisAsc: 'dt-ordering-asc',\r\n\t\tisDesc: 'dt-ordering-desc',\r\n\t\tnone: 'dt-orderable-none',\r\n\t\tposition: 'sorting_'\r\n\t},\r\n\tprocessing: {\r\n\t\tcontainer: 'dt-processing'\r\n\t},\r\n\tscrolling: {\r\n\t\tbody: 'dt-scroll-body',\r\n\t\tcontainer: 'dt-scroll',\r\n\t\tfooter: {\r\n\t\t\tself: 'dt-scroll-foot',\r\n\t\t\tinner: 'dt-scroll-footInner'\r\n\t\t},\r\n\t\theader: {\r\n\t\t\tself: 'dt-scroll-head',\r\n\t\t\tinner: 'dt-scroll-headInner'\r\n\t\t}\r\n\t},\r\n\tsearch: {\r\n\t\tcontainer: 'dt-search',\r\n\t\tinput: 'dt-input'\r\n\t},\r\n\ttable: 'dataTable',\t\r\n\ttbody: {\r\n\t\tcell: '',\r\n\t\trow: ''\r\n\t},\r\n\tthead: {\r\n\t\tcell: '',\r\n\t\trow: ''\r\n\t},\r\n\ttfoot: {\r\n\t\tcell: '',\r\n\t\trow: ''\r\n\t},\r\n\tpaging: {\r\n\t\tactive: 'current',\r\n\t\tbutton: 'dt-paging-button',\r\n\t\tcontainer: 'dt-paging',\r\n\t\tdisabled: 'disabled',\r\n\t\tnav: ''\r\n\t}\r\n} );\r\n\r\n\r\n/*\r\n * It is useful to have variables which are scoped locally so only the\r\n * DataTables functions can access them and they don't leak into global space.\r\n * At the same time these functions are often useful over multiple files in the\r\n * core and API, so we list, or at least document, all variables which are used\r\n * by DataTables as private variables here. This also ensures that there is no\r\n * clashing of variable names and that they can easily referenced for reuse.\r\n */\r\n\r\n\r\n// Defined else where\r\n//  _selector_run\r\n//  _selector_opts\r\n//  _selector_row_indexes\r\n\r\nvar _ext; // DataTable.ext\r\nvar _Api; // DataTable.Api\r\nvar _api_register; // DataTable.Api.register\r\nvar _api_registerPlural; // DataTable.Api.registerPlural\r\n\r\nvar _re_dic = {};\r\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\r\nvar _re_html = /<([^>]*>)/g;\r\nvar _max_str_len = Math.pow(2, 28);\r\n\r\n// This is not strict ISO8601 - Date.parse() is quite lax, although\r\n// implementations differ between browsers.\r\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\r\n\r\n// Escape regular expression special characters\r\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\r\n\r\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\r\n// - \\u20BD - Russian ruble.\r\n// - \\u20a9 - South Korean Won\r\n// - \\u20BA - Turkish Lira\r\n// - \\u20B9 - Indian Rupee\r\n// - R - Brazil (R$) and South Africa\r\n// - fr - Swiss Franc\r\n// - kr - Swedish krona, Norwegian krone and Danish krone\r\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\r\n// - É - Bitcoin\r\n// - Î - Ethereum\r\n//   standards as thousands separators.\r\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\r\n\r\n\r\nvar _empty = function ( d ) {\r\n\treturn !d || d === true || d === '-' ? true : false;\r\n};\r\n\r\n\r\nvar _intVal = function ( s ) {\r\n\tvar integer = parseInt( s, 10 );\r\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\r\n};\r\n\r\n// Convert from a formatted number with characters other than `.` as the\r\n// decimal place, to a Javascript number\r\nvar _numToDecimal = function ( num, decimalPoint ) {\r\n\t// Cache created regular expressions for speed as this function is called often\r\n\tif ( ! _re_dic[ decimalPoint ] ) {\r\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\r\n\t}\r\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\r\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\r\n\t\tnum;\r\n};\r\n\r\n\r\nvar _isNumber = function ( d, decimalPoint, formatted, allowEmpty ) {\r\n\tvar type = typeof d;\r\n\tvar strType = type === 'string';\r\n\r\n\tif ( type === 'number' || type === 'bigint') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// If empty return immediately so there must be a number if it is a\r\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\r\n\t// as a formatted number for currency\r\n\tif ( allowEmpty && _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( decimalPoint && strType ) {\r\n\t\td = _numToDecimal( d, decimalPoint );\r\n\t}\r\n\r\n\tif ( formatted && strType ) {\r\n\t\td = d.replace( _re_formatted_numeric, '' );\r\n\t}\r\n\r\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\r\n};\r\n\r\n\r\n// A string without HTML in it can be considered to be HTML still\r\nvar _isHtml = function ( d ) {\r\n\treturn _empty( d ) || typeof d === 'string';\r\n};\r\n\r\n// Is a string a number surrounded by HTML?\r\nvar _htmlNumeric = function ( d, decimalPoint, formatted, allowEmpty ) {\r\n\tif ( allowEmpty && _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// input and select strings mean that this isn't just a number\r\n\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar html = _isHtml( d );\r\n\treturn ! html ?\r\n\t\tnull :\r\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted, allowEmpty ) ?\r\n\t\t\ttrue :\r\n\t\t\tnull;\r\n};\r\n\r\n\r\nvar _pluck = function ( a, prop, prop2 ) {\r\n\tvar out = [];\r\n\tvar i=0, ien=a.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] && a[i][ prop ] ) {\r\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] ) {\r\n\t\t\t\tout.push( a[i][ prop ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\r\n// as the indexes to pick from `a`\r\nvar _pluck_order = function ( a, order, prop, prop2 )\r\n{\r\n\tvar out = [];\r\n\tvar i=0, ien=order.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[ order[i] ] && a[ order[i] ][ prop ] ) {\r\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[ order[i] ] ) {\r\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _range = function ( len, start )\r\n{\r\n\tvar out = [];\r\n\tvar end;\r\n\r\n\tif ( start === undefined ) {\r\n\t\tstart = 0;\r\n\t\tend = len;\r\n\t}\r\n\telse {\r\n\t\tend = start;\r\n\t\tstart = len;\r\n\t}\r\n\r\n\tfor ( var i=start ; i<end ; i++ ) {\r\n\t\tout.push( i );\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _removeEmpty = function ( a )\r\n{\r\n\tvar out = [];\r\n\r\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\r\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\r\n\t\t\tout.push( a[i] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n// Replaceable function in api.util\r\nvar _stripHtml = function (input) {\r\n\tif (! input || typeof input !== 'string') {\r\n\t\treturn input;\r\n\t}\r\n\r\n\t// Irrelevant check to workaround CodeQL's false positive on the regex\r\n\tif (input.length > _max_str_len) {\r\n\t\tthrow new Error('Exceeded max str len');\r\n\t}\r\n\r\n\tvar previous;\r\n\r\n\tinput = input.replace(_re_html, ''); // Complete tags\r\n\r\n\t// Safety for incomplete script tag - use do / while to ensure that\r\n\t// we get all instances\r\n\tdo {\r\n\t\tprevious = input;\r\n\t\tinput = input.replace(/<script/i, '');\r\n\t} while (input !== previous);\r\n\r\n\treturn previous;\r\n};\r\n\r\n// Replaceable function in api.util\r\nvar _escapeHtml = function ( d ) {\r\n\tif (Array.isArray(d)) {\r\n\t\td = d.join(',');\r\n\t}\r\n\r\n\treturn typeof d === 'string' ?\r\n\t\td\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;') :\r\n\t\td;\r\n};\r\n\r\n// Remove diacritics from a string by decomposing it and then removing\r\n// non-ascii characters\r\nvar _normalize = function (str, both) {\r\n\tif (typeof str !== 'string') {\r\n\t\treturn str;\r\n\t}\r\n\r\n\t// It is faster to just run `normalize` than it is to check if\r\n\t// we need to with a regex! (Check as it isn't available in old\r\n\t// Safari)\r\n\tvar res = str.normalize\r\n\t\t? str.normalize(\"NFD\")\r\n\t\t: str;\r\n\r\n\t// Equally, here we check if a regex is needed or not\r\n\treturn res.length !== str.length\r\n\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\r\n\t\t: res;\r\n}\r\n\r\n/**\r\n * Determine if all values in the array are unique. This means we can short\r\n * cut the _unique method at the cost of a single loop. A sorted array is used\r\n * to easily check the values.\r\n *\r\n * @param  {array} src Source array\r\n * @return {boolean} true if all unique, false otherwise\r\n * @ignore\r\n */\r\nvar _areAllUnique = function ( src ) {\r\n\tif ( src.length < 2 ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar sorted = src.slice().sort();\r\n\tvar last = sorted[0];\r\n\r\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\r\n\t\tif ( sorted[i] === last ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlast = sorted[i];\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Find the unique elements in a source array.\r\n *\r\n * @param  {array} src Source array\r\n * @return {array} Array of unique items\r\n * @ignore\r\n */\r\nvar _unique = function ( src )\r\n{\r\n\tif (Array.from && Set) {\r\n\t\treturn Array.from(new Set(src));\r\n\t}\r\n\r\n\tif ( _areAllUnique( src ) ) {\r\n\t\treturn src.slice();\r\n\t}\r\n\r\n\t// A faster unique method is to use object keys to identify used values,\r\n\t// but this doesn't work with arrays or objects, which we must also\r\n\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\r\n\t// information.\r\n\tvar\r\n\t\tout = [],\r\n\t\tval,\r\n\t\ti, ien=src.length,\r\n\t\tj, k=0;\r\n\r\n\tagain: for ( i=0 ; i<ien ; i++ ) {\r\n\t\tval = src[i];\r\n\r\n\t\tfor ( j=0 ; j<k ; j++ ) {\r\n\t\t\tif ( out[j] === val ) {\r\n\t\t\t\tcontinue again;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tout.push( val );\r\n\t\tk++;\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n// Surprisingly this is faster than [].concat.apply\r\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\r\nvar _flatten = function (out, val) {\r\n\tif (Array.isArray(val)) {\r\n\t\tfor (var i=0 ; i<val.length ; i++) {\r\n\t\t\t_flatten(out, val[i]);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tout.push(val);\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n// Similar to jQuery's addClass, but use classList.add\r\nfunction _addClass(el, name) {\r\n\tif (name) {\r\n\t\tname.split(' ').forEach(function (n) {\r\n\t\t\tif (n) {\r\n\t\t\t\t// `add` does deduplication, so no need to check `contains`\r\n\t\t\t\tel.classList.add(n);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * DataTables utility methods\r\n * \r\n * This namespace provides helper methods that DataTables uses internally to\r\n * create a DataTable, but which are not exclusively used only for DataTables.\r\n * These methods can be used by extension authors to save the duplication of\r\n * code.\r\n *\r\n *  @namespace\r\n */\r\nDataTable.util = {\r\n\t/**\r\n\t * Return a string with diacritic characters decomposed\r\n\t * @param {*} mixed Function or string to normalize\r\n\t * @param {*} both Return original string and the normalized string\r\n\t * @returns String or undefined\r\n\t */\r\n\tdiacritics: function (mixed, both) {\r\n\t\tvar type = typeof mixed;\r\n\r\n\t\tif (type !== 'function') {\r\n\t\t\treturn _normalize(mixed, both);\r\n\t\t}\r\n\t\t_normalize = mixed;\r\n\t},\r\n\r\n\t/**\r\n\t * Debounce a function\r\n\t *\r\n\t * @param {function} fn Function to be called\r\n\t * @param {integer} freq Call frequency in mS\r\n\t * @return {function} Wrapped function\r\n\t */\r\n\tdebounce: function ( fn, timeout ) {\r\n\t\tvar timer;\r\n\r\n\t\treturn function () {\r\n\t\t\tvar that = this;\r\n\t\t\tvar args = arguments;\r\n\r\n\t\t\tclearTimeout(timer);\r\n\r\n\t\t\ttimer = setTimeout( function () {\r\n\t\t\t\tfn.apply(that, args);\r\n\t\t\t}, timeout || 250 );\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Throttle the calls to a function. Arguments and context are maintained\r\n\t * for the throttled function.\r\n\t *\r\n\t * @param {function} fn Function to be called\r\n\t * @param {integer} freq Call frequency in mS\r\n\t * @return {function} Wrapped function\r\n\t */\r\n\tthrottle: function ( fn, freq ) {\r\n\t\tvar\r\n\t\t\tfrequency = freq !== undefined ? freq : 200,\r\n\t\t\tlast,\r\n\t\t\ttimer;\r\n\r\n\t\treturn function () {\r\n\t\t\tvar\r\n\t\t\t\tthat = this,\r\n\t\t\t\tnow  = +new Date(),\r\n\t\t\t\targs = arguments;\r\n\r\n\t\t\tif ( last && now < last + frequency ) {\r\n\t\t\t\tclearTimeout( timer );\r\n\r\n\t\t\t\ttimer = setTimeout( function () {\r\n\t\t\t\t\tlast = undefined;\r\n\t\t\t\t\tfn.apply( that, args );\r\n\t\t\t\t}, frequency );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlast = now;\r\n\t\t\t\tfn.apply( that, args );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Escape a string such that it can be used in a regular expression\r\n\t *\r\n\t *  @param {string} val string to escape\r\n\t *  @returns {string} escaped string\r\n\t */\r\n\tescapeRegex: function ( val ) {\r\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will write to a nested object or array\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Write function\r\n\t */\r\n\tset: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\r\n\t\t\t * setting data since we don't know the type here. This is why an object\r\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\r\n\t\t\t * for `mRender` which is read only.\r\n\t\t\t */\r\n\t\t\treturn DataTable.util.set( source._ );\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Nothing to do when the data source is null\r\n\t\t\treturn function () {};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, val, meta) {\r\n\t\t\t\tsource( data, 'set', val, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if (\r\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\r\n\t\t) {\r\n\t\t\t// Like the get, we need to get data from a nested object\r\n\t\t\tvar setData = function (data, val, src) {\r\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\r\n\t\t\t\tvar aLast = a[a.length-1];\r\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\r\n\t\r\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\r\n\t\t\t\t\t// Protect against prototype pollution\r\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\r\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if we are dealing with an array notation request\r\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\t\t\t\t\tdata[ a[i] ] = [];\r\n\t\r\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\r\n\t\t\t\t\t\tb = a.slice();\r\n\t\t\t\t\t\tb.splice( 0, i+1 );\r\n\t\t\t\t\t\tinnerSrc = b.join('.');\r\n\t\r\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\r\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\to = {};\r\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\r\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\r\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\r\n\t\t\t\t\t\t\t// is to just save the value.\r\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\r\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\r\n\t\t\t\t\t// trying to set the value - create it\r\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\tdata[ a[i] ] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Last item in the input - i.e, the actual set\r\n\t\t\t\tif ( aLast.match(__reFn ) ) {\r\n\t\t\t\t\t// Function call\r\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\r\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\r\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\treturn setData( data, val, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\tdata[source] = val;\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will read nested objects from arrays, based on JSON notation\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Value read\r\n\t */\r\n\tget: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t// Build an object of get functions, and wrap them in a single call\r\n\t\t\tvar o = {};\r\n\t\t\t$.each( source, function (key, val) {\r\n\t\t\t\tif ( val ) {\r\n\t\t\t\t\to[key] = DataTable.util.get( val );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\tvar t = o[type] || o._;\r\n\t\t\t\treturn t !== undefined ?\r\n\t\t\t\t\tt(data, type, row, meta) :\r\n\t\t\t\t\tdata;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Give an empty string for rendering / sorting etc\r\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\treturn source( data, type, row, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if (\r\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\r\n\t\t) {\r\n\t\t\t/* If there is a . in the source string then the data source is in a\r\n\t\t\t * nested object so we loop over the data for each level to get the next\r\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\r\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\r\n\t\t\t * be used if defined, rather than throwing an error\r\n\t\t\t */\r\n\t\t\tvar fetchData = function (data, type, src) {\r\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\r\n\t\r\n\t\t\t\tif ( src !== \"\" ) {\r\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\r\n\t\r\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\t\t// Check if we are dealing with special notation\r\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\t\t// Array notation\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\r\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\r\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\r\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tout = [];\r\n\t\r\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\r\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\r\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\r\n\t\r\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\r\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\r\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\r\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\r\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\r\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\r\n\t\r\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\r\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn fetchData( data, type, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data) { // row and meta also passed, but not used\r\n\t\t\t\treturn data[source];\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\tstripHtml: function (mixed) {\r\n\t\tvar type = typeof mixed;\r\n\r\n\t\tif (type === 'function') {\r\n\t\t\t_stripHtml = mixed;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (type === 'string') {\r\n\t\t\treturn _stripHtml(mixed);\r\n\t\t}\r\n\t\treturn mixed;\r\n\t},\r\n\r\n\tescapeHtml: function (mixed) {\r\n\t\tvar type = typeof mixed;\r\n\r\n\t\tif (type === 'function') {\r\n\t\t\t_escapeHtml = mixed;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (type === 'string' || Array.isArray(mixed)) {\r\n\t\t\treturn _escapeHtml(mixed);\r\n\t\t}\r\n\t\treturn mixed;\r\n\t},\r\n\r\n\tunique: _unique\r\n};\r\n\r\n\r\n\r\n/**\r\n * Create a mapping object that allows camel case parameters to be looked up\r\n * for their Hungarian counterparts. The mapping is stored in a private\r\n * parameter called `_hungarianMap` which can be accessed on the source object.\r\n *  @param {object} o\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnHungarianMap ( o )\r\n{\r\n\tvar\r\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\r\n\t\tmatch,\r\n\t\tnewKey,\r\n\t\tmap = {};\r\n\r\n\t$.each( o, function (key) {\r\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\r\n\r\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\r\n\t\t{\r\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\r\n\t\t\tmap[ newKey ] = key;\r\n\r\n\t\t\tif ( match[1] === 'o' )\r\n\t\t\t{\r\n\t\t\t\t_fnHungarianMap( o[key] );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\to._hungarianMap = map;\r\n}\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\r\n * created by _fnHungarianMap.\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCamelToHungarian ( src, user, force )\r\n{\r\n\tif ( ! src._hungarianMap ) {\r\n\t\t_fnHungarianMap( src );\r\n\t}\r\n\r\n\tvar hungarianKey;\r\n\r\n\t$.each( user, function (key) {\r\n\t\thungarianKey = src._hungarianMap[ key ];\r\n\r\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\r\n\t\t{\r\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\r\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\r\n\t\t\t{\r\n\t\t\t\t// Copy the camelCase options over to the hungarian\r\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\r\n\t\t\t\t\tuser[ hungarianKey ] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\r\n\r\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tuser[hungarianKey] = user[ key ];\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n/**\r\n * Map one parameter onto another\r\n *  @param {object} o Object to map\r\n *  @param {*} knew The new parameter name\r\n *  @param {*} old The old parameter name\r\n */\r\nvar _fnCompatMap = function ( o, knew, old ) {\r\n\tif ( o[ knew ] !== undefined ) {\r\n\t\to[ old ] = o[ knew ];\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for the main DT options. Note that the new\r\n * options are mapped onto the old parameters, so this is an external interface\r\n * change only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatOpts ( init )\r\n{\r\n\t_fnCompatMap( init, 'ordering',      'bSort' );\r\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\r\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\r\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\r\n\t_fnCompatMap( init, 'order',         'aaSorting' );\r\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\r\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\r\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\r\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\r\n\t_fnCompatMap( init, 'searching',     'bFilter' );\r\n\r\n\t// Boolean initialisation of x-scrolling\r\n\tif ( typeof init.sScrollX === 'boolean' ) {\r\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\r\n\t}\r\n\tif ( typeof init.scrollX === 'boolean' ) {\r\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\r\n\t}\r\n\r\n\t// Column search objects are in an array, so it needs to be converted\r\n\t// element by element\r\n\tvar searchCols = init.aoSearchCols;\r\n\r\n\tif ( searchCols ) {\r\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\r\n\t\t\tif ( searchCols[i] ) {\r\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Enable search delay if server-side processing is enabled\r\n\tif (init.serverSide && ! init.searchDelay) {\r\n\t\tinit.searchDelay = 400;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for column options. Note that the new options\r\n * are mapped onto the old parameters, so this is an external interface change\r\n * only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatCols ( init )\r\n{\r\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\r\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\r\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\r\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\r\n\r\n\t// orderData can be given as an integer\r\n\tvar dataSort = init.aDataSort;\r\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\r\n\t\tinit.aDataSort = [ dataSort ];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Browser feature detection for capabilities, quirks\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBrowserDetect( settings )\r\n{\r\n\t// We don't need to do this every time DataTables is constructed, the values\r\n\t// calculated are specific to the browser and OS configuration which we\r\n\t// don't expect to change between initialisations\r\n\tif ( ! DataTable.__browser ) {\r\n\t\tvar browser = {};\r\n\t\tDataTable.__browser = browser;\r\n\r\n\t\t// Scrolling feature / quirks detection\r\n\t\tvar n = $('<div/>')\r\n\t\t\t.css( {\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\r\n\t\t\t\theight: 1,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\toverflow: 'hidden'\r\n\t\t\t} )\r\n\t\t\t.append(\r\n\t\t\t\t$('<div/>')\r\n\t\t\t\t\t.css( {\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\ttop: 1,\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\toverflow: 'scroll'\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.append(\r\n\t\t\t\t\t\t$('<div/>')\r\n\t\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: 10\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.appendTo( 'body' );\r\n\r\n\t\tvar outer = n.children();\r\n\t\tvar inner = outer.children();\r\n\r\n\t\t// Get scrollbar width\r\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\r\n\r\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\r\n\t\t// scrollbar on the left, rather than the right.\r\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\r\n\r\n\t\tn.remove();\r\n\t}\r\n\r\n\t$.extend( settings.oBrowser, DataTable.__browser );\r\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\r\n}\r\n\r\n/**\r\n * Add a column to the list used for the table with default values\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddColumn( oSettings )\r\n{\r\n\t// Add column to aoColumns array\r\n\tvar oDefaults = DataTable.defaults.column;\r\n\tvar iCol = oSettings.aoColumns.length;\r\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\r\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\r\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\r\n\t\tidx: iCol,\r\n\t\tsearchFixed: {},\r\n\t\tcolEl: $('<col>').attr('data-dt-column', iCol)\r\n\t} );\r\n\toSettings.aoColumns.push( oCol );\r\n\r\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\r\n\t// passed into extend can be undefined. This allows the user to give a default\r\n\t// with only some of the parameters defined, and also not give a default\r\n\tvar searchCols = oSettings.aoPreSearchCols;\r\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\r\n}\r\n\r\n\r\n/**\r\n * Apply options for a column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iCol column index to consider\r\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\r\n{\r\n\tvar oCol = oSettings.aoColumns[ iCol ];\r\n\r\n\t/* User specified column options */\r\n\tif ( oOptions !== undefined && oOptions !== null )\r\n\t{\r\n\t\t// Backwards compatibility\r\n\t\t_fnCompatCols( oOptions );\r\n\r\n\t\t// Map camel case parameters to their Hungarian counterparts\r\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\r\n\r\n\t\t/* Backwards compatibility for mDataProp */\r\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\r\n\t\t{\r\n\t\t\toOptions.mData = oOptions.mDataProp;\r\n\t\t}\r\n\r\n\t\tif ( oOptions.sType )\r\n\t\t{\r\n\t\t\toCol._sManualType = oOptions.sType;\r\n\t\t}\r\n\t\r\n\t\t// `class` is a reserved word in Javascript, so we need to provide\r\n\t\t// the ability to use a valid name for the camel case input\r\n\t\tif ( oOptions.className && ! oOptions.sClass )\r\n\t\t{\r\n\t\t\toOptions.sClass = oOptions.className;\r\n\t\t}\r\n\r\n\t\tvar origClass = oCol.sClass;\r\n\r\n\t\t$.extend( oCol, oOptions );\r\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\r\n\r\n\t\t// Merge class from previously defined classes with this one, rather than just\r\n\t\t// overwriting it in the extend above\r\n\t\tif (origClass !== oCol.sClass) {\r\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\r\n\t\t}\r\n\r\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\r\n\t\t * priority if defined\r\n\t\t */\r\n\t\tif ( oOptions.iDataSort !== undefined )\r\n\t\t{\r\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\r\n\t\t}\r\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\r\n\t}\r\n\r\n\t/* Cache the data get and set functions for speed */\r\n\tvar mDataSrc = oCol.mData;\r\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\r\n\r\n\t// The `render` option can be given as an array to access the helper rendering methods.\r\n\t// The first element is the rendering method to use, the rest are the parameters to pass\r\n\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\r\n\t\tvar copy = oCol.mRender.slice();\r\n\t\tvar name = copy.shift();\r\n\r\n\t\toCol.mRender = DataTable.render[name].apply(window, copy);\r\n\t}\r\n\r\n\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\r\n\r\n\tvar attrTest = function( src ) {\r\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\r\n\t};\r\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\r\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\r\n\t);\r\n\toCol._setter = null;\r\n\r\n\toCol.fnGetData = function (rowData, type, meta) {\r\n\t\tvar innerData = mData( rowData, type, undefined, meta );\r\n\r\n\t\treturn oCol._render && type ?\r\n\t\t\toCol._render( innerData, type, rowData, meta ) :\r\n\t\t\tinnerData;\r\n\t};\r\n\toCol.fnSetData = function ( rowData, val, meta ) {\r\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\r\n\t};\r\n\r\n\t// Indicate if DataTables should read DOM data as an object or array\r\n\t// Used in _fnGetRowElements\r\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\r\n\t\toSettings._rowReadObject = true;\r\n\t}\r\n\r\n\t/* Feature sorting overrides column specific when off */\r\n\tif ( !oSettings.oFeatures.bSort )\r\n\t{\r\n\t\toCol.bSortable = false;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Adjust the table column widths for new data. Note: you would probably want to\r\n * do a redraw after calling this function!\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAdjustColumnSizing ( settings )\r\n{\r\n\t_fnCalculateColumnWidths( settings );\r\n\t_fnColumnSizes( settings );\r\n\r\n\tvar scroll = settings.oScroll;\r\n\tif ( scroll.sY !== '' || scroll.sX !== '') {\r\n\t\t_fnScrollDraw( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\r\n}\r\n\r\n/**\r\n * Apply column sizes\r\n *\r\n * @param {*} settings DataTables settings object\r\n */\r\nfunction _fnColumnSizes ( settings )\r\n{\r\n\tvar cols = settings.aoColumns;\r\n\r\n\tfor (var i=0 ; i<cols.length ; i++) {\r\n\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\r\n\r\n\t\tcols[i].colEl.css('width', width);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of a visible column to the index in the data array (take account\r\n * of hidden columns)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iMatch Visible column index to lookup\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\r\n\treturn typeof aiVis[iMatch] === 'number' ?\r\n\t\taiVis[iMatch] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of an index in the data array and convert it to the visible\r\n *   column index (take account of hidden columns)\r\n *  @param {int} iMatch Column index to lookup\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\tvar iPos = aiVis.indexOf(iMatch);\r\n\r\n\treturn iPos !== -1 ? iPos : null;\r\n}\r\n\r\n\r\n/**\r\n * Get the number of visible columns\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the number of visible columns\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisbleColumns( settings )\r\n{\r\n\tvar layout = settings.aoHeader;\r\n\tvar columns = settings.aoColumns;\r\n\tvar vis = 0;\r\n\r\n\tif ( layout.length ) {\r\n\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\r\n\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\r\n\t\t\t\tvis++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn vis;\r\n}\r\n\r\n\r\n/**\r\n * Get an array of column indexes that match a given property\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sParam Parameter in aoColumns to look for - typically\r\n *    bVisible or bSearchable\r\n *  @returns {array} Array of indexes with matched properties\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetColumns( oSettings, sParam )\r\n{\r\n\tvar a = [];\r\n\r\n\toSettings.aoColumns.map( function(val, i) {\r\n\t\tif ( val[sParam] ) {\r\n\t\t\ta.push( i );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn a;\r\n}\r\n\r\n/**\r\n * Allow the result from a type detection function to be `true` while\r\n * translating that into a string. Old type detection functions will\r\n * return the type name if it passes. An obect store would be better,\r\n * but not backwards compatible.\r\n *\r\n * @param {*} typeDetect Object or function for type detection\r\n * @param {*} res Result from the type detection function\r\n * @returns Type name or false\r\n */\r\nfunction _typeResult (typeDetect, res) {\r\n\treturn res === true\r\n\t\t? typeDetect._name\r\n\t\t: res;\r\n}\r\n\r\n/**\r\n * Calculate the 'type' of a column\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnTypes ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar data = settings.aoData;\r\n\tvar types = DataTable.ext.type.detect;\r\n\tvar i, ien, j, jen, k, ken;\r\n\tvar col, detectedType, cache;\r\n\r\n\t// For each column, spin over the data type detection functions, seeing if one matches\r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcol = columns[i];\r\n\t\tcache = [];\r\n\r\n\t\tif ( ! col.sType && col._sManualType ) {\r\n\t\t\tcol.sType = col._sManualType;\r\n\t\t}\r\n\t\telse if ( ! col.sType ) {\r\n\t\t\t// With SSP type detection can be unreliable and error prone, so we provide a way\r\n\t\t\t// to turn it off.\r\n\t\t\tif (! settings.typeDetect) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\r\n\t\t\t\tvar typeDetect = types[j];\r\n\r\n\t\t\t\t// There can be either one, or three type detection functions\r\n\t\t\t\tvar oneOf = typeDetect.oneOf;\r\n\t\t\t\tvar allOf = typeDetect.allOf || typeDetect;\r\n\t\t\t\tvar init = typeDetect.init;\r\n\t\t\t\tvar one = false;\r\n\r\n\t\t\t\tdetectedType = null;\r\n\r\n\t\t\t\t// Fast detect based on column assignment\r\n\t\t\t\tif (init) {\r\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, init(settings, col, i));\r\n\r\n\t\t\t\t\tif (detectedType) {\r\n\t\t\t\t\t\tcol.sType = detectedType;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\r\n\t\t\t\t\tif (! data[k]) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Use a cache array so we only need to get the type data\r\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\r\n\t\t\t\t\tif ( cache[k] === undefined ) {\r\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only one data point in the column needs to match this function\r\n\t\t\t\t\tif (oneOf && ! one) {\r\n\t\t\t\t\t\tone = _typeResult(typeDetect, oneOf( cache[k], settings ));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// All data points need to match this function\r\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, allOf( cache[k], settings ));\r\n\r\n\t\t\t\t\t// If null, then this type can't apply to this column, so\r\n\t\t\t\t\t// rather than testing all cells, break out. There is an\r\n\t\t\t\t\t// exception for the last type which is `html`. We need to\r\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\r\n\t\t\t\t\t// types\r\n\t\t\t\t\tif ( ! detectedType && j !== types.length-3 ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only a single match is needed for html type since it is\r\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\r\n\t\t\t\t\t// must not be empty\r\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Type is valid for all data points in the column - use this\r\n\t\t\t\t// type\r\n\t\t\t\tif ( (oneOf && one && detectedType) || (!oneOf && detectedType) ) {\r\n\t\t\t\t\tcol.sType = detectedType;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fall back - if no type was detected, always use string\r\n\t\t\tif ( ! col.sType ) {\r\n\t\t\t\tcol.sType = 'string';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set class names for header / footer for auto type classes\r\n\t\tvar autoClass = _ext.type.className[col.sType];\r\n\r\n\t\tif (autoClass) {\r\n\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\r\n\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\r\n\t\t}\r\n\r\n\t\tvar renderer = _ext.type.render[col.sType];\r\n\r\n\t\t// This can only happen once! There is no way to remove\r\n\t\t// a renderer. After the first time the renderer has\r\n\t\t// already been set so createTr will run the renderer itself.\r\n\t\tif (renderer && ! col._render) {\r\n\t\t\tcol._render = DataTable.util.get(renderer);\r\n\r\n\t\t\t_columnAutoRender(settings, i);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Apply an auto detected renderer to data which doesn't yet have\r\n * a renderer\r\n */\r\nfunction _columnAutoRender(settings, colIdx) {\r\n\tvar data = settings.aoData;\r\n\r\n\tfor (var i=0 ; i<data.length ; i++) {\r\n\t\tif (data[i].nTr) {\r\n\t\t\t// We have to update the display here since there is no\r\n\t\t\t// invalidation check for the data\r\n\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\r\n\r\n\t\t\tdata[i].displayData[colIdx] = display;\r\n\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\r\n\r\n\t\t\t// No need to update sort / filter data since it has\r\n\t\t\t// been invalidated and will be re-read with the\r\n\t\t\t// renderer now applied\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Apply a class name to a column's header cells\r\n */\r\nfunction _columnAutoClass(container, colIdx, className) {\r\n\tcontainer.forEach(function (row) {\r\n\t\tif (row[colIdx] && row[colIdx].unique) {\r\n\t\t\t_addClass(row[colIdx].cell, className);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Take the column definitions and static columns arrays and calculate how\r\n * they relate to column indexes. The callback function will then apply the\r\n * definition found for a column to a suitable configuration object.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\r\n *  @param {array} aoCols The aoColumns array that defines columns individually\r\n *  @param {array} headerLayout Layout for header as it was loaded\r\n *  @param {function} fn Callback function - takes two parameters, the calculated\r\n *    column index and the definition for that column.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, def;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\tif ( aoCols ) {\r\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\r\n\t\t\tif (aoCols[i] && aoCols[i].name) {\r\n\t\t\t\tcolumns[i].sName = aoCols[i].name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Column definitions with aTargets\r\n\tif ( aoColDefs )\r\n\t{\r\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\r\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\r\n\t\t{\r\n\t\t\tdef = aoColDefs[i];\r\n\r\n\t\t\t/* Each definition can target multiple columns, as it is an array */\r\n\t\t\tvar aTargets = def.target !== undefined\r\n\t\t\t\t? def.target\r\n\t\t\t\t: def.targets !== undefined\r\n\t\t\t\t\t? def.targets\r\n\t\t\t\t\t: def.aTargets;\r\n\r\n\t\t\tif ( ! Array.isArray( aTargets ) )\r\n\t\t\t{\r\n\t\t\t\taTargets = [ aTargets ];\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\r\n\t\t\t{\r\n\t\t\t\tvar target = aTargets[j];\r\n\r\n\t\t\t\tif ( typeof target === 'number' && target >= 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Add columns that we don't yet know about */\r\n\t\t\t\t\twhile( columns.length <= target )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_fnAddColumn( oSettings );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* Integer, basic index */\r\n\t\t\t\t\tfn( target, def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof target === 'number' && target < 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Negative integer, right to left column counting */\r\n\t\t\t\t\tfn( columns.length+target, def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof target === 'string' )\r\n\t\t\t\t{\r\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\r\n\t\t\t\t\t\tif (target === '_all') {\r\n\t\t\t\t\t\t\t// Apply to all columns\r\n\t\t\t\t\t\t\tfn( k, def );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (target.indexOf(':name') !== -1) {\r\n\t\t\t\t\t\t\t// Column selector\r\n\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\r\n\t\t\t\t\t\t\t\tfn( k, def );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// Cell selector\r\n\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\r\n\t\t\t\t\t\t\t\tif (row[k]) {\r\n\t\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\r\n\r\n\t\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\r\n\t\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\r\n\t\t\t\t\t\t\t\t\t// class names for 1.x compat.\r\n\t\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\r\n\t\t\t\t\t\t\t\t\t\ttarget = '.' + target;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (cell.is( target )) {\r\n\t\t\t\t\t\t\t\t\t\tfn( k, def );\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Statically defined columns array\r\n\tif ( aoCols ) {\r\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\r\n\t\t\tfn( i, aoCols[i] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get the width for a given set of columns\r\n *\r\n * @param {*} settings DataTables settings object\r\n * @param {*} targets Columns - comma separated string or array of numbers\r\n * @param {*} original Use the original width (true) or calculated (false)\r\n * @param {*} incVisible Include visible columns (true) or not (false)\r\n * @returns Combined CSS value\r\n */\r\nfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\r\n\tif ( ! Array.isArray( targets ) ) {\r\n\t\ttargets = _fnColumnsFromHeader( targets );\r\n\t}\r\n\r\n\tvar sum = 0;\r\n\tvar unit;\r\n\tvar columns = settings.aoColumns;\r\n\t\r\n\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\r\n\t\tvar column = columns[ targets[i] ];\r\n\t\tvar definedWidth = original ?\r\n\t\t\tcolumn.sWidthOrig :\r\n\t\t\tcolumn.sWidth;\r\n\r\n\t\tif ( ! incVisible && column.bVisible === false ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif ( definedWidth === null || definedWidth === undefined ) {\r\n\t\t\treturn null; // can't determine a defined width - browser defined\r\n\t\t}\r\n\t\telse if ( typeof definedWidth === 'number' ) {\r\n\t\t\tunit = 'px';\r\n\t\t\tsum += definedWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\r\n\r\n\t\t\tif ( matched ) {\r\n\t\t\t\tsum += matched[1] * 1;\r\n\t\t\t\tunit = matched.length === 3 ?\r\n\t\t\t\t\tmatched[2] :\r\n\t\t\t\t\t'px';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn sum + unit;\r\n}\r\n\r\nfunction _fnColumnsFromHeader( cell )\r\n{\r\n\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\r\n\r\n\tif ( ! attr ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\treturn attr.split(',').map( function (val) {\r\n\t\treturn val * 1;\r\n\t} );\r\n}\r\n/**\r\n * Add a data array to the table, creating DOM node etc. This is the parallel to\r\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\r\n * DOM source.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {array} data data array to be added\r\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddData ( settings, dataIn, tr, tds )\r\n{\r\n\t/* Create the object for storing information about this new row */\r\n\tvar rowIdx = settings.aoData.length;\r\n\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\r\n\t\tsrc: tr ? 'dom' : 'data',\r\n\t\tidx: rowIdx\r\n\t} );\r\n\r\n\trowModel._aData = dataIn;\r\n\tsettings.aoData.push( rowModel );\r\n\r\n\tvar columns = settings.aoColumns;\r\n\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\t// Invalidate the column types as the new data needs to be revalidated\r\n\t\tcolumns[i].sType = null;\r\n\t}\r\n\r\n\t/* Add to the display array */\r\n\tsettings.aiDisplayMaster.push( rowIdx );\r\n\r\n\tvar id = settings.rowIdFn( dataIn );\r\n\tif ( id !== undefined ) {\r\n\t\tsettings.aIds[ id ] = rowModel;\r\n\t}\r\n\r\n\t/* Create the DOM information, or register it if already present */\r\n\tif ( tr || ! settings.oFeatures.bDeferRender )\r\n\t{\r\n\t\t_fnCreateTr( settings, rowIdx, tr, tds );\r\n\t}\r\n\r\n\treturn rowIdx;\r\n}\r\n\r\n\r\n/**\r\n * Add one or more TR elements to the table. Generally we'd expect to\r\n * use this for reading data from a DOM sourced table, but it could be\r\n * used for an TR element. Note that if a TR is given, it is used (i.e.\r\n * it is not cloned).\r\n *  @param {object} settings dataTables settings object\r\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\r\n *  @returns {array} Array of indexes for the added rows\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddTr( settings, trs )\r\n{\r\n\tvar row;\r\n\r\n\t// Allow an individual node to be passed in\r\n\tif ( ! (trs instanceof $) ) {\r\n\t\ttrs = $(trs);\r\n\t}\r\n\r\n\treturn trs.map( function (i, el) {\r\n\t\trow = _fnGetRowElements( settings, el );\r\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Get the data for a given cell from the internal cache, taking into account data mapping\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\r\n *  @returns {*} Cell data\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\r\n{\r\n\tif (type === 'search') {\r\n\t\ttype = 'filter';\r\n\t}\r\n\telse if (type === 'order') {\r\n\t\ttype = 'sort';\r\n\t}\r\n\r\n\tvar row = settings.aoData[rowIdx];\r\n\r\n\tif (! row) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tvar draw           = settings.iDraw;\r\n\tvar col            = settings.aoColumns[colIdx];\r\n\tvar rowData        = row._aData;\r\n\tvar defaultContent = col.sDefaultContent;\r\n\tvar cellData       = col.fnGetData( rowData, type, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t} );\r\n\r\n\t// Allow for a node being returned for non-display types\r\n\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\r\n\t\tcellData = cellData.innerHTML;\r\n\t}\r\n\r\n\tif ( cellData === undefined ) {\r\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\r\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\r\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\r\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\r\n\t\t\tsettings.iDrawError = draw;\r\n\t\t}\r\n\t\treturn defaultContent;\r\n\t}\r\n\r\n\t// When the data source is null and a specific data type is requested (i.e.\r\n\t// not the original data), we can use default column data\r\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\r\n\t\tcellData = defaultContent;\r\n\t}\r\n\telse if ( typeof cellData === 'function' ) {\r\n\t\t// If the data source is a function, then we run it and use the return,\r\n\t\t// executing in the scope of the data object (for instances)\r\n\t\treturn cellData.call( rowData );\r\n\t}\r\n\r\n\tif ( cellData === null && type === 'display' ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tif ( type === 'filter' ) {\r\n\t\tvar fomatters = DataTable.ext.type.search;\r\n\r\n\t\tif ( fomatters[ col.sType ] ) {\r\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\r\n\t\t}\r\n\t}\r\n\r\n\treturn cellData;\r\n}\r\n\r\n\r\n/**\r\n * Set the value for a specific cell, into the internal data cache\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {*} val Value to set\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\r\n{\r\n\tvar col     = settings.aoColumns[colIdx];\r\n\tvar rowData = settings.aoData[rowIdx]._aData;\r\n\r\n\tcol.fnSetData( rowData, val, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t}  );\r\n}\r\n\r\n/**\r\n * Write a value to a cell\r\n * @param {*} td Cell\r\n * @param {*} val Value\r\n */\r\nfunction _fnWriteCell(td, val)\r\n{\r\n\tif (val && typeof val === 'object' && val.nodeName) {\r\n\t\t$(td)\r\n\t\t\t.empty()\r\n\t\t\t.append(val);\r\n\t}\r\n\telse {\r\n\t\ttd.innerHTML = val;\r\n\t}\r\n}\r\n\r\n\r\n// Private variable that is used to match action syntax in the data property object\r\nvar __reArray = /\\[.*?\\]$/;\r\nvar __reFn = /\\(\\)$/;\r\n\r\n/**\r\n * Split string on periods, taking into account escaped periods\r\n * @param  {string} str String to split\r\n * @return {array} Split string\r\n */\r\nfunction _fnSplitObjNotation( str )\r\n{\r\n\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\r\n\r\n\treturn parts.map( function ( s ) {\r\n\t\treturn s.replace(/\\\\\\./g, '.');\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Return a function that can be used to get data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data get function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnGetObjectDataFn = DataTable.util.get;\r\n\r\n\r\n/**\r\n * Return a function that can be used to set data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data set function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnSetObjectDataFn = DataTable.util.set;\r\n\r\n\r\n/**\r\n * Return an array with the full table data\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns array {array} aData Master data array\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetDataMaster ( settings )\r\n{\r\n\treturn _pluck( settings.aoData, '_aData' );\r\n}\r\n\r\n\r\n/**\r\n * Nuke the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnClearTable( settings )\r\n{\r\n\tsettings.aoData.length = 0;\r\n\tsettings.aiDisplayMaster.length = 0;\r\n\tsettings.aiDisplay.length = 0;\r\n\tsettings.aIds = {};\r\n}\r\n\r\n\r\n/**\r\n * Mark cached data as invalid such that a re-read of the data will occur when\r\n * the cached data is next requested. Also update from the data source object.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {int}    rowIdx   Row index to invalidate\r\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\r\n *     or 'data'\r\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\r\n *     row will be invalidated\r\n * @memberof DataTable#oApi\r\n *\r\n * @todo For the modularisation of v1.11 this will need to become a callback, so\r\n *   the sort and filter methods can subscribe to it. That will required\r\n *   initialisation options for sorting, which is why it is not already baked in\r\n */\r\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\r\n{\r\n\tvar row = settings.aoData[ rowIdx ];\r\n\tvar i, ien;\r\n\r\n\t// Remove the cached data for the row\r\n\trow._aSortData = null;\r\n\trow._aFilterData = null;\r\n\trow.displayData = null;\r\n\r\n\t// Are we reading last data from DOM or the data object?\r\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\r\n\t\t// Read the data from the DOM\r\n\t\trow._aData = _fnGetRowElements(\r\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\r\n\t\t\t)\r\n\t\t\t.data;\r\n\t}\r\n\telse {\r\n\t\t// Reading from data object, update the DOM\r\n\t\tvar cells = row.anCells;\r\n\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\r\n\r\n\t\tif ( cells ) {\r\n\t\t\tif ( colIdx !== undefined ) {\r\n\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Column specific invalidation\r\n\tvar cols = settings.aoColumns;\r\n\tif ( colIdx !== undefined ) {\r\n\t\t// Type - the data might have changed\r\n\t\tcols[ colIdx ].sType = null;\r\n\r\n\t\t// Max length string. Its a fairly cheep recalculation, so not worth\r\n\t\t// something more complicated\r\n\t\tcols[ colIdx ].maxLenString = null;\r\n\t}\r\n\telse {\r\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\r\n\t\t\tcols[i].sType = null;\r\n\t\t\tcols[i].maxLenString = null;\r\n\t\t}\r\n\r\n\t\t// Update DataTables special `DT_*` attributes for the row\r\n\t\t_fnRowAttributes( settings, row );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a data source object from an HTML row, reading the contents of the\r\n * cells that are in the row.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {node|object} TR element from which to read data or existing row\r\n *   object from which to re-read the data from the cells\r\n * @param {int} [colIdx] Optional column index\r\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\r\n *   parameter should also be given and will be used to write the data into.\r\n *   Only the column in question will be written\r\n * @returns {object} Object with two parameters: `data` the data read, in\r\n *   document order, and `cells` and array of nodes (they can be useful to the\r\n *   caller, so rather than needing a second traversal to get them, just return\r\n *   them from here).\r\n * @memberof DataTable#oApi\r\n */\r\nfunction _fnGetRowElements( settings, row, colIdx, d )\r\n{\r\n\tvar\r\n\t\ttds = [],\r\n\t\ttd = row.firstChild,\r\n\t\tname, col, i=0, contents,\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tobjectRead = settings._rowReadObject;\r\n\r\n\t// Allow the data object to be passed in, or construct\r\n\td = d !== undefined ?\r\n\t\td :\r\n\t\tobjectRead ?\r\n\t\t\t{} :\r\n\t\t\t[];\r\n\r\n\tvar attr = function ( str, td  ) {\r\n\t\tif ( typeof str === 'string' ) {\r\n\t\t\tvar idx = str.indexOf('@');\r\n\r\n\t\t\tif ( idx !== -1 ) {\r\n\t\t\t\tvar attr = str.substring( idx+1 );\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\r\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Read data from a cell and store into the data object\r\n\tvar cellProcess = function ( cell ) {\r\n\t\tif ( colIdx === undefined || colIdx === i ) {\r\n\t\t\tcol = columns[i];\r\n\t\t\tcontents = (cell.innerHTML).trim();\r\n\r\n\t\t\tif ( col && col._bAttrSrc ) {\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\r\n\t\t\t\tsetter( d, contents );\r\n\r\n\t\t\t\tattr( col.mData.sort, cell );\r\n\t\t\t\tattr( col.mData.type, cell );\r\n\t\t\t\tattr( col.mData.filter, cell );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Depending on the `data` option for the columns the data can\r\n\t\t\t\t// be read to either an object or an array.\r\n\t\t\t\tif ( objectRead ) {\r\n\t\t\t\t\tif ( ! col._setter ) {\r\n\t\t\t\t\t\t// Cache the setter function\r\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcol._setter( d, contents );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td[i] = contents;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t};\r\n\r\n\tif ( td ) {\r\n\t\t// `tr` element was passed in\r\n\t\twhile ( td ) {\r\n\t\t\tname = td.nodeName.toUpperCase();\r\n\r\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\r\n\t\t\t\tcellProcess( td );\r\n\t\t\t\ttds.push( td );\r\n\t\t\t}\r\n\r\n\t\t\ttd = td.nextSibling;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Existing row object passed in\r\n\t\ttds = row.anCells;\r\n\r\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\r\n\t\t\tcellProcess( tds[j] );\r\n\t\t}\r\n\t}\r\n\r\n\t// Read the ID from the DOM if present\r\n\tvar rowNode = row.firstChild ? row : row.nTr;\r\n\r\n\tif ( rowNode ) {\r\n\t\tvar id = rowNode.getAttribute( 'id' );\r\n\r\n\t\tif ( id ) {\r\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tdata: d,\r\n\t\tcells: tds\r\n\t};\r\n}\r\n\r\n/**\r\n * Render and cache a row's display data for the columns, if required\r\n * @returns \r\n */\r\nfunction _fnGetRowDisplay (settings, rowIdx) {\r\n\tvar rowModal = settings.aoData[rowIdx];\r\n\tvar columns = settings.aoColumns;\r\n\r\n\tif (! rowModal.displayData) {\r\n\t\t// Need to render and cache\r\n\t\trowModal.displayData = [];\r\n\t\r\n\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\r\n\t\t\trowModal.displayData.push(\r\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn rowModal.displayData;\r\n}\r\n\r\n/**\r\n * Create a new TR element (and it's TD children) for a row\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow Row to consider\r\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\r\n{\r\n\tvar\r\n\t\trow = oSettings.aoData[iRow],\r\n\t\trowData = row._aData,\r\n\t\tcells = [],\r\n\t\tnTr, nTd, oCol,\r\n\t\ti, iLen, create,\r\n\t\ttrClass = oSettings.oClasses.tbody.row;\r\n\r\n\tif ( row.nTr === null )\r\n\t{\r\n\t\tnTr = nTrIn || document.createElement('tr');\r\n\r\n\t\trow.nTr = nTr;\r\n\t\trow.anCells = cells;\r\n\r\n\t\t_addClass(nTr, trClass);\r\n\r\n\t\t/* Use a private property on the node to allow reserve mapping from the node\r\n\t\t * to the aoData array for fast look up\r\n\t\t */\r\n\t\tnTr._DT_RowIndex = iRow;\r\n\r\n\t\t/* Special parameters can be given by the data source to be used on the row */\r\n\t\t_fnRowAttributes( oSettings, row );\r\n\r\n\t\t/* Process each column */\r\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\toCol = oSettings.aoColumns[i];\r\n\t\t\tcreate = nTrIn && anTds[i] ? false : true;\r\n\r\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\r\n\r\n\t\t\tif (! nTd) {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\r\n\t\t\tnTd._DT_CellIndex = {\r\n\t\t\t\trow: iRow,\r\n\t\t\t\tcolumn: i\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tcells.push( nTd );\r\n\t\t\t\r\n\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\r\n\r\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\r\n\t\t\tif (\r\n\t\t\t\tcreate ||\r\n\t\t\t\t(\r\n\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\r\n\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\t_fnWriteCell(nTd, display[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// column class\r\n\t\t\t_addClass(nTd, oCol.sClass);\r\n\r\n\t\t\t// Visibility - add or remove as required\r\n\t\t\tif ( oCol.bVisible && create )\r\n\t\t\t{\r\n\t\t\t\tnTr.appendChild( nTd );\r\n\t\t\t}\r\n\t\t\telse if ( ! oCol.bVisible && ! create )\r\n\t\t\t{\r\n\t\t\t\tnTd.parentNode.removeChild( nTd );\r\n\t\t\t}\r\n\r\n\t\t\tif ( oCol.fnCreatedCell )\r\n\t\t\t{\r\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\r\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\r\n\t}\r\n\telse {\r\n\t\t_addClass(row.nTr, trClass);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Add attributes to a row based on the special `DT_*` parameters in a data\r\n * source object.\r\n *  @param {object} settings DataTables settings object\r\n *  @param {object} DataTables row object for the row to be modified\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnRowAttributes( settings, row )\r\n{\r\n\tvar tr = row.nTr;\r\n\tvar data = row._aData;\r\n\r\n\tif ( tr ) {\r\n\t\tvar id = settings.rowIdFn( data );\r\n\r\n\t\tif ( id ) {\r\n\t\t\ttr.id = id;\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowClass ) {\r\n\t\t\t// Remove any classes added by DT_RowClass before\r\n\t\t\tvar a = data.DT_RowClass.split(' ');\r\n\t\t\trow.__rowc = row.__rowc ?\r\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\r\n\t\t\t\ta;\r\n\r\n\t\t\t$(tr)\r\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\r\n\t\t\t\t.addClass( data.DT_RowClass );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowAttr ) {\r\n\t\t\t$(tr).attr( data.DT_RowAttr );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowData ) {\r\n\t\t\t$(tr).data( data.DT_RowData );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Create the HTML header for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBuildHead( settings, side )\r\n{\r\n\tvar classes = settings.oClasses;\r\n\tvar columns = settings.aoColumns;\r\n\tvar i, ien, row;\r\n\tvar target = side === 'header'\r\n\t\t? settings.nTHead\r\n\t\t: settings.nTFoot;\r\n\tvar titleProp = side === 'header' ? 'sTitle' : side;\r\n\r\n\t// Footer might be defined\r\n\tif (! target) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// If no cells yet and we have content for them, then create\r\n\tif (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\r\n\t\trow = $('tr', target);\r\n\r\n\t\t// Add a row if needed\r\n\t\tif (! row.length) {\r\n\t\t\trow = $('<tr/>').appendTo(target)\r\n\t\t}\r\n\r\n\t\t// Add the number of cells needed to make up to the number of columns\r\n\t\tif (row.length === 1) {\r\n\t\t\tvar cells = $('td, th', row);\r\n\r\n\t\t\tfor ( i=cells.length, ien=columns.length ; i<ien ; i++ ) {\r\n\t\t\t\t$('<th/>')\r\n\t\t\t\t\t.html( columns[i][titleProp] || '' )\r\n\t\t\t\t\t.appendTo( row );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar detected = _fnDetectHeader( settings, target, true );\r\n\r\n\tif (side === 'header') {\r\n\t\tsettings.aoHeader = detected;\r\n\t}\r\n\telse {\r\n\t\tsettings.aoFooter = detected;\r\n\t}\r\n\r\n\t// Every cell needs to be passed through the renderer\r\n\t$(target).children('tr').children('th, td')\r\n\t\t.each( function () {\r\n\t\t\t_fnRenderer( settings, side )(\r\n\t\t\t\tsettings, $(this), classes\r\n\t\t\t);\r\n\t\t} );\r\n}\r\n\r\n/**\r\n * Build a layout structure for a header or footer\r\n *\r\n * @param {*} settings DataTables settings\r\n * @param {*} source Source layout array\r\n * @param {*} incColumns What columns should be included\r\n * @returns Layout array\r\n */\r\nfunction _fnHeaderLayout( settings, source, incColumns )\r\n{\r\n\tvar row, column, cell;\r\n\tvar local = [];\r\n\tvar structure = [];\r\n\tvar columns = settings.aoColumns;\r\n\tvar columnCount = columns.length;\r\n\tvar rowspan, colspan;\r\n\r\n\tif ( ! source ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Default is to work on only visible columns\r\n\tif ( ! incColumns ) {\r\n\t\tincColumns = _range(columnCount)\r\n\t\t\t.filter(function (idx) {\r\n\t\t\t\treturn columns[idx].bVisible;\r\n\t\t\t});\r\n\t}\r\n\r\n\t// Make a copy of the master layout array, but with only the columns we want\r\n\tfor ( row=0 ; row<source.length ; row++ ) {\r\n\t\t// Remove any columns we haven't selected\r\n\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\r\n\t\t\treturn incColumns.includes(i);\r\n\t\t});\r\n\r\n\t\t// Prep the structure array - it needs an element for each row\r\n\t\tstructure.push( [] );\r\n\t}\r\n\r\n\tfor ( row=0 ; row<local.length ; row++ ) {\r\n\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\r\n\t\t\trowspan = 1;\r\n\t\t\tcolspan = 1;\r\n\r\n\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\r\n\t\t\t// insert point. If there is, then there is nothing to do.\r\n\t\t\tif ( structure[row][column] === undefined ) {\r\n\t\t\t\tcell = local[row][column].cell;\r\n\r\n\t\t\t\t// Expand for rowspan\r\n\t\t\t\twhile (\r\n\t\t\t\t\tlocal[row+rowspan] !== undefined &&\r\n\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\r\n\t\t\t\t) {\r\n\t\t\t\t\tstructure[row+rowspan][column] = null;\r\n\t\t\t\t\trowspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// And for colspan\r\n\t\t\t\twhile (\r\n\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\r\n\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Which also needs to go over rows\r\n\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\r\n\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar titleSpan = $('span.dt-column-title', cell);\r\n\r\n\t\t\t\tstructure[row][column] = {\r\n\t\t\t\t\tcell: cell,\r\n\t\t\t\t\tcolspan: colspan,\r\n\t\t\t\t\trowspan: rowspan,\r\n\t\t\t\t\ttitle: titleSpan.length\r\n\t\t\t\t\t\t? titleSpan.html()\r\n\t\t\t\t\t\t: $(cell).html()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn structure;\r\n}\r\n\r\n\r\n/**\r\n * Draw the header (or footer) element based on the column visibility states.\r\n *\r\n *  @param object oSettings dataTables settings object\r\n *  @param array aoSource Layout array from _fnDetectHeader\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDrawHead( settings, source )\r\n{\r\n\tvar layout = _fnHeaderLayout(settings, source);\r\n\tvar tr, n;\r\n\r\n\tfor ( var row=0 ; row<source.length ; row++ ) {\r\n\t\ttr = source[row].row;\r\n\r\n\t\t// All cells are going to be replaced, so empty out the row\r\n\t\t// Can't use $().empty() as that kills event handlers\r\n\t\tif (tr) {\r\n\t\t\twhile( (n = tr.firstChild) ) {\r\n\t\t\t\ttr.removeChild( n );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\r\n\t\t\tvar point = layout[row][column];\r\n\r\n\t\t\tif (point) {\r\n\t\t\t\t$(point.cell)\r\n\t\t\t\t\t.appendTo(tr)\r\n\t\t\t\t\t.attr('rowspan', point.rowspan)\r\n\t\t\t\t\t.attr('colspan', point.colspan);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Insert the required TR nodes into the table for display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param ajaxComplete true after ajax call to complete rendering\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDraw( oSettings, ajaxComplete )\r\n{\r\n\t// Allow for state saving and a custom start position\r\n\t_fnStart( oSettings );\r\n\r\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\r\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\r\n\tif ( aPreDraw.indexOf(false) !== -1 )\r\n\t{\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar anRows = [];\r\n\tvar iRowCount = 0;\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar aiDisplay = oSettings.aiDisplay;\r\n\tvar iDisplayStart = oSettings._iDisplayStart;\r\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\r\n\tvar columns = oSettings.aoColumns;\r\n\tvar body = $(oSettings.nTBody);\r\n\r\n\toSettings.bDrawing = true;\r\n\r\n\t/* Server-side processing draw intercept */\r\n\tif ( oSettings.deferLoading )\r\n\t{\r\n\t\toSettings.deferLoading = false;\r\n\t\toSettings.iDraw++;\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t}\r\n\telse if ( !bServerSide )\r\n\t{\r\n\t\toSettings.iDraw++;\r\n\t}\r\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\r\n\t{\r\n\t\t// Show loading message for server-side processing\r\n\t\tif (oSettings.iDraw === 0) {\r\n\t\t\tbody.empty().append(_emptyRow(oSettings));\r\n\t\t}\r\n\r\n\t\t_fnAjaxUpdate( oSettings );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( aiDisplay.length !== 0 )\r\n\t{\r\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\r\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\r\n\r\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\r\n\t\t{\r\n\t\t\tvar iDataIndex = aiDisplay[j];\r\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\r\n\t\t\tif ( aoData.nTr === null )\r\n\t\t\t{\r\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\r\n\t\t\t}\r\n\r\n\t\t\tvar nRow = aoData.nTr;\r\n\r\n\t\t\t// Add various classes as needed\r\n\t\t\tfor (var i=0 ; i<columns.length ; i++) {\r\n\t\t\t\tvar col = columns[i];\r\n\t\t\t\tvar td = aoData.anCells[i];\r\n\r\n\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\r\n\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\r\n\t\t\t}\r\n\r\n\t\t\t// Row callback functions - might want to manipulate the row\r\n\t\t\t// iRowCount and j are not currently documented. Are they at all\r\n\t\t\t// useful?\r\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\r\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\r\n\r\n\t\t\tanRows.push( nRow );\r\n\t\t\tiRowCount++;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tanRows[ 0 ] = _emptyRow(oSettings);\r\n\t}\r\n\r\n\t/* Header and footer callbacks */\r\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\t// replaceChildren is faster, but only became widespread in 2020,\r\n\t// so a fall back in jQuery is provided for older browsers.\r\n\tif (body[0].replaceChildren) {\r\n\t\tbody[0].replaceChildren.apply(body[0], anRows);\r\n\t}\r\n\telse {\r\n\t\tbody.children().detach();\r\n\t\tbody.append( $(anRows) );\r\n\t}\r\n\r\n\t// Empty table needs a specific class\r\n\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\r\n\r\n\t/* Call all required callback functions for the end of a draw */\r\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\r\n\r\n\t/* Draw is complete, sorting and filtering must be as well */\r\n\toSettings.bSorted = false;\r\n\toSettings.bFiltered = false;\r\n\toSettings.bDrawing = false;\r\n}\r\n\r\n\r\n/**\r\n * Redraw the table - taking account of the various features which are enabled\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\r\n *    the paging is reset to the first page\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReDraw( settings, holdPosition, recompute )\r\n{\r\n\tvar\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tsort     = features.bSort,\r\n\t\tfilter   = features.bFilter;\r\n\r\n\tif (recompute === undefined || recompute === true) {\r\n\t\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t\t_fnColumnTypes( settings );\r\n\r\n\t\tif ( sort ) {\r\n\t\t\t_fnSort( settings );\r\n\t\t}\r\n\r\n\t\tif ( filter ) {\r\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No filtering, so we want to just use the display master\r\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\t\t}\r\n\t}\r\n\r\n\tif ( holdPosition !== true ) {\r\n\t\tsettings._iDisplayStart = 0;\r\n\t}\r\n\r\n\t// Let any modules know about the draw hold position state (used by\r\n\t// scrolling internally)\r\n\tsettings._drawHold = holdPosition;\r\n\r\n\t_fnDraw( settings );\r\n\r\n\tsettings._drawHold = false;\r\n}\r\n\r\n\r\n/*\r\n * Table is empty - create a row with an empty message in it\r\n */\r\nfunction _emptyRow ( settings ) {\r\n\tvar oLang = settings.oLanguage;\r\n\tvar zero = oLang.sZeroRecords;\r\n\tvar dataSrc = _fnDataSource( settings );\r\n\r\n\tif (\r\n\t\t(settings.iDraw < 1 && dataSrc === 'ssp') ||\r\n\t\t(settings.iDraw <= 1 && dataSrc === 'ajax')\r\n\t) {\r\n\t\tzero = oLang.sLoadingRecords;\r\n\t}\r\n\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\r\n\t{\r\n\t\tzero = oLang.sEmptyTable;\r\n\t}\r\n\r\n\treturn $( '<tr/>' )\r\n\t\t.append( $('<td />', {\r\n\t\t\t'colSpan': _fnVisbleColumns( settings ),\r\n\t\t\t'class':   settings.oClasses.empty.row\r\n\t\t} ).html( zero ) )[0];\r\n}\r\n\r\n\r\n/**\r\n * Expand the layout items into an object for the rendering function\r\n */\r\nfunction _layoutItems (row, align, items) {\r\n\tif ( Array.isArray(items)) {\r\n\t\tfor (var i=0 ; i<items.length ; i++) {\r\n\t\t\t_layoutItems(row, align, items[i]);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar rowCell = row[align];\r\n\r\n\t// If it is an object, then there can be multiple features contained in it\r\n\tif ( $.isPlainObject( items ) ) {\r\n\t\t// A feature plugin cannot be named \"features\" due to this check\r\n\t\tif (items.features) {\r\n\t\t\tif (items.rowId) {\r\n\t\t\t\trow.id = items.rowId;\r\n\t\t\t}\r\n\t\t\tif (items.rowClass) {\r\n\t\t\t\trow.className = items.rowClass;\r\n\t\t\t}\r\n\r\n\t\t\trowCell.id = items.id;\r\n\t\t\trowCell.className = items.className;\r\n\r\n\t\t\t_layoutItems(row, align, items.features);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tObject.keys(items).map(function (key) {\r\n\t\t\t\trowCell.contents.push( {\r\n\t\t\t\t\tfeature: key,\r\n\t\t\t\t\topts: items[key]\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\trowCell.contents.push(items);\r\n\t}\r\n}\r\n\r\n/**\r\n * Find, or create a layout row\r\n */\r\nfunction _layoutGetRow(rows, rowNum, align) {\r\n\tvar row;\r\n\r\n\t// Find existing rows\r\n\tfor (var i=0; i<rows.length; i++) {\r\n\t\trow = rows[i];\r\n\r\n\t\tif (row.rowNum === rowNum) {\r\n\t\t\t// full is on its own, but start and end share a row\r\n\t\t\tif (\r\n\t\t\t\t(align === 'full' && row.full) ||\r\n\t\t\t\t((align === 'start' || align === 'end') && (row.start || row.end))\r\n\t\t\t) {\r\n\t\t\t\tif (! row[align]) {\r\n\t\t\t\t\trow[align] = {\r\n\t\t\t\t\t\tcontents: []\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn row;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// If we get this far, then there was no match, create a new row\r\n\trow = {\r\n\t\trowNum: rowNum\t\r\n\t};\r\n\r\n\trow[align] = {\r\n\t\tcontents: []\r\n\t};\r\n\r\n\trows.push(row);\r\n\r\n\treturn row;\r\n}\r\n\r\n/**\r\n * Convert a `layout` object given by a user to the object structure needed\r\n * for the renderer. This is done twice, once for above and once for below\r\n * the table. Ordering must also be considered.\r\n *\r\n * @param {*} settings DataTables settings object\r\n * @param {*} layout Layout object to convert\r\n * @param {string} side `top` or `bottom`\r\n * @returns Converted array structure - one item for each row.\r\n */\r\nfunction _layoutArray ( settings, layout, side ) {\r\n\tvar rows = [];\r\n\t\r\n\t// Split out into an array\r\n\t$.each( layout, function ( pos, items ) {\r\n\t\tif (items === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\r\n\t\tvar rowNum = parts[2]\r\n\t\t\t? parts[2] * 1\r\n\t\t\t: 0;\r\n\t\tvar align = parts[3]\r\n\t\t\t? parts[3].toLowerCase()\r\n\t\t\t: 'full';\r\n\r\n\t\t// Filter out the side we aren't interested in\r\n\t\tif (parts[1] !== side) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get or create the row we should attach to\r\n\t\tvar row = _layoutGetRow(rows, rowNum, align);\r\n\r\n\t\t_layoutItems(row, align, items);\r\n\t});\r\n\r\n\t// Order by item identifier\r\n\trows.sort( function ( a, b ) {\r\n\t\tvar order1 = a.rowNum;\r\n\t\tvar order2 = b.rowNum;\r\n\r\n\t\t// If both in the same row, then the row with `full` comes first\r\n\t\tif (order1 === order2) {\r\n\t\t\tvar ret = a.full && ! b.full ? -1 : 1;\r\n\r\n\t\t\treturn side === 'bottom'\r\n\t\t\t\t? ret * -1\r\n\t\t\t\t: ret;\r\n\t\t}\r\n\r\n\t\treturn order2 - order1;\r\n\t} );\r\n\r\n\t// Invert for below the table\r\n\tif ( side === 'bottom' ) {\r\n\t\trows.reverse();\r\n\t}\r\n\r\n\tfor (var row = 0; row<rows.length; row++) {\r\n\t\tdelete rows[row].rowNum;\r\n\r\n\t\t_layoutResolve(settings, rows[row]);\r\n\t}\r\n\r\n\treturn rows;\r\n}\r\n\r\n\r\n/**\r\n * Convert the contents of a row's layout object to nodes that can be inserted\r\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\r\n *\r\n * @param {*} settings DataTables settings object\r\n * @param {*} row Layout object for this row\r\n */\r\nfunction _layoutResolve( settings, row ) {\r\n\tvar getFeature = function (feature, opts) {\r\n\t\tif ( ! _ext.features[ feature ] ) {\r\n\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\r\n\t\t}\r\n\r\n\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\r\n\t};\r\n\r\n\tvar resolve = function ( item ) {\r\n\t\tif (! row[ item ]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar line = row[ item ].contents;\r\n\r\n\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\r\n\t\t\tif ( ! line[i] ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse if ( typeof line[i] === 'string' ) {\r\n\t\t\t\tline[i] = getFeature( line[i], null );\r\n\t\t\t}\r\n\t\t\telse if ( $.isPlainObject(line[i]) ) {\r\n\t\t\t\t// If it's an object, it just has feature and opts properties from\r\n\t\t\t\t// the transform in _layoutArray\r\n\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\r\n\t\t\t}\r\n\t\t\telse if ( typeof line[i].node === 'function' ) {\r\n\t\t\t\tline[i] = line[i].node( settings );\r\n\t\t\t}\r\n\t\t\telse if ( typeof line[i] === 'function' ) {\r\n\t\t\t\tvar inst = line[i]( settings );\r\n\r\n\t\t\t\tline[i] = typeof inst.node === 'function' ?\r\n\t\t\t\t\tinst.node() :\r\n\t\t\t\t\tinst;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tresolve('start');\r\n\tresolve('end');\r\n\tresolve('full');\r\n}\r\n\r\n\r\n/**\r\n * Add the options to the page HTML for the table\r\n *  @param {object} settings DataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddOptionsHtml ( settings )\r\n{\r\n\tvar classes = settings.oClasses;\r\n\tvar table = $(settings.nTable);\r\n\r\n\t// Wrapper div around everything DataTables controls\r\n\tvar insert = $('<div/>')\r\n\t\t.attr({\r\n\t\t\tid:      settings.sTableId+'_wrapper',\r\n\t\t\t'class': classes.container\r\n\t\t})\r\n\t\t.insertBefore(table);\r\n\r\n\tsettings.nTableWrapper = insert[0];\r\n\r\n\tif (settings.sDom) {\r\n\t\t// Legacy\r\n\t\t_fnLayoutDom(settings, settings.sDom, insert);\r\n\t}\r\n\telse {\r\n\t\tvar top = _layoutArray( settings, settings.layout, 'top' );\r\n\t\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\r\n\t\tvar renderer = _fnRenderer( settings, 'layout' );\r\n\t\r\n\t\t// Everything above - the renderer will actually insert the contents into the document\r\n\t\ttop.forEach(function (item) {\r\n\t\t\trenderer( settings, insert, item );\r\n\t\t});\r\n\r\n\t\t// The table - always the center of attention\r\n\t\trenderer( settings, insert, {\r\n\t\t\tfull: {\r\n\t\t\t\ttable: true,\r\n\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Everything below\r\n\t\tbottom.forEach(function (item) {\r\n\t\t\trenderer( settings, insert, item );\r\n\t\t});\r\n\t}\r\n\r\n\t// Processing floats on top, so it isn't an inserted feature\r\n\t_processingHtml( settings );\r\n}\r\n\r\n/**\r\n * Draw the table with the legacy DOM property\r\n * @param {*} settings DT settings object\r\n * @param {*} dom DOM string\r\n * @param {*} insert Insert point\r\n */\r\nfunction _fnLayoutDom( settings, dom, insert )\r\n{\r\n\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\r\n\tvar featureNode, option, newNode, next, attr;\r\n\r\n\tfor ( var i=0 ; i<parts.length ; i++ ) {\r\n\t\tfeatureNode = null;\r\n\t\toption = parts[i];\r\n\r\n\t\tif ( option == '<' ) {\r\n\t\t\t// New container div\r\n\t\t\tnewNode = $('<div/>');\r\n\r\n\t\t\t// Check to see if we should append an id and/or a class name to the container\r\n\t\t\tnext = parts[i+1];\r\n\r\n\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\r\n\t\t\t\tattr = next.replace(/['\"]/g, '');\r\n\r\n\t\t\t\tvar id = '', className;\r\n\r\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\r\n\t\t\t\t * breaks the string into parts and applies them as needed\r\n\t\t\t\t */\r\n\t\t\t\tif ( attr.indexOf('.') != -1 ) {\r\n\t\t\t\t\tvar split = attr.split('.');\r\n\r\n\t\t\t\t\tid = split[0];\r\n\t\t\t\t\tclassName = split[1];\r\n\t\t\t\t}\r\n\t\t\t\telse if ( attr[0] == \"#\" ) {\r\n\t\t\t\t\tid = attr;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tclassName = attr;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewNode\r\n\t\t\t\t\t.attr('id', id.substring(1))\r\n\t\t\t\t\t.addClass(className);\r\n\r\n\t\t\t\ti++; // Move along the position array\r\n\t\t\t}\r\n\r\n\t\t\tinsert.append( newNode );\r\n\t\t\tinsert = newNode;\r\n\t\t}\r\n\t\telse if ( option == '>' ) {\r\n\t\t\t// End container div\r\n\t\t\tinsert = insert.parent();\r\n\t\t}\r\n\t\telse if ( option == 't' ) {\r\n\t\t\t// Table\r\n\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tDataTable.ext.feature.forEach(function(feature) {\r\n\t\t\t\tif ( option == feature.cFeature ) {\r\n\t\t\t\t\tfeatureNode = feature.fnInit( settings );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add to the display\r\n\t\tif ( featureNode ) {\r\n\t\t\tinsert.append( featureNode );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Use the DOM source to create up an array of header cells. The idea here is to\r\n * create a layout grid (array) of rows x columns, which contains a reference\r\n * to the cell that that point in the grid (regardless of col/rowspan), such that\r\n * any column / row could be removed and the new grid constructed\r\n *  @param {node} thead The header/footer element for the table\r\n *  @returns {array} Calculated layout array\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDetectHeader ( settings, thead, write )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar rows = $(thead).children('tr');\r\n\tvar row, cell;\r\n\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\r\n\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\r\n\tvar layout = [];\r\n\tvar unique;\r\n\tvar shift = function ( a, i, j ) {\r\n\t\tvar k = a[i];\r\n\t\twhile ( k[j] ) {\r\n\t\t\tj++;\r\n\t\t}\r\n\t\treturn j;\r\n\t};\r\n\r\n\t// We know how many rows there are in the layout - so prep it\r\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\r\n\t\tlayout.push( [] );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\r\n\t\trow = rows[i];\r\n\t\tcolumn = 0;\r\n\r\n\t\t// For every cell in the row..\r\n\t\tcell = row.firstChild;\r\n\t\twhile ( cell ) {\r\n\t\t\tif (\r\n\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\r\n\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\r\n\t\t\t) {\r\n\t\t\t\tvar cols = [];\r\n\r\n\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\r\n\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\r\n\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\r\n\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\r\n\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\r\n\r\n\t\t\t\t// There might be colspan cells already in this row, so shift our target\r\n\t\t\t\t// accordingly\r\n\t\t\t\tshifted = shift( layout, i, column );\r\n\r\n\t\t\t\t// Cache calculation for unique columns\r\n\t\t\t\tunique = colspan === 1 ?\r\n\t\t\t\t\ttrue :\r\n\t\t\t\t\tfalse;\r\n\t\t\t\t\r\n\t\t\t\t// Perform header setup\r\n\t\t\t\tif ( write ) {\r\n\t\t\t\t\tif (unique) {\r\n\t\t\t\t\t\t// Allow column options to be set from HTML attributes\r\n\t\t\t\t\t\t_fnColumnOptions( settings, shifted, $(cell).data() );\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Get the width for the column. This can be defined from the\r\n\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\r\n\t\t\t\t\t\tvar columnDef = columns[shifted];\r\n\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\r\n\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\r\n\t\t\t\t\t\tif ( t ) {\r\n\t\t\t\t\t\t\twidth = t[1];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\r\n\r\n\t\t\t\t\t\tif (isHeader) {\r\n\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\r\n\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\r\n\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\r\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\r\n\t\t\t\t\t\t\t\tcolumnDef.sTitle = _stripHtml(cell.innerHTML);\r\n\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// Footer specific operations\r\n\t\t\t\t\t\t\tif (columnDef.footer) {\r\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\r\n\t\t\t\t\t\t// provided.\r\n\t\t\t\t\t\tif (! columnDef.ariaTitle) {\r\n\t\t\t\t\t\t\tcolumnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Column specific class names\r\n\t\t\t\t\t\tif ( columnDef.className ) {\r\n\t\t\t\t\t\t\t$(cell).addClass( columnDef.className );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Wrap the column title so we can write to it in future\r\n\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\r\n\t\t\t\t\t\t$('<span>')\r\n\t\t\t\t\t\t\t.addClass('dt-column-title')\r\n\t\t\t\t\t\t\t.append(cell.childNodes)\r\n\t\t\t\t\t\t\t.appendTo(cell);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isHeader && $('span.dt-column-order', cell).length === 0) {\r\n\t\t\t\t\t\t$('<span>')\r\n\t\t\t\t\t\t\t.addClass('dt-column-order')\r\n\t\t\t\t\t\t\t.appendTo(cell);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\r\n\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\r\n\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\r\n\t\t\t\t\t\tlayout[i+k][shifted+l] = {\r\n\t\t\t\t\t\t\tcell: cell,\r\n\t\t\t\t\t\t\tunique: unique\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlayout[i+k].row = row;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcols.push( shifted+l );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Assign an attribute so spanning cells can still be identified\r\n\t\t\t\t// as belonging to a column\r\n\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\r\n\t\t\t}\r\n\r\n\t\t\tcell = cell.nextSibling;\r\n\t\t}\r\n\t}\r\n\r\n\treturn layout;\r\n}\r\n\r\n/**\r\n * Set the start position for draw\r\n *  @param {object} oSettings dataTables settings object\r\n */\r\nfunction _fnStart( oSettings )\r\n{\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\r\n\r\n\t// Check and see if we have an initial draw position from state saving\r\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\r\n\t{\r\n\t\toSettings._iDisplayStart = bServerSide ?\r\n\t\t\tiInitDisplayStart :\r\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\r\n\t\t\t\t0 :\r\n\t\t\t\tiInitDisplayStart;\r\n\r\n\t\toSettings.iInitDisplayStart = -1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Create an Ajax call based on the table's settings, taking into account that\r\n * parameters can have multiple forms, and backwards compatibility.\r\n *\r\n * @param {object} oSettings dataTables settings object\r\n * @param {array} data Data to send to the server, required by\r\n *     DataTables - may be augmented by developer callbacks\r\n * @param {function} fn Callback function to run when data is obtained\r\n */\r\nfunction _fnBuildAjax( oSettings, data, fn )\r\n{\r\n\tvar ajaxData;\r\n\tvar ajax = oSettings.ajax;\r\n\tvar instance = oSettings.oInstance;\r\n\tvar callback = function ( json ) {\r\n\t\tvar status = oSettings.jqXHR\r\n\t\t\t? oSettings.jqXHR.status\r\n\t\t\t: null;\r\n\r\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\r\n\t\t\tjson = {};\r\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\r\n\t\t}\r\n\r\n\t\tvar error = json.error || json.sError;\r\n\t\tif ( error ) {\r\n\t\t\t_fnLog( oSettings, 0, error );\r\n\t\t}\r\n\r\n\t\t// Microsoft often wrap JSON as a string in another JSON object\r\n\t\t// Let's handle that automatically\r\n\t\tif (json.d && typeof json.d === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\tjson = JSON.parse(json.d);\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// noop\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toSettings.json = json;\r\n\r\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\r\n\t\tfn( json );\r\n\t};\r\n\r\n\tif ( $.isPlainObject( ajax ) && ajax.data )\r\n\t{\r\n\t\tajaxData = ajax.data;\r\n\r\n\t\tvar newData = typeof ajaxData === 'function' ?\r\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\r\n\t\t\tajaxData;                      // an object object or array to merge\r\n\r\n\t\t// If the function returned something, use that alone\r\n\t\tdata = typeof ajaxData === 'function' && newData ?\r\n\t\t\tnewData :\r\n\t\t\t$.extend( true, data, newData );\r\n\r\n\t\t// Remove the data property as we've resolved it already and don't want\r\n\t\t// jQuery to do it again (it is restored at the end of the function)\r\n\t\tdelete ajax.data;\r\n\t}\r\n\r\n\tvar baseAjax = {\r\n\t\t\"url\": typeof ajax === 'string' ?\r\n\t\t\tajax :\r\n\t\t\t'',\r\n\t\t\"data\": data,\r\n\t\t\"success\": callback,\r\n\t\t\"dataType\": \"json\",\r\n\t\t\"cache\": false,\r\n\t\t\"type\": oSettings.sServerMethod,\r\n\t\t\"error\": function (xhr, error) {\r\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\r\n\r\n\t\t\tif ( ret.indexOf(true) === -1 ) {\r\n\t\t\t\tif ( error == \"parsererror\" ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( xhr.readyState === 4 ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\t}\r\n\t};\r\n\r\n\t// If `ajax` option is an object, extend and override our default base\r\n\tif ( $.isPlainObject( ajax ) ) {\r\n\t\t$.extend( baseAjax, ajax )\r\n\t}\r\n\r\n\t// Store the data submitted for the API\r\n\toSettings.oAjaxData = data;\r\n\r\n\t// Allow plug-ins and external processes to modify the data\r\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\r\n\r\n\tif ( typeof ajax === 'function' )\r\n\t{\r\n\t\t// Is a function - let the caller define what needs to be done\r\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\r\n\t}\r\n\telse if (ajax.url === '') {\r\n\t\t// No url, so don't load any data. Just apply an empty data array\r\n\t\t// to the object for the callback.\r\n\t\tvar empty = {};\r\n\r\n\t\tDataTable.util.set(ajax.dataSrc)(empty, []);\r\n\t\tcallback(empty);\r\n\t}\r\n\telse {\r\n\t\t// Object to extend the base settings\r\n\t\toSettings.jqXHR = $.ajax( baseAjax );\r\n\t}\r\n\r\n\t// Restore for next time around\r\n\tif ( ajaxData ) {\r\n\t\tajax.data = ajaxData;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Update the table using an Ajax call\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {boolean} Block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdate( settings )\r\n{\r\n\tsettings.iDraw++;\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t_fnBuildAjax(\r\n\t\tsettings,\r\n\t\t_fnAjaxParameters( settings ),\r\n\t\tfunction(json) {\r\n\t\t\t_fnAjaxUpdateDraw( settings, json );\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n/**\r\n * Build up the parameters in an object needed for a server-side processing\r\n * request.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {bool} block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxParameters( settings )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tpreSearch = settings.oPreviousSearch,\r\n\t\tpreColSearch = settings.aoPreSearchCols,\r\n\t\tcolData = function ( idx, prop ) {\r\n\t\t\treturn typeof columns[idx][prop] === 'function' ?\r\n\t\t\t\t'function' :\r\n\t\t\t\tcolumns[idx][prop];\r\n\t\t};\r\n\r\n\treturn {\r\n\t\tdraw: settings.iDraw,\r\n\t\tcolumns: columns.map( function ( column, i ) {\r\n\t\t\treturn {\r\n\t\t\t\tdata: colData(i, 'mData'),\r\n\t\t\t\tname: column.sName,\r\n\t\t\t\tsearchable: column.bSearchable,\r\n\t\t\t\torderable: column.bSortable,\r\n\t\t\t\tsearch: {\r\n\t\t\t\t\tvalue: preColSearch[i].search,\r\n\t\t\t\t\tregex: preColSearch[i].regex,\r\n\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} ),\r\n\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\r\n\t\t\treturn {\r\n\t\t\t\tcolumn: val.col,\r\n\t\t\t\tdir: val.dir,\r\n\t\t\t\tname: colData(val.col, 'sName')\r\n\t\t\t};\r\n\t\t} ),\r\n\t\tstart: settings._iDisplayStart,\r\n\t\tlength: features.bPaginate ?\r\n\t\t\tsettings._iDisplayLength :\r\n\t\t\t-1,\r\n\t\tsearch: {\r\n\t\t\tvalue: preSearch.search,\r\n\t\t\tregex: preSearch.regex,\r\n\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tterm: settings.searchFixed[name].toString()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\n/**\r\n * Data the data from the server (nuking the old) and redraw the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} json json data return from the server.\r\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\r\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\r\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\r\n *  @param {array} json.aaData The data to display on this page\r\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdateDraw ( settings, json )\r\n{\r\n\tvar data = _fnAjaxDataSrc(settings, json);\r\n\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\r\n\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\r\n\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\r\n\r\n\tif ( draw !== undefined ) {\r\n\t\t// Protect against out of sequence returns\r\n\t\tif ( draw*1 < settings.iDraw ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsettings.iDraw = draw * 1;\r\n\t}\r\n\r\n\t// No data in returned object, so rather than an array, we show an empty table\r\n\tif ( ! data ) {\r\n\t\tdata = [];\r\n\t}\r\n\r\n\t_fnClearTable( settings );\r\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\r\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\r\n\r\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t_fnAddData( settings, data[i] );\r\n\t}\r\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n\t_fnColumnTypes(settings);\r\n\t_fnDraw( settings, true );\r\n\t_fnInitComplete( settings );\r\n\t_fnProcessingDisplay( settings, false );\r\n}\r\n\r\n\r\n/**\r\n * Get the data from the JSON data source to use for drawing a table. Using\r\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\r\n * source object, or from a processing function.\r\n *  @param {object} settings dataTables settings object\r\n *  @param  {object} json Data source object / array from the server\r\n *  @return {array} Array of data to use\r\n */\r\nfunction _fnAjaxDataSrc ( settings, json, write )\r\n{\r\n\tvar dataProp = 'data';\r\n\r\n\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\r\n\t\t// Could in inside a `dataSrc` object, or not!\r\n\t\tvar dataSrc = settings.ajax.dataSrc;\r\n\r\n\t\t// string, function and object are valid types\r\n\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\r\n\t\t\tdataProp = dataSrc;\r\n\t\t}\r\n\t\telse if (dataSrc.data !== undefined) {\r\n\t\t\tdataProp = dataSrc.data;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( ! write ) {\r\n\t\tif ( dataProp === 'data' ) {\r\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\r\n\t\t\t// it if possible\r\n\t\t\treturn json.aaData || json[dataProp];\r\n\t\t}\r\n\r\n\t\treturn dataProp !== \"\" ?\r\n\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\r\n\t\t\tjson;\r\n\t}\r\n\t\r\n\t// set\r\n\t_fnSetObjectDataFn( dataProp )( json, write );\r\n}\r\n\r\n/**\r\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\r\n * @param {*} settings DataTables settings object\r\n * @param {*} param Target parameter\r\n * @param {*} json JSON data\r\n * @returns Resolved value\r\n */\r\nfunction _fnAjaxDataSrcParam (settings, param, json) {\r\n\tvar dataSrc = $.isPlainObject( settings.ajax )\r\n\t\t? settings.ajax.dataSrc\r\n\t\t: null;\r\n\r\n\tif (dataSrc && dataSrc[param]) {\r\n\t\t// Get from custom location\r\n\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\r\n\t}\r\n\r\n\t// else - Default behaviour\r\n\tvar old = '';\r\n\r\n\t// Legacy support\r\n\tif (param === 'draw') {\r\n\t\told = 'sEcho';\r\n\t}\r\n\telse if (param === 'recordsTotal') {\r\n\t\told = 'iTotalRecords';\r\n\t}\r\n\telse if (param === 'recordsFiltered') {\r\n\t\told = 'iTotalDisplayRecords';\r\n\t}\r\n\r\n\treturn json[old] !== undefined\r\n\t\t? json[old]\r\n\t\t: json[param];\r\n}\r\n\r\n\r\n/**\r\n * Filter the table using both the global filter and column based filtering\r\n *  @param {object} settings dataTables settings object\r\n *  @param {object} input search information\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterComplete ( settings, input )\r\n{\r\n\tvar columnsSearch = settings.aoPreSearchCols;\r\n\r\n\t// In server-side processing all filtering is done by the server, so no point hanging around here\r\n\tif ( _fnDataSource( settings ) != 'ssp' )\r\n\t{\r\n\t\t// Check if any of the rows were invalidated\r\n\t\t_fnFilterData( settings );\r\n\r\n\t\t// Start from the full data set\r\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n\t\t// Global filter first\r\n\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\r\n\r\n\t\t$.each(settings.searchFixed, function (name, term) {\r\n\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\r\n\t\t});\r\n\r\n\t\t// Then individual column filters\r\n\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\r\n\t\t{\r\n\t\t\tvar col = columnsSearch[i];\r\n\r\n\t\t\t_fnFilter(\r\n\t\t\t\tsettings.aiDisplay,\r\n\t\t\t\tsettings,\r\n\t\t\t\tcol.search,\r\n\t\t\t\tcol,\r\n\t\t\t\ti\r\n\t\t\t);\r\n\r\n\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\r\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// And finally global filtering\r\n\t\t_fnFilterCustom( settings );\r\n\t}\r\n\r\n\t// Tell the draw function we have been filtering\r\n\tsettings.bFiltered = true;\r\n\r\n\t_fnCallbackFire( settings, null, 'search', [settings] );\r\n}\r\n\r\n\r\n/**\r\n * Apply custom filtering functions\r\n * \r\n * This is legacy now that we have named functions, but it is widely used\r\n * from 1.x, so it is not yet deprecated.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCustom( settings )\r\n{\r\n\tvar filters = DataTable.ext.search;\r\n\tvar displayRows = settings.aiDisplay;\r\n\tvar row, rowIdx;\r\n\r\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\r\n\t\tvar rows = [];\r\n\r\n\t\t// Loop over each row and see if it should be included\r\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\r\n\t\t\trowIdx = displayRows[ j ];\r\n\t\t\trow = settings.aoData[ rowIdx ];\r\n\r\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\r\n\t\t\t\trows.push( rowIdx );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// So the array reference doesn't break set the results into the\r\n\t\t// existing array\r\n\t\tdisplayRows.length = 0;\r\n\t\tdisplayRows.push.apply(displayRows, rows);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Filter the data table based on user input and draw the table\r\n */\r\nfunction _fnFilter( searchRows, settings, input, options, column )\r\n{\r\n\tif ( input === '' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar i = 0;\r\n\tvar matched = [];\r\n\r\n\t// Search term can be a function, regex or string - if a string we apply our\r\n\t// smart filtering regex (assuming the options require that)\r\n\tvar searchFunc = typeof input === 'function' ? input : null;\r\n\tvar rpSearch = input instanceof RegExp\r\n\t\t? input\r\n\t\t: searchFunc\r\n\t\t\t? null\r\n\t\t\t: _fnFilterCreateSearch( input, options );\r\n\r\n\t// Then for each row, does the test pass. If not, lop the row from the array\r\n\tfor (i=0 ; i<searchRows.length ; i++) {\r\n\t\tvar row = settings.aoData[ searchRows[i] ];\r\n\t\tvar data = column === undefined\r\n\t\t\t? row._sFilterRow\r\n\t\t\t: row._aFilterData[ column ];\r\n\r\n\t\tif ( (searchFunc && searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && rpSearch.test(data)) ) {\r\n\t\t\tmatched.push(searchRows[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Mutate the searchRows array\r\n\tsearchRows.length = matched.length;\r\n\r\n\tfor (i=0 ; i<matched.length ; i++) {\r\n\t\tsearchRows[i] = matched[i];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a regular expression object suitable for searching a table\r\n *  @param {string} sSearch string to search for\r\n *  @param {bool} bRegex treat as a regular expression or not\r\n *  @param {bool} bSmart perform smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @returns {RegExp} constructed object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCreateSearch( search, inOpts )\r\n{\r\n\tvar not = [];\r\n\tvar options = $.extend({}, {\r\n\t\tboundary: false,\r\n\t\tcaseInsensitive: true,\r\n\t\texact: false,\r\n\t\tregex: false,\r\n\t\tsmart: true\r\n\t}, inOpts);\r\n\r\n\tif (typeof search !== 'string') {\r\n\t\tsearch = search.toString();\r\n\t}\r\n\r\n\t// Remove diacritics if normalize is set up to do so\r\n\tsearch = _normalize(search);\r\n\r\n\tif (options.exact) {\r\n\t\treturn new RegExp(\r\n\t\t\t'^'+_fnEscapeRegex(search)+'$',\r\n\t\t\toptions.caseInsensitive ? 'i' : ''\r\n\t\t);\r\n\t}\r\n\r\n\tsearch = options.regex ?\r\n\t\tsearch :\r\n\t\t_fnEscapeRegex( search );\r\n\t\r\n\tif ( options.smart ) {\r\n\t\t/* For smart filtering we want to allow the search to work regardless of\r\n\t\t * word order. We also want double quoted text to be preserved, so word\r\n\t\t * order is important - a la google. And a negative look around for\r\n\t\t * finding rows which don't contain a given string.\r\n\t\t * \r\n\t\t * So this is the sort of thing we want to generate:\r\n\t\t * \r\n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\r\n\t\t */\r\n\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\r\n\t\tvar a = parts.map( function ( word ) {\r\n\t\t\tvar negative = false;\r\n\t\t\tvar m;\r\n\r\n\t\t\t// Determine if it is a \"does not include\"\r\n\t\t\tif ( word.charAt(0) === '!' ) {\r\n\t\t\t\tnegative = true;\r\n\t\t\t\tword = word.substring(1);\r\n\t\t\t}\r\n\r\n\t\t\t// Strip the quotes from around matched phrases\r\n\t\t\tif ( word.charAt(0) === '\"' ) {\r\n\t\t\t\tm = word.match( /^\"(.*)\"$/ );\r\n\t\t\t\tword = m ? m[1] : word;\r\n\t\t\t}\r\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\r\n\t\t\t\t// Smart quote match (iPhone users)\r\n\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\r\n\t\t\t\tword = m ? m[1] : word;\r\n\t\t\t}\r\n\r\n\t\t\t// For our \"not\" case, we need to modify the string that is\r\n\t\t\t// allowed to match at the end of the expression.\r\n\t\t\tif (negative) {\r\n\t\t\t\tif (word.length > 1) {\r\n\t\t\t\t\tnot.push('(?!'+word+')');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tword = '';\r\n\t\t\t}\r\n\r\n\t\t\treturn word.replace(/\"/g, '');\r\n\t\t} );\r\n\r\n\t\tvar match = not.length\r\n\t\t\t? not.join('')\r\n\t\t\t: '';\r\n\r\n\t\tvar boundary = options.boundary\r\n\t\t\t? '\\\\b'\r\n\t\t\t: '';\r\n\r\n\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\r\n\t}\r\n\r\n\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\r\n}\r\n\r\n\r\n/**\r\n * Escape a string such that it can be used in a regular expression\r\n *  @param {string} sVal string to escape\r\n *  @returns {string} escaped string\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\r\n\r\nvar __filter_div = $('<div>')[0];\r\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\r\n\r\n// Update the filtering data for each row if needed (by invalidation or first run)\r\nfunction _fnFilterData ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar data = settings.aoData;\r\n\tvar column;\r\n\tvar j, jen, filterData, cellData, row;\r\n\tvar wasInvalidated = false;\r\n\r\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\r\n\t\tif (! data[rowIdx]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\trow = data[rowIdx];\r\n\r\n\t\tif ( ! row._aFilterData ) {\r\n\t\t\tfilterData = [];\r\n\r\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\r\n\t\t\t\tcolumn = columns[j];\r\n\r\n\t\t\t\tif ( column.bSearchable ) {\r\n\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\r\n\r\n\t\t\t\t\t// Search in DataTables is string based\r\n\t\t\t\t\tif ( cellData === null ) {\r\n\t\t\t\t\t\tcellData = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\r\n\t\t\t\t\t\tcellData = cellData.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcellData = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If it looks like there is an HTML entity in the string,\r\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\r\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\r\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\r\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\r\n\t\t\t\t\t__filter_div.innerHTML = cellData;\r\n\t\t\t\t\tcellData = __filter_div_textContent ?\r\n\t\t\t\t\t\t__filter_div.textContent :\r\n\t\t\t\t\t\t__filter_div.innerText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cellData.replace ) {\r\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterData.push( cellData );\r\n\t\t\t}\r\n\r\n\t\t\trow._aFilterData = filterData;\r\n\t\t\trow._sFilterRow = filterData.join('  ');\r\n\t\t\twasInvalidated = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn wasInvalidated;\r\n}\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitialise ( settings )\r\n{\r\n\tvar i;\r\n\tvar init = settings.oInit;\r\n\tvar deferLoading = settings.deferLoading;\r\n\tvar dataSrc = _fnDataSource( settings );\r\n\r\n\t// Ensure that the table data is fully initialised\r\n\tif ( ! settings.bInitialised ) {\r\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Build the header / footer for the table\r\n\t_fnBuildHead( settings, 'header' );\r\n\t_fnBuildHead( settings, 'footer' );\r\n\r\n\t// Load the table's state (if needed) and then render around it and draw\r\n\t_fnLoadState( settings, init, function () {\r\n\t\t// Then draw the header / footer\r\n\t\t_fnDrawHead( settings, settings.aoHeader );\r\n\t\t_fnDrawHead( settings, settings.aoFooter );\r\n\r\n\t\t// Cache the paging start point, as the first redraw will reset it\r\n\t\tvar iAjaxStart = settings.iInitDisplayStart\r\n\r\n\t\t// Local data load\r\n\t\t// Check if there is data passing into the constructor\r\n\t\tif ( init.aaData ) {\r\n\t\t\tfor ( i=0 ; i<init.aaData.length ; i++ ) {\r\n\t\t\t\t_fnAddData( settings, init.aaData[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( deferLoading || dataSrc == 'dom' ) {\r\n\t\t\t// Grab the data from the page\r\n\t\t\t_fnAddTr( settings, $(settings.nTBody).children('tr') );\r\n\t\t}\r\n\r\n\t\t// Filter not yet applied - copy the display master\r\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n\t\t// Enable features\r\n\t\t_fnAddOptionsHtml( settings );\r\n\t\t_fnSortInit( settings );\r\n\r\n\t\t_colGroup( settings );\r\n\r\n\t\t/* Okay to show that something is going on now */\r\n\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\r\n\r\n\t\t// If there is default sorting required - let's do it. The sort function\r\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\r\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\r\n\t\t// data (show 'loading' message possibly)\r\n\t\t_fnReDraw( settings );\r\n\r\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\r\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\r\n\t\t\t// if there is an ajax source load the data\r\n\t\t\tif ( dataSrc == 'ajax' ) {\r\n\t\t\t\t_fnBuildAjax( settings, {}, function(json) {\r\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\r\n\r\n\t\t\t\t\t// Got the data - add it to the table\r\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\r\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\r\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\r\n\t\t\t\t\t// it appear 'fresh'\r\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\r\n\r\n\t\t\t\t\t_fnReDraw( settings );\r\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t\t_fnInitComplete( settings );\r\n\t\t\t\t}, settings );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnInitComplete( settings );\r\n\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitComplete ( settings )\r\n{\r\n\tif (settings._bInitComplete) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar args = [settings, settings.json];\r\n\r\n\tsettings._bInitComplete = true;\r\n\r\n\t// Table is fully set up and we have data, so calculate the\r\n\t// column widths\r\n\t_fnAdjustColumnSizing( settings );\r\n\r\n\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\r\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\r\n}\r\n\r\nfunction _fnLengthChange ( settings, val )\r\n{\r\n\tvar len = parseInt( val, 10 );\r\n\tsettings._iDisplayLength = len;\r\n\r\n\t_fnLengthOverflow( settings );\r\n\r\n\t// Fire length change event\r\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\r\n}\r\n\r\n/**\r\n * Alter the display settings to change the page\r\n *  @param {object} settings DataTables settings object\r\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\r\n *    \"next\" or \"last\" or page number to jump to (integer)\r\n *  @param [bool] redraw Automatically draw the update or not\r\n *  @returns {bool} true page has changed, false - no change\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnPageChange ( settings, action, redraw )\r\n{\r\n\tvar\r\n\t\tstart     = settings._iDisplayStart,\r\n\t\tlen       = settings._iDisplayLength,\r\n\t\trecords   = settings.fnRecordsDisplay();\r\n\r\n\tif ( records === 0 || len === -1 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( typeof action === \"number\" )\r\n\t{\r\n\t\tstart = action * len;\r\n\r\n\t\tif ( start > records )\r\n\t\t{\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"first\" )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( action == \"previous\" )\r\n\t{\r\n\t\tstart = len >= 0 ?\r\n\t\t\tstart - len :\r\n\t\t\t0;\r\n\r\n\t\tif ( start < 0 )\r\n\t\t{\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"next\" )\r\n\t{\r\n\t\tif ( start + len < records )\r\n\t\t{\r\n\t\t\tstart += len;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"last\" )\r\n\t{\r\n\t\tstart = Math.floor( (records-1) / len) * len;\r\n\t}\r\n\telse if ( action === 'ellipsis' )\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\r\n\t}\r\n\r\n\tvar changed = settings._iDisplayStart !== start;\r\n\tsettings._iDisplayStart = start;\r\n\r\n\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\r\n\r\n\tif ( changed && redraw ) {\r\n\t\t_fnDraw( settings );\r\n\t}\r\n\r\n\treturn changed;\r\n}\r\n\r\n\r\n/**\r\n * Generate the node required for the processing node\r\n *  @param {object} settings DataTables settings object\r\n */\r\nfunction _processingHtml ( settings )\r\n{\r\n\tvar table = settings.nTable;\r\n\tvar scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\r\n\r\n\tif ( settings.oFeatures.bProcessing ) {\r\n\t\tvar n = $('<div/>', {\r\n\t\t\t\t'id': settings.sTableId + '_processing',\r\n\t\t\t\t'class': settings.oClasses.processing.container,\r\n\t\t\t\t'role': 'status'\r\n\t\t\t} )\r\n\t\t\t.html( settings.oLanguage.sProcessing )\r\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>');\r\n\r\n\t\t// Different positioning depending on if scrolling is enabled or not\r\n\t\tif (scrolling) {\r\n\t\t\tn.prependTo( $('div.dt-scroll', settings.nTableWrapper) );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tn.insertBefore( table );\r\n\t\t}\r\n\r\n\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\r\n\t\t\tn.css( 'display', show ? 'block' : 'none' );\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Display or hide the processing indicator\r\n *  @param {object} settings DataTables settings object\r\n *  @param {bool} show Show the processing indicator (true) or not (false)\r\n */\r\nfunction _fnProcessingDisplay ( settings, show )\r\n{\r\n\t// Ignore cases when we are still redrawing\r\n\tif (settings.bDrawing && show === false) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\r\n}\r\n\r\n/**\r\n * Show the processing element if an action takes longer than a given time\r\n *\r\n * @param {*} settings DataTables settings object\r\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\r\n * @param {*} run Function to run\r\n */\r\nfunction _fnProcessingRun( settings, enable, run ) {\r\n\tif (! enable) {\r\n\t\t// Immediate execution, synchronous\r\n\t\trun();\r\n\t}\r\n\telse {\r\n\t\t_fnProcessingDisplay(settings, true);\r\n\t\t\r\n\t\t// Allow the processing display to show if needed\r\n\t\tsetTimeout(function () {\r\n\t\t\trun();\r\n\r\n\t\t\t_fnProcessingDisplay(settings, false);\r\n\t\t}, 0);\r\n\t}\r\n}\r\n/**\r\n * Add any control elements for the table - specifically scrolling\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Node to add to the DOM\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlTable ( settings )\r\n{\r\n\tvar table = $(settings.nTable);\r\n\r\n\t// Scrolling from here on in\r\n\tvar scroll = settings.oScroll;\r\n\r\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\r\n\t\treturn settings.nTable;\r\n\t}\r\n\r\n\tvar scrollX = scroll.sX;\r\n\tvar scrollY = scroll.sY;\r\n\tvar classes = settings.oClasses.scrolling;\r\n\tvar caption = settings.captionNode;\r\n\tvar captionSide = caption ? caption._captionSide : null;\r\n\tvar headerClone = $( table[0].cloneNode(false) );\r\n\tvar footerClone = $( table[0].cloneNode(false) );\r\n\tvar footer = table.children('tfoot');\r\n\tvar _div = '<div/>';\r\n\tvar size = function ( s ) {\r\n\t\treturn !s ? null : _fnStringToCss( s );\r\n\t};\r\n\r\n\tif ( ! footer.length ) {\r\n\t\tfooter = null;\r\n\t}\r\n\r\n\t/*\r\n\t * The HTML structure that we want to generate in this function is:\r\n\t *  div - scroller\r\n\t *    div - scroll head\r\n\t *      div - scroll head inner\r\n\t *        table - scroll head table\r\n\t *          thead - thead\r\n\t *    div - scroll body\r\n\t *      table - table (master table)\r\n\t *        thead - thead clone for sizing\r\n\t *        tbody - tbody\r\n\t *    div - scroll foot\r\n\t *      div - scroll foot inner\r\n\t *        table - scroll foot table\r\n\t *          tfoot - tfoot\r\n\t */\r\n\tvar scroller = $( _div, { 'class': classes.container } )\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.header.self } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\r\n\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\r\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\theaderClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('thead')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.body } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\twidth: size( scrollX )\r\n\t\t\t\t} )\r\n\t\t\t\t.append( table )\r\n\t\t);\r\n\r\n\tif ( footer ) {\r\n\t\tscroller.append(\r\n\t\t\t$(_div, { 'class': classes.footer.self } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\tfooterClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tvar children = scroller.children();\r\n\tvar scrollHead = children[0];\r\n\tvar scrollBody = children[1];\r\n\tvar scrollFoot = footer ? children[2] : null;\r\n\r\n\t// When the body is scrolled, then we also want to scroll the headers\r\n\t$(scrollBody).on( 'scroll.DT', function () {\r\n\t\tvar scrollLeft = this.scrollLeft;\r\n\r\n\t\tscrollHead.scrollLeft = scrollLeft;\r\n\r\n\t\tif ( footer ) {\r\n\t\t\tscrollFoot.scrollLeft = scrollLeft;\r\n\t\t}\r\n\t} );\r\n\r\n\t// When focus is put on the header cells, we might need to scroll the body\r\n\t$('th, td', scrollHead).on('focus', function () {\r\n\t\tvar scrollLeft = scrollHead.scrollLeft;\r\n\r\n\t\tscrollBody.scrollLeft = scrollLeft;\r\n\r\n\t\tif ( footer ) {\r\n\t\t\tscrollBody.scrollLeft = scrollLeft;\r\n\t\t}\r\n\t});\r\n\r\n\t$(scrollBody).css('max-height', scrollY);\r\n\tif (! scroll.bCollapse) {\r\n\t\t$(scrollBody).css('height', scrollY);\r\n\t}\r\n\r\n\tsettings.nScrollHead = scrollHead;\r\n\tsettings.nScrollBody = scrollBody;\r\n\tsettings.nScrollFoot = scrollFoot;\r\n\r\n\t// On redraw - align columns\r\n\tsettings.aoDrawCallback.push(_fnScrollDraw);\r\n\r\n\treturn scroller[0];\r\n}\r\n\r\n\r\n\r\n/**\r\n * Update the header, footer and body tables for resizing - i.e. column\r\n * alignment.\r\n *\r\n * Welcome to the most horrible function DataTables. The process that this\r\n * function follows is basically:\r\n *   1. Re-create the table inside the scrolling div\r\n *   2. Correct colgroup > col values if needed\r\n *   3. Copy colgroup > col over to header and footer\r\n *   4. Clean up\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnScrollDraw ( settings )\r\n{\r\n\t// Given that this is such a monster function, a lot of variables are use\r\n\t// to try and keep the minimised size as small as possible\r\n\tvar\r\n\t\tscroll         = settings.oScroll,\r\n\t\tbarWidth       = scroll.iBarWidth,\r\n\t\tdivHeader      = $(settings.nScrollHead),\r\n\t\tdivHeaderInner = divHeader.children('div'),\r\n\t\tdivHeaderTable = divHeaderInner.children('table'),\r\n\t\tdivBodyEl      = settings.nScrollBody,\r\n\t\tdivBody        = $(divBodyEl),\r\n\t\tdivFooter      = $(settings.nScrollFoot),\r\n\t\tdivFooterInner = divFooter.children('div'),\r\n\t\tdivFooterTable = divFooterInner.children('table'),\r\n\t\theader         = $(settings.nTHead),\r\n\t\ttable          = $(settings.nTable),\r\n\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\r\n\t\tbrowser        = settings.oBrowser,\r\n\t\theaderCopy, footerCopy;\r\n\r\n\t// If the scrollbar visibility has changed from the last draw, we need to\r\n\t// adjust the column sizes as the table width will have changed to account\r\n\t// for the scrollbar\r\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\r\n\t\r\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t\treturn; // adjust column sizing will call this function again\r\n\t}\r\n\telse {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t}\r\n\r\n\t// 1. Re-create the table inside the scrolling div\r\n\t// Remove the old minimised thead and tfoot elements in the inner table\r\n\ttable.children('thead, tfoot').remove();\r\n\r\n\t// Clone the current header and footer elements and then place it into the inner table\r\n\theaderCopy = header.clone().prependTo( table );\r\n\theaderCopy.find('th, td').removeAttr('tabindex');\r\n\theaderCopy.find('[id]').removeAttr('id');\r\n\r\n\tif ( footer ) {\r\n\t\tfooterCopy = footer.clone().prependTo( table );\r\n\t\tfooterCopy.find('[id]').removeAttr('id');\r\n\t}\r\n\r\n\t// 2. Correct colgroup > col values if needed\r\n\t// It is possible that the cell sizes are smaller than the content, so we need to\r\n\t// correct colgroup>col for such cases. This can happen if the auto width detection\r\n\t// uses a cell which has a longer string, but isn't the widest! For example \r\n\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\r\n\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\r\n\t// Note the use of translating into a column index to get the `col` element. This\r\n\t// is because of Responsive which might remove `col` elements, knocking the alignment\r\n\t// of the indexes out.\r\n\tif (settings.aiDisplay.length) {\r\n\t\t// Get the column sizes from the first row in the table. This should really be a\r\n\t\t// [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\r\n\t\t// browser support\r\n\t\tvar firstTr = null;\r\n\r\n\t\tfor (i=settings._iDisplayStart ; i<settings.aiDisplay.length ; i++) {\r\n\t\t\tvar idx = settings.aiDisplay[i];\r\n\t\t\tvar tr = settings.aoData[idx].nTr;\r\n\r\n\t\t\tif (tr) {\r\n\t\t\t\tfirstTr = tr;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstTr) {\r\n\t\t\tvar colSizes = $(firstTr).children('th, td').map(function (vis) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tidx: _fnVisibleToColumnIndex(settings, vis),\r\n\t\t\t\t\twidth: $(this).outerWidth()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Check against what the colgroup > col is set to and correct if needed\r\n\t\t\tfor (var i=0 ; i<colSizes.length ; i++) {\r\n\t\t\t\tvar colEl = settings.aoColumns[ colSizes[i].idx ].colEl[0];\r\n\t\t\t\tvar colWidth = colEl.style.width.replace('px', '');\r\n\r\n\t\t\t\tif (colWidth !== colSizes[i].width) {\r\n\t\t\t\t\tcolEl.style.width = colSizes[i].width + 'px';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 3. Copy the colgroup over to the header and footer\r\n\tdivHeaderTable\r\n\t\t.find('colgroup')\r\n\t\t.remove();\r\n\r\n\tdivHeaderTable.append(settings.colgroup.clone());\r\n\r\n\tif ( footer ) {\r\n\t\tdivFooterTable\r\n\t\t\t.find('colgroup')\r\n\t\t\t.remove();\r\n\r\n\t\tdivFooterTable.append(settings.colgroup.clone());\r\n\t}\r\n\r\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\r\n\t// the content of the cell so that the width applied to the header and body\r\n\t// both match, but we want to hide it completely.\r\n\t$('th, td', headerCopy).each(function () {\r\n\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\r\n\t});\r\n\r\n\tif ( footer ) {\r\n\t\t$('th, td', footerCopy).each(function () {\r\n\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\r\n\t\t});\r\n\t}\r\n\r\n\t// 4. Clean up\r\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\r\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\r\n\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\r\n\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\r\n\r\n\t// Set the width's of the header and footer tables\r\n\tvar outerWidth = table.outerWidth();\r\n\r\n\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\r\n\tdivHeaderInner\r\n\t\t.css('width', _fnStringToCss( outerWidth ))\r\n\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\r\n\r\n\tif ( footer ) {\r\n\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\r\n\t\tdivFooterInner\r\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\r\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\r\n\t}\r\n\r\n\t// Correct DOM ordering for colgroup - comes before the thead\r\n\ttable.children('colgroup').prependTo(table);\r\n\r\n\t// Adjust the position of the header in case we loose the y-scrollbar\r\n\tdivBody.trigger('scroll');\r\n\r\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\r\n\t// only if we aren't holding the position\r\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\r\n\t\tdivBodyEl.scrollTop = 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Calculate the width of columns for the table\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCalculateColumnWidths ( settings )\r\n{\r\n\t// Not interested in doing column width calculation if auto-width is disabled\r\n\tif (! settings.oFeatures.bAutoWidth) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ttable = settings.nTable,\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tscroll = settings.oScroll,\r\n\t\tscrollY = scroll.sY,\r\n\t\tscrollX = scroll.sX,\r\n\t\tscrollXInner = scroll.sXInner,\r\n\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\r\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\r\n\t\ttableContainer = table.parentNode,\r\n\t\ti, column, columnIdx;\r\n\t\t\r\n\tvar styleWidth = table.style.width;\r\n\r\n\t// If there is no width applied as a CSS style or as an attribute, we assume that\r\n\t// the width is intended to be 100%, which is usually is in CSS, but it is very\r\n\t// difficult to correctly parse the rules to get the final result.\r\n\tif ( ! styleWidth && ! tableWidthAttr) {\r\n\t\ttable.style.width = '100%';\r\n\t\tstyleWidth = '100%';\r\n\t}\r\n\r\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\r\n\t\ttableWidthAttr = styleWidth;\r\n\t}\r\n\r\n\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\r\n\t// visible columns their own way (e.g. Responsive uses display:none).\r\n\t_fnCallbackFire(\r\n\t\tsettings,\r\n\t\tnull,\r\n\t\t'column-calc',\r\n\t\t{visible: visibleColumns},\r\n\t\tfalse\r\n\t);\r\n\r\n\t// Construct a single row, worst case, table with the widest\r\n\t// node in the data, assign any user defined widths, then insert it into\r\n\t// the DOM and allow the browser to do all the hard work of calculating\r\n\t// table widths\r\n\tvar tmpTable = $(table.cloneNode())\r\n\t\t.css( 'visibility', 'hidden' )\r\n\t\t.removeAttr( 'id' );\r\n\r\n\t// Clean up the table body\r\n\ttmpTable.append('<tbody>')\r\n\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\r\n\r\n\t// Clone the table header and footer - we can't use the header / footer\r\n\t// from the cloned table, since if scrolling is active, the table's\r\n\t// real header and footer are contained in different table tags\r\n\ttmpTable\r\n\t\t.append( $(settings.nTHead).clone() )\r\n\t\t.append( $(settings.nTFoot).clone() );\r\n\r\n\t// Remove any assigned widths from the footer (from scrolling)\r\n\ttmpTable.find('tfoot th, tfoot td').css('width', '');\r\n\r\n\t// Apply custom sizing to the cloned header\r\n\ttmpTable.find('thead th, thead td').each( function () {\r\n\t\t// Get the `width` from the header layout\r\n\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\r\n\r\n\t\tif ( width ) {\r\n\t\t\tthis.style.width = width;\r\n\r\n\t\t\t// For scrollX we need to force the column width otherwise the\r\n\t\t\t// browser will collapse it. If this width is smaller than the\r\n\t\t\t// width the column requires, then it will have no effect\r\n\t\t\tif ( scrollX ) {\r\n\t\t\t\t$( this ).append( $('<div/>').css( {\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t} ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.style.width = '';\r\n\t\t}\r\n\t} );\r\n\r\n\t// Find the widest piece of data for each column and put it into the table\r\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\tcolumnIdx = visibleColumns[i];\r\n\t\tcolumn = columns[ columnIdx ];\r\n\r\n\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\r\n\t\tvar autoClass = _ext.type.className[column.sType];\r\n\t\tvar text = longest + column.sContentPadding;\r\n\t\tvar insert = longest.indexOf('<') === -1\r\n\t\t\t? document.createTextNode(text)\r\n\t\t\t: text\r\n\t\t\r\n\t\t$('<td/>')\r\n\t\t\t.addClass(autoClass)\r\n\t\t\t.addClass(column.sClass)\r\n\t\t\t.append(insert)\r\n\t\t\t.appendTo(tr);\r\n\t}\r\n\r\n\t// Tidy the temporary table - remove name attributes so there aren't\r\n\t// duplicated in the dom (radio elements for example)\r\n\t$('[name]', tmpTable).removeAttr('name');\r\n\r\n\t// Table has been built, attach to the document so we can work with it.\r\n\t// A holding element is used, positioned at the top of the container\r\n\t// with minimal height, so it has no effect on if the container scrolls\r\n\t// or not. Otherwise it might trigger scrolling when it actually isn't\r\n\t// needed\r\n\tvar holder = $('<div/>').css( scrollX || scrollY ?\r\n\t\t\t{\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\theight: 1,\r\n\t\t\t\tright: 0,\r\n\t\t\t\toverflow: 'hidden'\r\n\t\t\t} :\r\n\t\t\t{}\r\n\t\t)\r\n\t\t.append( tmpTable )\r\n\t\t.appendTo( tableContainer );\r\n\r\n\t// When scrolling (X or Y) we want to set the width of the table as \r\n\t// appropriate. However, when not scrolling leave the table width as it\r\n\t// is. This results in slightly different, but I think correct behaviour\r\n\tif ( scrollX && scrollXInner ) {\r\n\t\ttmpTable.width( scrollXInner );\r\n\t}\r\n\telse if ( scrollX ) {\r\n\t\ttmpTable.css( 'width', 'auto' );\r\n\t\ttmpTable.removeAttr('width');\r\n\r\n\t\t// If there is no width attribute or style, then allow the table to\r\n\t\t// collapse\r\n\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\r\n\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t}\r\n\t}\r\n\telse if ( scrollY ) {\r\n\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t}\r\n\telse if ( tableWidthAttr ) {\r\n\t\ttmpTable.width( tableWidthAttr );\r\n\t}\r\n\r\n\t// Get the width of each column in the constructed table\r\n\tvar total = 0;\r\n\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\r\n\r\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\r\n\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\r\n\r\n\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\r\n\t\t// of the table might not equal the total given here\r\n\t\ttotal += bounding;\r\n\r\n\t\t// Width for each column to use\r\n\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\r\n\t}\r\n\r\n\ttable.style.width = _fnStringToCss( total );\r\n\r\n\t// Finished with the table - ditch it\r\n\tholder.remove();\r\n\r\n\t// If there is a width attr, we want to attach an event listener which\r\n\t// allows the table sizing to automatically adjust when the window is\r\n\t// resized. Use the width attr rather than CSS, since we can't know if the\r\n\t// CSS is a relative value or absolute - DOM read is always px.\r\n\tif ( tableWidthAttr ) {\r\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\r\n\t}\r\n\r\n\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\r\n\t\tvar bindResize = function () {\r\n\t\t\t$(window).on('resize.DT-'+settings.sInstance, DataTable.util.throttle( function () {\r\n\t\t\t\tif (! settings.bDestroying) {\r\n\t\t\t\t\t_fnAdjustColumnSizing( settings );\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t};\r\n\r\n\t\tbindResize();\r\n\r\n\t\tsettings._reszEvt = true;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get the maximum strlen for each data column\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {string} string of the max length\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetMaxLenString( settings, colIdx )\r\n{\r\n\tvar column = settings.aoColumns[colIdx];\r\n\r\n\tif (! column.maxLenString) {\r\n\t\tvar s, max='', maxLen = -1;\r\n\t\r\n\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\r\n\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\r\n\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\r\n\r\n\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\r\n\t\t\t\t? data.innerHTML\r\n\t\t\t\t: data+'';\r\n\r\n\t\t\t// Remove id / name attributes from elements so they\r\n\t\t\t// don't interfere with existing elements\r\n\t\t\tcellString = cellString\r\n\t\t\t\t.replace(/id=\".*?\"/g, '')\r\n\t\t\t\t.replace(/name=\".*?\"/g, '');\r\n\r\n\t\t\ts = _stripHtml(cellString)\r\n\t\t\t\t.replace( /&nbsp;/g, ' ' );\r\n\t\r\n\t\t\tif ( s.length > maxLen ) {\r\n\t\t\t\t// We want the HTML in the string, but the length that\r\n\t\t\t\t// is important is the stripped string\r\n\t\t\t\tmax = cellString;\r\n\t\t\t\tmaxLen = s.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolumn.maxLenString = max;\r\n\t}\r\n\r\n\treturn column.maxLenString;\r\n}\r\n\r\n\r\n/**\r\n * Append a CSS unit (only if required) to a string\r\n *  @param {string} value to css-ify\r\n *  @returns {string} value with css unit\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnStringToCss( s )\r\n{\r\n\tif ( s === null ) {\r\n\t\treturn '0px';\r\n\t}\r\n\r\n\tif ( typeof s == 'number' ) {\r\n\t\treturn s < 0 ?\r\n\t\t\t'0px' :\r\n\t\t\ts+'px';\r\n\t}\r\n\r\n\t// Check it has a unit character already\r\n\treturn s.match(/\\d$/) ?\r\n\t\ts+'px' :\r\n\t\ts;\r\n}\r\n\r\n/**\r\n * Re-insert the `col` elements for current visibility\r\n *\r\n * @param {*} settings DT settings\r\n */\r\nfunction _colGroup( settings ) {\r\n\tvar cols = settings.aoColumns;\r\n\r\n\tsettings.colgroup.empty();\r\n\r\n\tfor (i=0 ; i<cols.length ; i++) {\r\n\t\tif (cols[i].bVisible) {\r\n\t\t\tsettings.colgroup.append(cols[i].colEl);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction _fnSortInit( settings ) {\r\n\tvar target = settings.nTHead;\r\n\tvar headerRows = target.querySelectorAll('tr');\r\n\tvar legacyTop = settings.bSortCellsTop;\r\n\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\r\n\t\r\n\t// Legacy support for `orderCellsTop`\r\n\tif (legacyTop === true) {\r\n\t\ttarget = headerRows[0];\r\n\t}\r\n\telse if (legacyTop === false) {\r\n\t\ttarget = headerRows[ headerRows.length - 1 ];\r\n\t}\r\n\r\n\t_fnSortAttachListener(\r\n\t\tsettings,\r\n\t\ttarget,\r\n\t\ttarget === settings.nTHead\r\n\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\r\n\t\t\t: 'th'+notSelector+', td'+notSelector\r\n\t);\r\n\r\n\t// Need to resolve the user input array into our internal structure\r\n\tvar order = [];\r\n\t_fnSortResolve( settings, order, settings.aaSorting );\r\n\r\n\tsettings.aaSorting = order;\r\n}\r\n\r\n\r\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\r\n\t_fnBindAction( node, selector, function (e) {\r\n\t\tvar run = false;\r\n\t\tvar columns = column === undefined\r\n\t\t\t? _fnColumnsFromHeader( e.target )\r\n\t\t\t: [column];\r\n\r\n\t\tif ( columns.length ) {\r\n\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\t\t\tvar ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );\r\n\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\trun = true;\r\n\t\t\t\t}\t\t\t\t\t\r\n\r\n\t\t\t\t// If the first entry is no sort, then subsequent\r\n\t\t\t\t// sort columns are ignored\r\n\t\t\t\tif (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (run) {\r\n\t\t\t\t_fnProcessingRun(settings, true, function () {\r\n\t\t\t\t\t_fnSort( settings );\r\n\t\t\t\t\t_fnSortDisplay( settings, settings.aiDisplay );\r\n\r\n\t\t\t\t\t_fnReDraw( settings, false, false );\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n/**\r\n * Sort the display array to match the master's order\r\n * @param {*} settings\r\n */\r\nfunction _fnSortDisplay(settings, display) {\r\n\tif (display.length < 2) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar master = settings.aiDisplayMaster;\r\n\tvar masterMap = {};\r\n\tvar map = {};\r\n\tvar i;\r\n\r\n\t// Rather than needing an `indexOf` on master array, we can create a map\r\n\tfor (i=0 ; i<master.length ; i++) {\r\n\t\tmasterMap[master[i]] = i;\r\n\t}\r\n\r\n\t// And then cache what would be the indexOf fom the display\r\n\tfor (i=0 ; i<display.length ; i++) {\r\n\t\tmap[display[i]] = masterMap[display[i]];\r\n\t}\r\n\r\n\tdisplay.sort(function(a, b){\r\n\t\t// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\r\n\t\treturn map[a] - map[b];\r\n\t});\r\n}\r\n\r\n\r\nfunction _fnSortResolve (settings, nestedSort, sort) {\r\n\tvar push = function ( a ) {\r\n\t\tif ($.isPlainObject(a)) {\r\n\t\t\tif (a.idx !== undefined) {\r\n\t\t\t\t// Index based ordering\r\n\t\t\t\tnestedSort.push([a.idx, a.dir]);\r\n\t\t\t}\r\n\t\t\telse if (a.name) {\r\n\t\t\t\t// Name based ordering\r\n\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\r\n\t\t\t\tvar idx = cols.indexOf(a.name);\r\n\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tnestedSort.push([idx, a.dir]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Plain column index and direction pair\r\n\t\t\tnestedSort.push(a);\r\n\t\t}\r\n\t};\r\n\r\n\tif ( $.isPlainObject(sort) ) {\r\n\t\t// Object\r\n\t\tpush(sort);\r\n\t}\r\n\telse if ( sort.length && typeof sort[0] === 'number' ) {\r\n\t\t// 1D array\r\n\t\tpush(sort);\r\n\t}\r\n\telse if ( sort.length ) {\r\n\t\t// 2D array\r\n\t\tfor (var z=0; z<sort.length; z++) {\r\n\t\t\tpush(sort[z]); // Object or array\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction _fnSortFlatten ( settings )\r\n{\r\n\tvar\r\n\t\ti, k, kLen,\r\n\t\taSort = [],\r\n\t\textSort = DataTable.ext.type.order,\r\n\t\taoColumns = settings.aoColumns,\r\n\t\taDataSort, iCol, sType, srcCol,\r\n\t\tfixed = settings.aaSortingFixed,\r\n\t\tfixedObj = $.isPlainObject( fixed ),\r\n\t\tnestedSort = [];\r\n\t\r\n\tif ( ! settings.oFeatures.bSort ) {\r\n\t\treturn aSort;\r\n\t}\r\n\r\n\t// Build the sort array, with pre-fix and post-fix options if they have been\r\n\t// specified\r\n\tif ( Array.isArray( fixed ) ) {\r\n\t\t_fnSortResolve( settings, nestedSort, fixed );\r\n\t}\r\n\r\n\tif ( fixedObj && fixed.pre ) {\r\n\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\r\n\t}\r\n\r\n\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\r\n\r\n\tif (fixedObj && fixed.post ) {\r\n\t\t_fnSortResolve( settings, nestedSort, fixed.post );\r\n\t}\r\n\r\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\r\n\t{\r\n\t\tsrcCol = nestedSort[i][0];\r\n\r\n\t\tif ( aoColumns[ srcCol ] ) {\r\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\r\n\r\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\r\n\t\t\t{\r\n\t\t\t\tiCol = aDataSort[k];\r\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\r\n\r\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\r\n\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nestedSort[i][1] ) {\r\n\t\t\t\t\taSort.push( {\r\n\t\t\t\t\t\tsrc:       srcCol,\r\n\t\t\t\t\t\tcol:       iCol,\r\n\t\t\t\t\t\tdir:       nestedSort[i][1],\r\n\t\t\t\t\t\tindex:     nestedSort[i]._idx,\r\n\t\t\t\t\t\ttype:      sType,\r\n\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\r\n\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn aSort;\r\n}\r\n\r\n/**\r\n * Change the order of the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSort ( oSettings, col, dir )\r\n{\r\n\tvar\r\n\t\ti, ien, iLen,\r\n\t\taiOrig = [],\r\n\t\textSort = DataTable.ext.type.order,\r\n\t\taoData = oSettings.aoData,\r\n\t\tsortCol,\r\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\r\n\t\taSort;\r\n\r\n\t// Allow a specific column to be sorted, which will _not_ alter the display\r\n\t// master\r\n\tif (col !== undefined) {\r\n\t\tvar srcCol = oSettings.aoColumns[col];\r\n\t\taSort = [{\r\n\t\t\tsrc:       col,\r\n\t\t\tcol:       col,\r\n\t\t\tdir:       dir,\r\n\t\t\tindex:     0,\r\n\t\t\ttype:      srcCol.sType,\r\n\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\r\n\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\r\n\t\t}];\r\n\t\tdisplayMaster = displayMaster.slice();\r\n\t}\r\n\telse {\r\n\t\taSort = _fnSortFlatten( oSettings );\r\n\t}\r\n\r\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\r\n\t\tsortCol = aSort[i];\r\n\r\n\t\t// Load the data needed for the sort, for each cell\r\n\t\t_fnSortData( oSettings, sortCol.col );\r\n\t}\r\n\r\n\t/* No sorting required if server-side or no sorting array */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\r\n\t{\r\n\t\t// Reset the initial positions on each pass so we get a stable sort\r\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\r\n\t\t\taiOrig[ i ] = i;\r\n\t\t}\r\n\r\n\t\t// If the first sort is desc, then reverse the array to preserve original\r\n\t\t// order, just in reverse\r\n\t\tif (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\r\n\t\t\taiOrig.reverse();\r\n\t\t}\r\n\r\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\r\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\r\n\t\t * follow on it's own, but this is what we want (example two column sorting):\r\n\t\t *  fnLocalSorting = function(a,b){\r\n\t\t *    var test;\r\n\t\t *    test = oSort['string-asc']('data11', 'data12');\r\n\t\t *      if (test !== 0)\r\n\t\t *        return test;\r\n\t\t *    test = oSort['numeric-desc']('data21', 'data22');\r\n\t\t *    if (test !== 0)\r\n\t\t *      return test;\r\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\r\n\t\t *  }\r\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\r\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\r\n\t\t * positions in the original data array to provide a stable sort.\r\n\t\t */\r\n\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\tvar\r\n\t\t\t\tx, y, k, test, sort,\r\n\t\t\t\tlen=aSort.length,\r\n\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t// Data, which may have already been through a `-pre` function\r\n\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\tif (sort.sorter) {\r\n\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\r\n\t\t\t\t\t// data type, use it\r\n\t\t\t\t\ttest = sort.sorter(x, y);\r\n\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Otherwise, use generic sorting\r\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\r\n\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tx = aiOrig[a];\r\n\t\t\ty = aiOrig[b];\r\n\r\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t} );\r\n\t}\r\n\telse if ( aSort.length === 0 ) {\r\n\t\t// Apply index order\r\n\t\tdisplayMaster.sort(function (x, y) {\r\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t});\r\n\t}\r\n\r\n\tif (col === undefined) {\r\n\t\t// Tell the draw function that we have sorted the data\r\n\t\toSettings.bSorted = true;\r\n\t\toSettings.sortDetails = aSort;\r\n\r\n\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\r\n\t}\r\n\r\n\treturn displayMaster;\r\n}\r\n\r\n\r\n/**\r\n * Function to run on user sort request\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {int} addIndex Counter\r\n *  @param {boolean} [shift=false] Shift click add\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortAdd ( settings, colIdx, addIndex, shift )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\tvar sorting = settings.aaSorting;\r\n\tvar asSorting = col.asSorting;\r\n\tvar nextSortIdx;\r\n\tvar next = function ( a, overflow ) {\r\n\t\tvar idx = a._idx;\r\n\t\tif ( idx === undefined ) {\r\n\t\t\tidx = asSorting.indexOf(a[1]);\r\n\t\t}\r\n\r\n\t\treturn idx+1 < asSorting.length ?\r\n\t\t\tidx+1 :\r\n\t\t\toverflow ?\r\n\t\t\t\tnull :\r\n\t\t\t\t0;\r\n\t};\r\n\r\n\tif ( ! col.bSortable ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Convert to 2D array if needed\r\n\tif ( typeof sorting[0] === 'number' ) {\r\n\t\tsorting = settings.aaSorting = [ sorting ];\r\n\t}\r\n\r\n\t// If appending the sort then we are multi-column sorting\r\n\tif ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {\r\n\t\t// Are we already doing some kind of sort on this column?\r\n\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\r\n\r\n\t\tif ( sortIdx !== -1 ) {\r\n\t\t\t// Yes, modify the sort\r\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\r\n\r\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\r\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\r\n\t\t\t}\r\n\r\n\t\t\tif ( nextSortIdx === null ) {\r\n\t\t\t\tsorting.splice( sortIdx, 1 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\r\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (shift) {\r\n\t\t\t// No sort on this column yet, being added by shift click\r\n\t\t\t// add it as itself\r\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\r\n\t\t\tsorting[sorting.length-1]._idx = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No sort on this column yet, being added from a colspan\r\n\t\t\t// so add with same direction as first column\r\n\t\t\tsorting.push( [ colIdx, sorting[0][1], 0 ] );\r\n\t\t\tsorting[sorting.length-1]._idx = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\r\n\t\t// Single column - already sorting on this column, modify the sort\r\n\t\tnextSortIdx = next( sorting[0] );\r\n\r\n\t\tsorting.length = 1;\r\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\r\n\t\tsorting[0]._idx = nextSortIdx;\r\n\t}\r\n\telse {\r\n\t\t// Single column - sort only on this column\r\n\t\tsorting.length = 0;\r\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\r\n\t\tsorting[0]._idx = 0;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Set the sorting classes on table's body, Note: it is safe to call this function\r\n * when bSort and bSortClasses are false\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortingClasses( settings )\r\n{\r\n\tvar oldSort = settings.aLastSort;\r\n\tvar sortClass = settings.oClasses.order.position;\r\n\tvar sort = _fnSortFlatten( settings );\r\n\tvar features = settings.oFeatures;\r\n\tvar i, ien, colIdx;\r\n\r\n\tif ( features.bSort && features.bSortClasses ) {\r\n\t\t// Remove old sorting classes\r\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = oldSort[i].src;\r\n\r\n\t\t\t// Remove column sorting\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\r\n\t\t// Add new column sorting\r\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = sort[i].src;\r\n\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aLastSort = sort;\r\n}\r\n\r\n\r\n// Get the data to sort a column, be it from cache, fresh (populating the\r\n// cache), or from a sort formatter\r\nfunction _fnSortData( settings, colIdx )\r\n{\r\n\t// Custom sorting function - provided by the sort data type\r\n\tvar column = settings.aoColumns[ colIdx ];\r\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\r\n\tvar customData;\r\n\r\n\tif ( customSort ) {\r\n\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\r\n\t\t\t_fnColumnIndexToVisible( settings, colIdx )\r\n\t\t);\r\n\t}\r\n\r\n\t// Use / populate cache\r\n\tvar row, cellData;\r\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\r\n\tvar data = settings.aoData;\r\n\r\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\r\n\t\t// Sparse array\r\n\t\tif (! data[rowIdx]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\trow = data[rowIdx];\r\n\r\n\t\tif ( ! row._aSortData ) {\r\n\t\t\trow._aSortData = [];\r\n\t\t}\r\n\r\n\t\tif ( ! row._aSortData[colIdx] || customSort ) {\r\n\t\t\tcellData = customSort ?\r\n\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\r\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\r\n\r\n\t\t\trow._aSortData[ colIdx ] = formatter ?\r\n\t\t\t\tformatter( cellData, settings ) :\r\n\t\t\t\tcellData;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * State information for a table\r\n *\r\n * @param {*} settings\r\n * @returns State object\r\n */\r\nfunction _fnSaveState ( settings )\r\n{\r\n\tif (settings._bLoadingState) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Store the interesting variables */\r\n\tvar state = {\r\n\t\ttime:    +new Date(),\r\n\t\tstart:   settings._iDisplayStart,\r\n\t\tlength:  settings._iDisplayLength,\r\n\t\torder:   $.extend( true, [], settings.aaSorting ),\r\n\t\tsearch:  $.extend({}, settings.oPreviousSearch),\r\n\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\r\n\t\t\treturn {\r\n\t\t\t\tvisible: col.bVisible,\r\n\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\r\n\t\t\t};\r\n\t\t} )\r\n\t};\r\n\r\n\tsettings.oSavedState = state;\r\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\r\n\t\r\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\r\n\t{\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\r\n\t}\t\r\n}\r\n\r\n\r\n/**\r\n * Attempt to load a saved table state\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oInit DataTables init object so we can override settings\r\n *  @param {function} callback Callback to execute when the state has been loaded\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLoadState ( settings, init, callback )\r\n{\r\n\tif ( ! settings.oFeatures.bStateSave ) {\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar loaded = function(state) {\r\n\t\t_fnImplementState(settings, state, callback);\r\n\t}\r\n\r\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\r\n\r\n\tif ( state !== undefined ) {\r\n\t\t_fnImplementState( settings, state, callback );\r\n\t}\r\n\t// otherwise, wait for the loaded callback to be executed\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction _fnImplementState ( settings, s, callback) {\r\n\tvar i, ien;\r\n\tvar columns = settings.aoColumns;\r\n\tsettings._bLoadingState = true;\r\n\r\n\t// When StateRestore was introduced the state could now be implemented at any time\r\n\t// Not just initialisation. To do this an api instance is required in some places\r\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\r\n\r\n\tif ( ! s || ! s.time ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Reject old data\r\n\tvar duration = settings.iStateDuration;\r\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\r\n\t// cancelling of loading by returning false\r\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\r\n\tif ( abStateLoad.indexOf(false) !== -1 ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Number of columns have changed - all bets are off, no restore of settings\r\n\tif ( s.columns && columns.length !== s.columns.length ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Store the saved state so it might be accessed at any time\r\n\tsettings.oLoadedState = $.extend( true, {}, s );\r\n\r\n\t// This is needed for ColReorder, which has to happen first to allow all\r\n\t// the stored indexes to be usable. It is not publicly documented.\r\n\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\r\n\r\n\t// Page Length\r\n\tif ( s.length !== undefined ) {\r\n\t\t// If already initialised just set the value directly so that the select element is also updated\r\n\t\tif (api) {\r\n\t\t\tapi.page.len(s.length)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings._iDisplayLength   = s.length;\r\n\t\t}\r\n\t}\r\n\r\n\t// Restore key features\r\n\tif ( s.start !== undefined ) {\r\n\t\tif(api === null) {\r\n\t\t\tsettings._iDisplayStart    = s.start;\r\n\t\t\tsettings.iInitDisplayStart = s.start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\r\n\t\t}\r\n\t}\r\n\r\n\t// Order\r\n\tif ( s.order !== undefined ) {\r\n\t\tsettings.aaSorting = [];\r\n\t\t$.each( s.order, function ( i, col ) {\r\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\r\n\t\t\t\t[ 0, col[1] ] :\r\n\t\t\t\tcol\r\n\t\t\t);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Search\r\n\tif ( s.search !== undefined ) {\r\n\t\t$.extend( settings.oPreviousSearch, s.search );\r\n\t}\r\n\r\n\t// Columns\r\n\tif ( s.columns ) {\r\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\r\n\t\t\tvar col = s.columns[i];\r\n\r\n\t\t\t// Visibility\r\n\t\t\tif ( col.visible !== undefined ) {\r\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\r\n\t\t\t\tif (api) {\r\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\r\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Search\r\n\t\t\tif ( col.search !== undefined ) {\r\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\r\n\t\tif (api) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t}\r\n\r\n\tsettings._bLoadingState = false;\r\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\r\n\tcallback();\r\n}\r\n\r\n/**\r\n * Log an error message\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} level log error messages, or display them to the user\r\n *  @param {string} msg error message\r\n *  @param {int} tn Technical note id to get more information about the error.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLog( settings, level, msg, tn )\r\n{\r\n\tmsg = 'DataTables warning: '+\r\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\r\n\r\n\tif ( tn ) {\r\n\t\tmsg += '. For more information about this error, please see '+\r\n\t\t'https://datatables.net/tn/'+tn;\r\n\t}\r\n\r\n\tif ( ! level  ) {\r\n\t\t// Backwards compatibility pre 1.10\r\n\t\tvar ext = DataTable.ext;\r\n\t\tvar type = ext.sErrMode || ext.errMode;\r\n\r\n\t\tif ( settings ) {\r\n\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\r\n\t\t}\r\n\r\n\t\tif ( type == 'alert' ) {\r\n\t\t\talert( msg );\r\n\t\t}\r\n\t\telse if ( type == 'throw' ) {\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\t\telse if ( typeof type == 'function' ) {\r\n\t\t\ttype( settings, tn, msg );\r\n\t\t}\r\n\t}\r\n\telse if ( window.console && console.log ) {\r\n\t\tconsole.log( msg );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * See if a property is defined on one object, if so assign it to the other object\r\n *  @param {object} ret target object\r\n *  @param {object} src source object\r\n *  @param {string} name property\r\n *  @param {string} [mappedName] name to map too - optional, name used if not given\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnMap( ret, src, name, mappedName )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\t$.each( name, function (i, val) {\r\n\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnMap( ret, src, val );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( mappedName === undefined ) {\r\n\t\tmappedName = name;\r\n\t}\r\n\r\n\tif ( src[name] !== undefined ) {\r\n\t\tret[mappedName] = src[name];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\r\n * shallow copy arrays. The reason we need to do this, is that we don't want to\r\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\r\n * able to override them, but we do want to deep copy arrays.\r\n *  @param {object} out Object to extend\r\n *  @param {object} extender Object from which the properties will be applied to\r\n *      out\r\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\r\n *      independent copy with the exception of the `data` or `aaData` parameters\r\n *      if they are present. This is so you can pass in a collection to\r\n *      DataTables and have that used as your data source without breaking the\r\n *      references\r\n *  @returns {object} out Reference, just for convenience - out === the return.\r\n *  @memberof DataTable#oApi\r\n *  @todo This doesn't take account of arrays inside the deep copied objects.\r\n */\r\nfunction _fnExtend( out, extender, breakRefs )\r\n{\r\n\tvar val;\r\n\r\n\tfor ( var prop in extender ) {\r\n\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\r\n\t\t\tval = extender[prop];\r\n\r\n\t\t\tif ( $.isPlainObject( val ) ) {\r\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\r\n\t\t\t\t\tout[prop] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, out[prop], val );\r\n\t\t\t}\r\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\r\n\t\t\t\tout[prop] = val.slice();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout[prop] = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n\r\n/**\r\n * Bind an event handers to allow a click or return key to activate the callback.\r\n * This is good for accessibility since a return on the keyboard will have the\r\n * same effect as a click, if the element has focus.\r\n *  @param {element} n Element to bind the action to\r\n *  @param {object|string} selector Selector (for delegated events) or data object\r\n *   to pass to the triggered function\r\n *  @param {function} fn Callback function for when the event is triggered\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBindAction( n, selector, fn )\r\n{\r\n\t$(n)\r\n\t\t.on( 'click.DT', selector, function (e) {\r\n\t\t\tfn(e);\r\n\t\t} )\r\n\t\t.on( 'keypress.DT', selector, function (e){\r\n\t\t\tif ( e.which === 13 ) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tfn(e);\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.on( 'selectstart.DT', selector, function () {\r\n\t\t\t// Don't want a double click resulting in text selection\r\n\t\t\treturn false;\r\n\t\t} );\r\n}\r\n\r\n\r\n/**\r\n * Register a callback function. Easily allows a callback function to be added to\r\n * an array store of callback functions that can then all be called together.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} store Name of the array storage for the callbacks in oSettings\r\n *  @param {function} fn Function to be called back\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackReg( settings, store, fn )\r\n{\r\n\tif ( fn ) {\r\n\t\tsettings[store].push(fn);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Fire callback functions and trigger events. Note that the loop over the\r\n * callback array store is done backwards! Further note that you do not want to\r\n * fire off triggers in time sensitive applications (for example cell creation)\r\n * as its slow.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} callbackArr Name of the array storage for the callbacks in\r\n *      oSettings\r\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\r\n *      null no trigger is fired\r\n *  @param {array} args Array of arguments to pass to the callback function /\r\n *      trigger\r\n *  @param {boolean} [bubbles] True if the event should bubble\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\r\n{\r\n\tvar ret = [];\r\n\r\n\tif ( callbackArr ) {\r\n\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\r\n\t\t\treturn val.apply( settings.oInstance, args );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( eventName !== null) {\r\n\t\tvar e = $.Event( eventName+'.dt' );\r\n\t\tvar table = $(settings.nTable);\r\n\t\t\r\n\t\t// Expose the DataTables API on the event object for easy access\r\n\t\te.dt = settings.api;\r\n\r\n\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\r\n\r\n\t\t// If not yet attached to the document, trigger the event\r\n\t\t// on the body directly to sort of simulate the bubble\r\n\t\tif (bubbles && table.parents('body').length === 0) {\r\n\t\t\t$('body').trigger( e, args );\r\n\t\t}\r\n\r\n\t\tret.push( e.result );\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\nfunction _fnLengthOverflow ( settings )\r\n{\r\n\tvar\r\n\t\tstart = settings._iDisplayStart,\r\n\t\tend = settings.fnDisplayEnd(),\r\n\t\tlen = settings._iDisplayLength;\r\n\r\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\r\n\tif ( start >= end )\r\n\t{\r\n\t\tstart = end - len;\r\n\t}\r\n\r\n\t// Keep the start record on the current page\r\n\tstart -= (start % len);\r\n\r\n\tif ( len === -1 || start < 0 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\tsettings._iDisplayStart = start;\r\n}\r\n\r\n\r\nfunction _fnRenderer( settings, type )\r\n{\r\n\tvar renderer = settings.renderer;\r\n\tvar host = DataTable.ext.renderer[type];\r\n\r\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\r\n\t\t// Specific renderer for this type. If available use it, otherwise use\r\n\t\t// the default.\r\n\t\treturn host[renderer[type]] || host._;\r\n\t}\r\n\telse if ( typeof renderer === 'string' ) {\r\n\t\t// Common renderer - if there is one available for this type use it,\r\n\t\t// otherwise use the default\r\n\t\treturn host[renderer] || host._;\r\n\t}\r\n\r\n\t// Use the default\r\n\treturn host._;\r\n}\r\n\r\n\r\n/**\r\n * Detect the data source being used for the table. Used to simplify the code\r\n * a little (ajax) and to make it compress a little smaller.\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {string} Data source\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDataSource ( settings )\r\n{\r\n\tif ( settings.oFeatures.bServerSide ) {\r\n\t\treturn 'ssp';\r\n\t}\r\n\telse if ( settings.ajax ) {\r\n\t\treturn 'ajax';\r\n\t}\r\n\treturn 'dom';\r\n}\r\n\r\n/**\r\n * Common replacement for language strings\r\n *\r\n * @param {*} settings DT settings object\r\n * @param {*} str String with values to replace\r\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\r\n * @returns String\r\n */\r\nfunction _fnMacros ( settings, str, entries )\r\n{\r\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\r\n\t// used only internally\r\n\tvar\r\n\t\tformatter  = settings.fnFormatNumber,\r\n\t\tstart      = settings._iDisplayStart+1,\r\n\t\tlen        = settings._iDisplayLength,\r\n\t\tvis        = settings.fnRecordsDisplay(),\r\n\t\tmax        = settings.fnRecordsTotal(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn str.\r\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\r\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\r\n\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\r\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\r\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\r\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\r\n\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\r\n\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\r\n\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\r\n}\r\n\r\n\r\n\r\n/**\r\n * Computed structure of the DataTables API, defined by the options passed to\r\n * `DataTable.Api.register()` when building the API.\r\n *\r\n * The structure is built in order to speed creation and extension of the Api\r\n * objects since the extensions are effectively pre-parsed.\r\n *\r\n * The array is an array of objects with the following structure, where this\r\n * base array represents the Api prototype base:\r\n *\r\n *     [\r\n *       {\r\n *         name:      'data'                -- string   - Property name\r\n *         val:       function () {},       -- function - Api method (or undefined if just an object\r\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n *       },\r\n *       {\r\n *         name:     'row'\r\n *         val:       {},\r\n *         methodExt: [ ... ],\r\n *         propExt:   [\r\n *           {\r\n *             name:      'data'\r\n *             val:       function () {},\r\n *             methodExt: [ ... ],\r\n *             propExt:   [ ... ]\r\n *           },\r\n *           ...\r\n *         ]\r\n *       }\r\n *     ]\r\n *\r\n * @type {Array}\r\n * @ignore\r\n */\r\nvar __apiStruct = [];\r\n\r\n\r\n/**\r\n * `Array.prototype` reference.\r\n *\r\n * @type object\r\n * @ignore\r\n */\r\nvar __arrayProto = Array.prototype;\r\n\r\n\r\n/**\r\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\r\n * take several different forms for ease of use.\r\n *\r\n * Each of the input parameter types will be converted to a DataTables settings\r\n * object where possible.\r\n *\r\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\r\n *   of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n *   * `DataTables.Api` - API instance\r\n * @return {array|null} Matching DataTables settings objects. `null` or\r\n *   `undefined` is returned if no matching DataTable is found.\r\n * @ignore\r\n */\r\nvar _toSettings = function ( mixed )\r\n{\r\n\tvar idx, jq;\r\n\tvar settings = DataTable.settings;\r\n\tvar tables = _pluck(settings, 'nTable');\r\n\r\n\tif ( ! mixed ) {\r\n\t\treturn [];\r\n\t}\r\n\telse if ( mixed.nTable && mixed.oFeatures ) {\r\n\t\t// DataTables settings object\r\n\t\treturn [ mixed ];\r\n\t}\r\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\r\n\t\t// Table node\r\n\t\tidx = tables.indexOf(mixed);\r\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\r\n\t}\r\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\r\n\t\treturn mixed.settings().toArray();\r\n\t}\r\n\telse if ( typeof mixed === 'string' ) {\r\n\t\t// jQuery selector\r\n\t\tjq = $(mixed).get();\r\n\t}\r\n\telse if ( mixed instanceof $ ) {\r\n\t\t// jQuery object (also DataTables instance)\r\n\t\tjq = mixed.get();\r\n\t}\r\n\r\n\tif ( jq ) {\r\n\t\treturn settings.filter(function (v, idx) {\r\n\t\t\treturn jq.includes(tables[idx]);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * DataTables API class - used to control and interface with  one or more\r\n * DataTables enhanced tables.\r\n *\r\n * The API class is heavily based on jQuery, presenting a chainable interface\r\n * that you can use to interact with tables. Each instance of the API class has\r\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\r\n * table, all tables on a page or a sub-set thereof.\r\n *\r\n * Additionally the API is designed to allow you to easily work with the data in\r\n * the tables, retrieving and manipulating it as required. This is done by\r\n * presenting the API class as an array like interface. The contents of the\r\n * array depend upon the actions requested by each method (for example\r\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\r\n * return an array of objects or arrays depending upon your table's\r\n * configuration). The API object has a number of array like methods (`push`,\r\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\r\n * `unique` etc) to assist your working with the data held in a table.\r\n *\r\n * Most methods (those which return an Api instance) are chainable, which means\r\n * the return from a method call also has all of the methods available that the\r\n * top level object had. For example, these two calls are equivalent:\r\n *\r\n *     // Not chained\r\n *     api.row.add( {...} );\r\n *     api.draw();\r\n *\r\n *     // Chained\r\n *     api.row.add( {...} ).draw();\r\n *\r\n * @class DataTable.Api\r\n * @param {array|object|string|jQuery} context DataTable identifier. This is\r\n *   used to define which DataTables enhanced tables this API will operate on.\r\n *   Can be one of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n * @param {array} [data] Data to initialise the Api instance with.\r\n *\r\n * @example\r\n *   // Direct initialisation during DataTables construction\r\n *   var api = $('#example').DataTable();\r\n *\r\n * @example\r\n *   // Initialisation using a DataTables jQuery object\r\n *   var api = $('#example').dataTable().api();\r\n *\r\n * @example\r\n *   // Initialisation as a constructor\r\n *   var api = new DataTable.Api( 'table.dataTable' );\r\n */\r\n_Api = function ( context, data )\r\n{\r\n\tif ( ! (this instanceof _Api) ) {\r\n\t\treturn new _Api( context, data );\r\n\t}\r\n\r\n\tvar i;\r\n\tvar settings = [];\r\n\tvar ctxSettings = function ( o ) {\r\n\t\tvar a = _toSettings( o );\r\n\t\tif ( a ) {\r\n\t\t\tsettings.push.apply( settings, a );\r\n\t\t}\r\n\t};\r\n\r\n\tif ( Array.isArray( context ) ) {\r\n\t\tfor ( i=0 ; i<context.length ; i++ ) {\r\n\t\t\tctxSettings( context[i] );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tctxSettings( context );\r\n\t}\r\n\r\n\t// Remove duplicates\r\n\tthis.context = settings.length > 1\r\n\t\t? _unique( settings )\r\n\t\t: settings;\r\n\r\n\t// Initial data\r\n\tif ( data ) {\r\n\t\t// Chrome can throw a max stack error if apply is called with\r\n\t\t// too large an array, but apply is faster.\r\n\t\tif (data.length < 10000) {\r\n\t\t\tthis.push.apply(this, data);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (i=0 ; i<data.length ; i++) {\r\n\t\t\t\tthis.push(data[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// selector\r\n\tthis.selector = {\r\n\t\trows: null,\r\n\t\tcols: null,\r\n\t\topts: null\r\n\t};\r\n\r\n\t_Api.extend( this, this, __apiStruct );\r\n};\r\n\r\nDataTable.Api = _Api;\r\n\r\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\r\n// isPlainObject.\r\n$.extend( _Api.prototype, {\r\n\tany: function ()\r\n\t{\r\n\t\treturn this.count() !== 0;\r\n\t},\r\n\r\n\tcontext: [], // array of table settings objects\r\n\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.flatten().length;\r\n\t},\r\n\r\n\teach: function ( fn )\r\n\t{\r\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\r\n\t\t\tfn.call( this, this[i], i, this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\teq: function ( idx )\r\n\t{\r\n\t\tvar ctx = this.context;\r\n\r\n\t\treturn ctx.length > idx ?\r\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\r\n\t\t\tnull;\r\n\t},\r\n\r\n\tfilter: function ( fn )\r\n\t{\r\n\t\tvar a = __arrayProto.filter.call( this, fn, this );\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\tflatten: function ()\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\r\n\t},\r\n\r\n\tget: function ( idx )\r\n\t{\r\n\t\treturn this[ idx ];\r\n\t},\r\n\r\n\tjoin:    __arrayProto.join,\r\n\r\n\tincludes: function ( find ) {\r\n\t\treturn this.indexOf( find ) === -1 ? false : true;\r\n\t},\r\n\r\n\tindexOf: __arrayProto.indexOf,\r\n\r\n\titerator: function ( flatten, type, fn, alwaysNew ) {\r\n\t\tvar\r\n\t\t\ta = [], ret,\r\n\t\t\ti, ien, j, jen,\r\n\t\t\tcontext = this.context,\r\n\t\t\trows, items, item,\r\n\t\t\tselector = this.selector;\r\n\r\n\t\t// Argument shifting\r\n\t\tif ( typeof flatten === 'string' ) {\r\n\t\t\talwaysNew = fn;\r\n\t\t\tfn = type;\r\n\t\t\ttype = flatten;\r\n\t\t\tflatten = false;\r\n\t\t}\r\n\r\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tvar apiInst = new _Api( context[i] );\r\n\r\n\t\t\tif ( type === 'table' ) {\r\n\t\t\t\tret = fn.call( apiInst, context[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\r\n\t\t\t\t// this has same length as context - one entry for each table\r\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\r\n\t\t\t\t// columns and rows share the same structure.\r\n\t\t\t\t// 'this' is an array of column indexes for each context\r\n\t\t\t\titems = this[i];\r\n\r\n\t\t\t\tif ( type === 'column-rows' ) {\r\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\r\n\t\t\t\t\titem = items[j];\r\n\r\n\t\t\t\t\tif ( type === 'cell' ) {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\ta.push( ret );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( a.length || alwaysNew ) {\r\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\r\n\t\t\tvar apiSelector = api.selector;\r\n\t\t\tapiSelector.rows = selector.rows;\r\n\t\t\tapiSelector.cols = selector.cols;\r\n\t\t\tapiSelector.opts = selector.opts;\r\n\t\t\treturn api;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlastIndexOf: __arrayProto.lastIndexOf,\r\n\r\n\tlength:  0,\r\n\r\n\tmap: function ( fn )\r\n\t{\r\n\t\tvar a = __arrayProto.map.call( this, fn, this );\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\tpluck: function ( prop )\r\n\t{\r\n\t\tvar fn = DataTable.util.get(prop);\r\n\r\n\t\treturn this.map( function ( el ) {\r\n\t\t\treturn fn(el);\r\n\t\t} );\r\n\t},\r\n\r\n\tpop:     __arrayProto.pop,\r\n\r\n\tpush:    __arrayProto.push,\r\n\r\n\treduce: __arrayProto.reduce,\r\n\r\n\treduceRight: __arrayProto.reduceRight,\r\n\r\n\treverse: __arrayProto.reverse,\r\n\r\n\t// Object with rows, columns and opts\r\n\tselector: null,\r\n\r\n\tshift:   __arrayProto.shift,\r\n\r\n\tslice: function () {\r\n\t\treturn new _Api( this.context, this );\r\n\t},\r\n\r\n\tsort:    __arrayProto.sort,\r\n\r\n\tsplice:  __arrayProto.splice,\r\n\r\n\ttoArray: function ()\r\n\t{\r\n\t\treturn __arrayProto.slice.call( this );\r\n\t},\r\n\r\n\tto$: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\ttoJQuery: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\tunique: function ()\r\n\t{\r\n\t\treturn new _Api( this.context, _unique(this.toArray()) );\r\n\t},\r\n\r\n\tunshift: __arrayProto.unshift\r\n} );\r\n\r\n\r\nfunction _api_scope( scope, fn, struc ) {\r\n\treturn function () {\r\n\t\tvar ret = fn.apply( scope || this, arguments );\r\n\r\n\t\t// Method extension\r\n\t\t_Api.extend( ret, ret, struc.methodExt );\r\n\t\treturn ret;\r\n\t};\r\n}\r\n\r\nfunction _api_find( src, name ) {\r\n\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\r\n\t\tif ( src[i].name === name ) {\r\n\t\t\treturn src[i];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nwindow.__apiStruct = __apiStruct;\r\n\r\n_Api.extend = function ( scope, obj, ext )\r\n{\r\n\t// Only extend API instances and static properties of the API\r\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\tstruct;\r\n\r\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\tstruct = ext[i];\r\n\r\n\t\tif (struct.name === '__proto__') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Value\r\n\t\tobj[ struct.name ] = struct.type === 'function' ?\r\n\t\t\t_api_scope( scope, struct.val, struct ) :\r\n\t\t\tstruct.type === 'object' ?\r\n\t\t\t\t{} :\r\n\t\t\t\tstruct.val;\r\n\r\n\t\tobj[ struct.name ].__dt_wrapper = true;\r\n\r\n\t\t// Property extension\r\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\r\n\t}\r\n};\r\n\r\n//     [\r\n//       {\r\n//         name:      'data'                -- string   - Property name\r\n//         val:       function () {},       -- function - Api method (or undefined if just an object\r\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n//       },\r\n//       {\r\n//         name:     'row'\r\n//         val:       {},\r\n//         methodExt: [ ... ],\r\n//         propExt:   [\r\n//           {\r\n//             name:      'data'\r\n//             val:       function () {},\r\n//             methodExt: [ ... ],\r\n//             propExt:   [ ... ]\r\n//           },\r\n//           ...\r\n//         ]\r\n//       }\r\n//     ]\r\n\r\n\r\n_Api.register = _api_register = function ( name, val )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\r\n\t\t\t_Api.register( name[j], val );\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\their = name.split('.'),\r\n\t\tstruct = __apiStruct,\r\n\t\tkey, method;\r\n\r\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\r\n\t\tmethod = heir[i].indexOf('()') !== -1;\r\n\t\tkey = method ?\r\n\t\t\their[i].replace('()', '') :\r\n\t\t\their[i];\r\n\r\n\t\tvar src = _api_find( struct, key );\r\n\t\tif ( ! src ) {\r\n\t\t\tsrc = {\r\n\t\t\t\tname:      key,\r\n\t\t\t\tval:       {},\r\n\t\t\t\tmethodExt: [],\r\n\t\t\t\tpropExt:   [],\r\n\t\t\t\ttype:      'object'\r\n\t\t\t};\r\n\t\t\tstruct.push( src );\r\n\t\t}\r\n\r\n\t\tif ( i === ien-1 ) {\r\n\t\t\tsrc.val = val;\r\n\t\t\tsrc.type = typeof val === 'function' ?\r\n\t\t\t\t'function' :\r\n\t\t\t\t$.isPlainObject( val ) ?\r\n\t\t\t\t\t'object' :\r\n\t\t\t\t\t'other';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstruct = method ?\r\n\t\t\t\tsrc.methodExt :\r\n\t\t\t\tsrc.propExt;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\r\n\t_Api.register( pluralName, val );\r\n\r\n\t_Api.register( singularName, function () {\r\n\t\tvar ret = val.apply( this, arguments );\r\n\r\n\t\tif ( ret === this ) {\r\n\t\t\t// Returned item is the API instance that was passed in, return it\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse if ( ret instanceof _Api ) {\r\n\t\t\t// New API instance returned, want the value from the first item\r\n\t\t\t// in the returned array for the singular result.\r\n\t\t\treturn ret.length ?\r\n\t\t\t\tArray.isArray( ret[0] ) ?\r\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\r\n\t\t\t\t\tret[0] :\r\n\t\t\t\tundefined;\r\n\t\t}\r\n\r\n\t\t// Non-API return - just fire it back\r\n\t\treturn ret;\r\n\t} );\r\n};\r\n\r\n\r\n/**\r\n * Selector for HTML tables. Apply the given selector to the give array of\r\n * DataTables settings objects.\r\n *\r\n * @param {string|integer} [selector] jQuery selector string or integer\r\n * @param  {array} Array of DataTables settings objects to be filtered\r\n * @return {array}\r\n * @ignore\r\n */\r\nvar __table_selector = function ( selector, a )\r\n{\r\n\tif ( Array.isArray(selector) ) {\r\n\t\tvar result = [];\r\n\r\n\t\tselector.forEach(function (sel) {\r\n\t\t\tvar inner = __table_selector(sel, a);\r\n\r\n\t\t\tresult.push.apply(result, inner);\r\n\t\t});\r\n\r\n\t\treturn result.filter( function (item) {\r\n\t\t\treturn item;\r\n\t\t});\r\n\t}\r\n\r\n\t// Integer is used to pick out a table by index\r\n\tif ( typeof selector === 'number' ) {\r\n\t\treturn [ a[ selector ] ];\r\n\t}\r\n\r\n\t// Perform a jQuery selector on the table nodes\r\n\tvar nodes = a.map( function (el) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\treturn $(nodes)\r\n\t\t.filter( selector )\r\n\t\t.map( function () {\r\n\t\t\t// Need to translate back from the table node to the settings\r\n\t\t\tvar idx = nodes.indexOf(this);\r\n\t\t\treturn a[ idx ];\r\n\t\t} )\r\n\t\t.toArray();\r\n};\r\n\r\n\r\n\r\n/**\r\n * Context selector for the API's context (i.e. the tables the API instance\r\n * refers to.\r\n *\r\n * @name    DataTable.Api#tables\r\n * @param {string|integer} [selector] Selector to pick which tables the iterator\r\n *   should operate on. If not given, all tables in the current context are\r\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\r\n *   select multiple tables or as an integer to select a single table.\r\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\r\n */\r\n_api_register( 'tables()', function ( selector ) {\r\n\t// A new instance is created if there was a selector specified\r\n\treturn selector !== undefined && selector !== null ?\r\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\r\n\t\tthis;\r\n} );\r\n\r\n\r\n_api_register( 'table()', function ( selector ) {\r\n\tvar tables = this.tables( selector );\r\n\tvar ctx = tables.context;\r\n\r\n\t// Truncate to the first matched table\r\n\treturn ctx.length ?\r\n\t\tnew _Api( ctx[0] ) :\r\n\t\ttables;\r\n} );\r\n\r\n// Common methods, combined to reduce size\r\n[\r\n\t['nodes', 'node', 'nTable'],\r\n\t['body', 'body', 'nTBody'],\r\n\t['header', 'header', 'nTHead'],\r\n\t['footer', 'footer', 'nTFoot'],\r\n].forEach(function (item) {\r\n\t_api_registerPlural(\r\n\t\t'tables().' + item[0] + '()',\r\n\t\t'table().' + item[1] + '()' ,\r\n\t\tfunction () {\r\n\t\t\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\t\t\treturn ctx[item[2]];\r\n\t\t\t}, 1 );\r\n\t\t}\r\n\t);\r\n});\r\n\r\n// Structure methods\r\n[\r\n\t['header', 'aoHeader'],\r\n\t['footer', 'aoFooter'],\r\n].forEach(function (item) {\r\n\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\r\n\t\tvar indexes = this.columns(selector).indexes().flatten();\r\n\t\tvar ctx = this.context[0];\r\n\t\t\r\n\t\treturn _fnHeaderLayout(ctx, ctx[item[1]], indexes);\r\n\t} );\r\n})\r\n\r\n\r\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTableWrapper;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'tables().every()', function ( fn ) {\r\n\tvar that = this;\r\n\r\n\treturn this.iterator('table', function (s, i) {\r\n\t\tfn.call(that.table(i), i);\r\n\t});\r\n});\r\n\r\n_api_register( 'caption()', function ( value, side ) {\r\n\tvar context = this.context;\r\n\r\n\t// Getter - return existing node's content\r\n\tif ( value === undefined ) {\r\n\t\tvar caption = context[0].captionNode;\r\n\r\n\t\treturn caption && context.length ?\r\n\t\t\tcaption.innerHTML : \r\n\t\t\tnull;\r\n\t}\r\n\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\tvar table = $(ctx.nTable);\r\n\t\tvar caption = $(ctx.captionNode);\r\n\t\tvar container = $(ctx.nTableWrapper);\r\n\r\n\t\t// Create the node if it doesn't exist yet\r\n\t\tif ( ! caption.length ) {\r\n\t\t\tcaption = $('<caption/>').html( value );\r\n\t\t\tctx.captionNode = caption[0];\r\n\r\n\t\t\t// If side isn't set, we need to insert into the document to let the\r\n\t\t\t// CSS decide so we can read it back, otherwise there is no way to\r\n\t\t\t// know if the CSS would put it top or bottom for scrolling\r\n\t\t\tif (! side) {\r\n\t\t\t\ttable.prepend(caption);\r\n\r\n\t\t\t\tside = caption.css('caption-side');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcaption.html( value );\r\n\r\n\t\tif ( side ) {\r\n\t\t\tcaption.css( 'caption-side', side );\r\n\t\t\tcaption[0]._captionSide = side;\r\n\t\t}\r\n\r\n\t\tif (container.find('div.dataTables_scroll').length) {\r\n\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\r\n\r\n\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttable.prepend(caption);\r\n\t\t}\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'caption.node()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\treturn ctx.length ? ctx[0].captionNode : null;\r\n} );\r\n\r\n\r\n/**\r\n * Redraw the tables in the current context.\r\n */\r\n_api_register( 'draw()', function ( paging ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( paging === 'page' ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ( typeof paging === 'string' ) {\r\n\t\t\t\tpaging = paging === 'full-hold' ?\r\n\t\t\t\t\tfalse :\r\n\t\t\t\t\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, paging===false );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get the current page index.\r\n *\r\n * @return {integer} Current page index (zero based)\r\n *//**\r\n * Set the current page.\r\n *\r\n * Note that if you attempt to show a page which does not exist, DataTables will\r\n * not throw an error, but rather reset the paging.\r\n *\r\n * @param {integer|string} action The paging action to take. This can be one of:\r\n *  * `integer` - The page index to jump to\r\n *  * `string` - An action to take:\r\n *    * `first` - Jump to first page.\r\n *    * `next` - Jump to the next page\r\n *    * `previous` - Jump to previous page\r\n *    * `last` - Jump to the last page.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page()', function ( action ) {\r\n\tif ( action === undefined ) {\r\n\t\treturn this.page.info().page; // not an expensive call\r\n\t}\r\n\r\n\t// else, have an action to take on all tables\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnPageChange( settings, action );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Paging information for the first table in the current context.\r\n *\r\n * If you require paging information for another table, use the `table()` method\r\n * with a suitable selector.\r\n *\r\n * @return {object} Object with the following properties set:\r\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\r\n *  * `pages` - Total number of pages\r\n *  * `start` - Display index for the first record shown on the current page\r\n *  * `end` - Display index for the last record shown on the current page\r\n *  * `length` - Display length (number of records). Note that generally `start\r\n *    + length = end`, but this is not always true, for example if there are\r\n *    only 2 records to show on the final page, with a length of 10.\r\n *  * `recordsTotal` - Full data set length\r\n *  * `recordsDisplay` - Data set length once the current filtering criterion\r\n *    are applied.\r\n */\r\n_api_register( 'page.info()', function () {\r\n\tif ( this.context.length === 0 ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tvar\r\n\t\tsettings   = this.context[0],\r\n\t\tstart      = settings._iDisplayStart,\r\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\r\n\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn {\r\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\r\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\"start\":          start,\r\n\t\t\"end\":            settings.fnDisplayEnd(),\r\n\t\t\"length\":         len,\r\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\r\n\t\t\"recordsDisplay\": visRecords,\r\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\r\n\t};\r\n} );\r\n\r\n\r\n/**\r\n * Get the current page length.\r\n *\r\n * @return {integer} Current page length. Note `-1` indicates that all records\r\n *   are to be shown.\r\n *//**\r\n * Set the current page length.\r\n *\r\n * @param {integer} Page length to set. Use `-1` to show all records.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page.len()', function ( len ) {\r\n\t// Note that we can't call this function 'length()' because `length`\r\n\t// is a Javascript property of functions which defines how many arguments\r\n\t// the function expects.\r\n\tif ( len === undefined ) {\r\n\t\treturn this.context.length !== 0 ?\r\n\t\t\tthis.context[0]._iDisplayLength :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// else, set the page length\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnLengthChange( settings, len );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\nvar __reload = function ( settings, holdPosition, callback ) {\r\n\t// Use the draw event to trigger a callback\r\n\tif ( callback ) {\r\n\t\tvar api = new _Api( settings );\r\n\r\n\t\tapi.one( 'draw', function () {\r\n\t\t\tcallback( api.ajax.json() );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t_fnReDraw( settings, holdPosition );\r\n\t}\r\n\telse {\r\n\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t// Cancel an existing request\r\n\t\tvar xhr = settings.jqXHR;\r\n\t\tif ( xhr && xhr.readyState !== 4 ) {\r\n\t\t\txhr.abort();\r\n\t\t}\r\n\r\n\t\t// Trigger xhr\r\n\t\t_fnBuildAjax( settings, {}, function( json ) {\r\n\t\t\t_fnClearTable( settings );\r\n\r\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\t_fnAddData( settings, data[i] );\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, holdPosition );\r\n\t\t\t_fnInitComplete( settings );\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Get the JSON response from the last Ajax request that DataTables made to the\r\n * server. Note that this returns the JSON from the first table in the current\r\n * context.\r\n *\r\n * @return {object} JSON received from the server.\r\n */\r\n_api_register( 'ajax.json()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].json;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Get the data submitted in the last Ajax request\r\n */\r\n_api_register( 'ajax.params()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].oAjaxData;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Reload tables from the Ajax data source. Note that this function will\r\n * automatically re-draw the table when the remote data has been loaded.\r\n *\r\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\r\n *   position. A full re-sort and re-filter is performed when this method is\r\n *   called, which is why the pagination reset is the default action.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\r\n\treturn this.iterator( 'table', function (settings) {\r\n\t\t__reload( settings, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Get the current Ajax URL. Note that this returns the URL from the first\r\n * table in the current context.\r\n *\r\n * @return {string} Current Ajax source URL\r\n *//**\r\n * Set the Ajax URL. Note that this will set the URL for all tables in the\r\n * current context.\r\n *\r\n * @param {string} url URL to set.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url()', function ( url ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( url === undefined ) {\r\n\t\t// get\r\n\t\tif ( ctx.length === 0 ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tctx = ctx[0];\r\n\r\n\t\treturn $.isPlainObject( ctx.ajax ) ?\r\n\t\t\tctx.ajax.url :\r\n\t\t\tctx.ajax;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\r\n\t\t\tsettings.ajax.url = url;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings.ajax = url;\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Load data from the newly set Ajax URL. Note that this method is only\r\n * available when `ajax.url()` is used to set a URL. Additionally, this method\r\n * has the same effect as calling `ajax.reload()` but is provided for\r\n * convenience when setting a new URL. Like `ajax.reload()` it will\r\n * automatically redraw the table once the remote data has been loaded.\r\n *\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\r\n\t// Same as a reload, but makes sense to present it for easy access after a\r\n\t// url change\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\t__reload( ctx, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n\r\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\r\n{\r\n\tvar\r\n\t\tout = [], res,\r\n\t\ta, i, ien, j, jen,\r\n\t\tselectorType = typeof selector;\r\n\r\n\t// Can't just check for isArray here, as an API or jQuery instance might be\r\n\t// given with their array like look\r\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\r\n\t\tselector = [ selector ];\r\n\t}\r\n\r\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\r\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\r\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?\r\n\t\t\tselector[i].split(',') :\r\n\t\t\t[ selector[i] ];\r\n\r\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\r\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\r\n\r\n\t\t\t// Remove empty items\r\n\t\t\tres = res.filter( function (item) {\r\n\t\t\t\treturn item !== null && item !== undefined;\r\n\t\t\t});\r\n\r\n\t\t\tif ( res && res.length ) {\r\n\t\t\t\tout = out.concat( res );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// selector extensions\r\n\tvar ext = _ext.selector[ type ];\r\n\tif ( ext.length ) {\r\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\t\tout = ext[i]( settings, opts, out );\r\n\t\t}\r\n\t}\r\n\r\n\treturn _unique( out );\r\n};\r\n\r\n\r\nvar _selector_opts = function ( opts )\r\n{\r\n\tif ( ! opts ) {\r\n\t\topts = {};\r\n\t}\r\n\r\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\r\n\t// than search\r\n\tif ( opts.filter && opts.search === undefined ) {\r\n\t\topts.search = opts.filter;\r\n\t}\r\n\r\n\treturn $.extend( {\r\n\t\tsearch: 'none',\r\n\t\torder: 'current',\r\n\t\tpage: 'all'\r\n\t}, opts );\r\n};\r\n\r\n\r\n// Reduce the API instance to the first item found\r\nvar _selector_first = function ( old )\r\n{\r\n\tvar inst = new _Api(old.context[0]);\r\n\r\n\t// Use a push rather than passing to the constructor, since it will\r\n\t// merge arrays down automatically, which isn't what is wanted here\r\n\tif (old.length) {\r\n\t\tinst.push( old[0] );\r\n\t}\r\n\r\n\tinst.selector = old.selector;\r\n\r\n\t// Limit to a single row / column / cell\r\n\tif (inst.length && inst[0].length > 1) {\r\n\t\tinst[0].splice(1);\r\n\t}\r\n\r\n\treturn inst;\r\n};\r\n\r\n\r\nvar _selector_row_indexes = function ( settings, opts )\r\n{\r\n\tvar\r\n\t\ti, ien, tmp, a=[],\r\n\t\tdisplayFiltered = settings.aiDisplay,\r\n\t\tdisplayMaster = settings.aiDisplayMaster;\r\n\r\n\tvar\r\n\t\tsearch = opts.search,  // none, applied, removed\r\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\r\n\t\tpage   = opts.page;    // all, current\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t// In server-side processing mode, most options are irrelevant since\r\n\t\t// rows not shown don't exist and the index order is the applied order\r\n\t\t// Removed is a special case - for consistency just return an empty\r\n\t\t// array\r\n\t\treturn search === 'removed' ?\r\n\t\t\t[] :\r\n\t\t\t_range( 0, displayMaster.length );\r\n\t}\r\n\r\n\tif ( page == 'current' ) {\r\n\t\t// Current page implies that order=current and filter=applied, since it is\r\n\t\t// fairly senseless otherwise, regardless of what order and search actually\r\n\t\t// are\r\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\r\n\t\t\ta.push( displayFiltered[i] );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'current' || order == 'applied' ) {\r\n\t\tif ( search == 'none') {\r\n\t\t\ta = displayMaster.slice();\r\n\t\t}\r\n\t\telse if ( search == 'applied' ) {\r\n\t\t\ta = displayFiltered.slice();\r\n\t\t}\r\n\t\telse if ( search == 'removed' ) {\r\n\t\t\t// O(n+m) solution by creating a hash map\r\n\t\t\tvar displayFilteredMap = {};\r\n\r\n\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\r\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\r\n\t\t\t}\r\n\r\n\t\t\tdisplayMaster.forEach(function (item) {\r\n\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\r\n\t\t\t\t\ta.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'index' || order == 'original' ) {\r\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tif (! settings.aoData[i]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ( search == 'none' ) {\r\n\t\t\t\ta.push( i );\r\n\t\t\t}\r\n\t\t\telse { // applied | removed\r\n\t\t\t\ttmp = displayFiltered.indexOf(i);\r\n\r\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\r\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\r\n\t\t\t\t{\r\n\t\t\t\t\ta.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if ( typeof order === 'number' ) {\r\n\t\t// Order the rows by the given column\r\n\t\tvar ordered = _fnSort(settings, order, 'asc');\r\n\r\n\t\tif (search === 'none') {\r\n\t\t\ta = ordered;\r\n\t\t}\r\n\t\telse { // applied | removed\r\n\t\t\tfor (i=0; i<ordered.length; i++) {\r\n\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\r\n\r\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\r\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\r\n\t\t\t\t{\r\n\t\t\t\t\ta.push( ordered[i] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a;\r\n};\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Rows\r\n *\r\n * {}          - no selector - use all available rows\r\n * {integer}   - row aoData index\r\n * {node}      - TR node\r\n * {string}    - jQuery selector to apply to the TR elements\r\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\r\n *\r\n */\r\nvar __row_selector = function ( settings, selector, opts )\r\n{\r\n\tvar rows;\r\n\tvar run = function ( sel ) {\r\n\t\tvar selInt = _intVal( sel );\r\n\t\tvar aoData = settings.aoData;\r\n\r\n\t\t// Short cut - selector is a number and no options provided (default is\r\n\t\t// all records, so no need to check if the index is in there, since it\r\n\t\t// must be - dev error if the index doesn't exist).\r\n\t\tif ( selInt !== null && ! opts ) {\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\r\n\t\tif ( ! rows ) {\r\n\t\t\trows = _selector_row_indexes( settings, opts );\r\n\t\t}\r\n\r\n\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\r\n\t\t\t// Selector - integer\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\r\n\t\t\t// Selector - none\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\t// Selector - function\r\n\t\tif ( typeof sel === 'function' ) {\r\n\t\t\treturn rows.map( function (idx) {\r\n\t\t\t\tvar row = aoData[ idx ];\r\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Selector - node\r\n\t\tif ( sel.nodeName ) {\r\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\r\n\t\t\tvar cellIdx = sel._DT_CellIndex;\r\n\r\n\t\t\tif ( rowIdx !== undefined ) {\r\n\t\t\t\t// Make sure that the row is actually still present in the table\r\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\r\n\t\t\t\t\t[ rowIdx ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse if ( cellIdx ) {\r\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\r\n\t\t\t\t\t[ cellIdx.row ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\r\n\t\t\t\treturn host.length ?\r\n\t\t\t\t\t[ host.data('dt-row') ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ID selector. Want to always be able to select rows by id, regardless\r\n\t\t// of if the tr element has been created or not, so can't rely upon\r\n\t\t// jQuery here - hence a custom implementation. This does not match\r\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\r\n\t\t// but to select it using a CSS selector engine (like Sizzle or\r\n\t\t// querySelect) it would need to need to be escaped for some characters.\r\n\t\t// DataTables simplifies this for row selectors since you can select\r\n\t\t// only a row. A # indicates an id any anything that follows is the id -\r\n\t\t// unescaped.\r\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\r\n\t\t\t// get row index from id\r\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\r\n\t\t\tif ( rowObj !== undefined ) {\r\n\t\t\t\treturn [ rowObj.idx ];\r\n\t\t\t}\r\n\r\n\t\t\t// need to fall through to jQuery in case there is DOM id that\r\n\t\t\t// matches\r\n\t\t}\r\n\t\t\r\n\t\t// Get nodes in the order from the `rows` array with null values removed\r\n\t\tvar nodes = _removeEmpty(\r\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\r\n\t\t);\r\n\r\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\r\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\r\n\t\t// it also allows arrays, so this will cope with all three options\r\n\t\treturn $(nodes)\r\n\t\t\t.filter( sel )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn this._DT_RowIndex;\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\t};\r\n\r\n\tvar matched = _selector_run( 'row', selector, run, settings, opts );\r\n\r\n\tif (opts.order === 'current' || opts.order === 'applied') {\r\n\t\t_fnSortDisplay(settings, matched);\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\n_api_register( 'rows()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __row_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in __row_selector?\r\n\tinst.selector.rows = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_register( 'rows().nodes()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn settings.aoData[ row ].nTr || undefined;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'rows().data()', function () {\r\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\tvar r = settings.aoData[ row ];\r\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\t_fnInvalidate( settings, row, src );\r\n\t} );\r\n} );\r\n\r\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn row;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\r\n\tvar a = [];\r\n\tvar context = this.context;\r\n\r\n\t// `iterator` will drop undefined values, but in this case we want them\r\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\r\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\r\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn new _Api( context, a );\r\n} );\r\n\r\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\r\n\tthis.iterator( 'row', function ( settings, row ) {\r\n\t\tvar data = settings.aoData;\r\n\t\tvar rowData = data[ row ];\r\n\r\n\t\t// Delete from the display arrays\r\n\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\r\n\t\tif (idx !== -1) {\r\n\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\r\n\t\t}\r\n\r\n\t\t// For server-side processing tables - subtract the deleted row from the count\r\n\t\tif ( settings._iRecordsDisplay > 0 ) {\r\n\t\t\tsettings._iRecordsDisplay--;\r\n\t\t}\r\n\r\n\t\t// Check for an 'overflow' they case for displaying the table\r\n\t\t_fnLengthOverflow( settings );\r\n\r\n\t\t// Remove the row's ID reference if there is one\r\n\t\tvar id = settings.rowIdFn( rowData._aData );\r\n\t\tif ( id !== undefined ) {\r\n\t\t\tdelete settings.aIds[ id ];\r\n\t\t}\r\n\r\n\t\tdata[row] = null;\r\n\t} );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'rows.add()', function ( rows ) {\r\n\tvar newRows = this.iterator( 'table', function ( settings ) {\r\n\t\t\tvar row, i, ien;\r\n\t\t\tvar out = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t}, 1 );\r\n\r\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\r\n\tvar modRows = this.rows( -1 );\r\n\tmodRows.pop();\r\n\tmodRows.push.apply(modRows, newRows);\r\n\r\n\treturn modRows;\r\n} );\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( 'row()', function ( selector, opts ) {\r\n\treturn _selector_first( this.rows( selector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'row().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && this.length && this[0].length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._aData :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\tvar row = ctx[0].aoData[ this[0] ];\r\n\trow._aData = data;\r\n\r\n\t// If the DOM has an id, and the data source is an array\r\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\r\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\r\n\t}\r\n\r\n\t// Automatically invalidate\r\n\t_fnInvalidate( ctx[0], this[0], 'data' );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'row().node()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif (ctx.length && this.length && this[0].length) {\r\n\t\tvar row = ctx[0].aoData[ this[0] ];\r\n\r\n\t\tif (row && row.nTr) {\r\n\t\t\treturn row.nTr;\r\n\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n} );\r\n\r\n\r\n_api_register( 'row.add()', function ( row ) {\r\n\t// Allow a jQuery object to be passed in - only a single row is added from\r\n\t// it though - the first element in the set\r\n\tif ( row instanceof $ && row.length ) {\r\n\t\trow = row[0];\r\n\t}\r\n\r\n\tvar rows = this.iterator( 'table', function ( settings ) {\r\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\treturn _fnAddTr( settings, row )[0];\r\n\t\t}\r\n\t\treturn _fnAddData( settings, row );\r\n\t} );\r\n\r\n\t// Return an Api.rows() extended instance, with the newly added row selected\r\n\treturn this.row( rows[0] );\r\n} );\r\n\r\n\r\n$(document).on('plugin-init.dt', function (e, context) {\r\n\tvar api = new _Api( context );\r\n\r\n\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\r\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\r\n\t\t// internal loop\r\n\t\tvar idFn = settings.rowIdFn;\r\n\t\tvar rows = settings.aiDisplayMaster;\r\n\t\tvar ids = [];\r\n\r\n\t\tfor (var i=0 ; i<rows.length ; i++) {\r\n\t\t\tvar rowIdx = rows[i];\r\n\t\t\tvar data = settings.aoData[rowIdx];\r\n\r\n\t\t\tif (data._detailsShow) {\r\n\t\t\t\tids.push( '#' + idFn(data._aData) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\td.childRows = ids;\r\n\t});\r\n\r\n\t// For future state loads (e.g. with StateRestore)\r\n\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\r\n\t\t__details_state_load( api, state );\r\n\t});\r\n\r\n\t// And the initial load state\r\n\t__details_state_load( api, api.state.loaded() );\r\n});\r\n\r\nvar __details_state_load = function (api, state)\r\n{\r\n\tif ( state && state.childRows ) {\r\n\t\tapi\r\n\t\t\t.rows( state.childRows.map(function (id) {\r\n\t\t\t\t// Escape any `:` characters from the row id. Accounts for\r\n\t\t\t\t// already escaped characters.\r\n\t\t\t\treturn id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\r\n\t\t\t}) )\r\n\t\t\t.every( function () {\r\n\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nvar __details_add = function ( ctx, row, data, klass )\r\n{\r\n\t// Convert to array of TR elements\r\n\tvar rows = [];\r\n\tvar addRow = function ( r, k ) {\r\n\t\t// Recursion to allow for arrays of jQuery objects\r\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\r\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\r\n\t\t\t\taddRow( r[i], k );\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If we get a TR element, then just add it directly - up to the dev\r\n\t\t// to add the correct number of columns etc\r\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\r\n\t\t\tr.setAttribute( 'data-dt-row', row.idx );\r\n\t\t\trows.push( r );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Otherwise create a row with a wrapper\r\n\t\t\tvar created = $('<tr><td></td></tr>')\r\n\t\t\t\t.attr( 'data-dt-row', row.idx )\r\n\t\t\t\t.addClass( k );\r\n\t\t\t\r\n\t\t\t$('td', created)\r\n\t\t\t\t.addClass( k )\r\n\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\r\n\r\n\t\t\trows.push( created[0] );\r\n\t\t}\r\n\t};\r\n\r\n\taddRow( data, klass );\r\n\r\n\tif ( row._details ) {\r\n\t\trow._details.detach();\r\n\t}\r\n\r\n\trow._details = $(rows);\r\n\r\n\t// If the children were already shown, that state should be retained\r\n\tif ( row._detailsShow ) {\r\n\t\trow._details.insertAfter( row.nTr );\r\n\t}\r\n};\r\n\r\n\r\n// Make state saving of child row details async to allow them to be batch processed\r\nvar __details_state = DataTable.util.throttle(\r\n\tfunction (ctx) {\r\n\t\t_fnSaveState( ctx[0] )\r\n\t},\r\n\t500\r\n);\r\n\r\n\r\nvar __details_remove = function ( api, idx )\r\n{\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length ) {\r\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\r\n\r\n\t\tif ( row && row._details ) {\r\n\t\t\trow._details.remove();\r\n\r\n\t\t\trow._detailsShow = undefined;\r\n\t\t\trow._details = undefined;\r\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_display = function ( api, show ) {\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length && api.length ) {\r\n\t\tvar row = ctx[0].aoData[ api[0] ];\r\n\r\n\t\tif ( row._details ) {\r\n\t\t\trow._detailsShow = show;\r\n\r\n\t\t\tif ( show ) {\r\n\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow._details.detach();\r\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\r\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\r\n\r\n\t\t\t__details_events( ctx[0] );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_events = function ( settings )\r\n{\r\n\tvar api = new _Api( settings );\r\n\tvar namespace = '.dt.DT_details';\r\n\tvar drawEvent = 'draw'+namespace;\r\n\tvar colvisEvent = 'column-sizing'+namespace;\r\n\tvar destroyEvent = 'destroy'+namespace;\r\n\tvar data = settings.aoData;\r\n\r\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\r\n\r\n\tif ( _pluck( data, '_details' ).length > 0 ) {\r\n\t\t// On each draw, insert the required elements into the document\r\n\t\tapi.on( drawEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\r\n\t\t\t\t// Internal data grab\r\n\t\t\t\tvar row = data[ idx ];\r\n\r\n\t\t\t\tif ( row._detailsShow ) {\r\n\t\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// Column visibility change - update the colspan\r\n\t\tapi.on( colvisEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the colspan for the details rows (note, only if it already has\r\n\t\t\t// a colspan)\r\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = data[i];\r\n\r\n\t\t\t\tif ( row && row._details ) {\r\n\t\t\t\t\trow._details.each(function () {\r\n\t\t\t\t\t\tvar el = $(this).children('td');\r\n\r\n\t\t\t\t\t\tif (el.length == 1) {\r\n\t\t\t\t\t\t\tel.attr('colspan', visible);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Table destroyed - nuke any child rows\r\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( data[i] && data[i]._details ) {\r\n\t\t\t\t\t__details_remove( api, i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n// Strings for the method names to help minification\r\nvar _emp = '';\r\nvar _child_obj = _emp+'row().child';\r\nvar _child_mth = _child_obj+'()';\r\n\r\n// data can be:\r\n//  tr\r\n//  string\r\n//  jQuery or array of any of the above\r\n_api_register( _child_mth, function ( data, klass ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length && this.length && ctx[0].aoData[ this[0] ]\r\n\t\t\t? ctx[0].aoData[ this[0] ]._details\r\n\t\t\t: undefined;\r\n\t}\r\n\telse if ( data === true ) {\r\n\t\t// show\r\n\t\tthis.child.show();\r\n\t}\r\n\telse if ( data === false ) {\r\n\t\t// remove\r\n\t\t__details_remove( this );\r\n\t}\r\n\telse if ( ctx.length && this.length ) {\r\n\t\t// set\r\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\r\n\t}\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.show()',\r\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\r\n], function () {         // it returns an object and this method is not executed)\r\n\t__details_display( this, true );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.hide()',\r\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\r\n], function () {         // it returns an object and this method is not executed)\r\n\t__details_display( this, false );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.remove()',\r\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\r\n], function () {           // it returns an object and this method is not executed)\r\n\t__details_remove( this );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( _child_obj+'.isShown()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length && this.length && ctx[0].aoData[ this[0] ] ) {\r\n\t\t// _detailsShown as false or undefined will fall through to return false\r\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\r\n\t}\r\n\treturn false;\r\n} );\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Columns\r\n *\r\n * {integer}           - column index (>=0 count from left, <0 count from right)\r\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\r\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\r\n * \"{string}:name\"     - column name\r\n * \"{string}\"          - jQuery selector on column header nodes\r\n *\r\n */\r\n\r\n// can be an array of these items, comma separated list, or an array of comma\r\n// separated lists\r\n\r\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\r\n\r\n\r\n// r1 and r2 are redundant - but it means that the parameters match for the\r\n// iterator callback in columns().data()\r\nvar __columnData = function ( settings, column, r1, r2, rows, type ) {\r\n\tvar a = [];\r\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\r\n\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\r\n\t}\r\n\treturn a;\r\n};\r\n\r\n\r\nvar __column_header = function ( settings, column, row ) {\r\n\tvar header = settings.aoHeader;\r\n\tvar target = row !== undefined\r\n\t\t? row\r\n\t\t: settings.bSortCellsTop // legacy support\r\n\t\t\t? 0\r\n\t\t\t: header.length - 1;\r\n\r\n\treturn header[target][column].cell;\r\n};\r\n\r\nvar __column_selector = function ( settings, selector, opts )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tnames = _pluck( columns, 'sName' ),\r\n\t\ttitles = _pluck( columns, 'sTitle' ),\r\n\t\tcells = DataTable.util.get('[].[].cell')(settings.aoHeader),\r\n\t\tnodes = _unique( _flatten([], cells) );\r\n\t\r\n\tvar run = function ( s ) {\r\n\t\tvar selInt = _intVal( s );\r\n\r\n\t\t// Selector - all\r\n\t\tif ( s === '' ) {\r\n\t\t\treturn _range( columns.length );\r\n\t\t}\r\n\r\n\t\t// Selector - index\r\n\t\tif ( selInt !== null ) {\r\n\t\t\treturn [ selInt >= 0 ?\r\n\t\t\t\tselInt : // Count from left\r\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// Selector = function\r\n\t\tif ( typeof s === 'function' ) {\r\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\r\n\r\n\t\t\treturn columns.map(function (col, idx) {\r\n\t\t\t\treturn s(\r\n\t\t\t\t\t\tidx,\r\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\r\n\t\t\t\t\t\t__column_header( settings, idx )\r\n\t\t\t\t\t) ? idx : null;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// jQuery or string selector\r\n\t\tvar match = typeof s === 'string' ?\r\n\t\t\ts.match( __re_column_selector ) :\r\n\t\t\t'';\r\n\r\n\t\tif ( match ) {\r\n\t\t\tswitch( match[2] ) {\r\n\t\t\t\tcase 'visIdx':\r\n\t\t\t\tcase 'visible':\r\n\t\t\t\t\t// Selector is a column index\r\n\t\t\t\t\tif (match[1] && match[1].match(/^\\d+$/)) {\r\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\r\n\r\n\t\t\t\t\t\t// Visible index given, convert to column index\r\n\t\t\t\t\t\tif ( idx < 0 ) {\r\n\t\t\t\t\t\t\t// Counting from the right\r\n\t\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\r\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Counting from the left\r\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn columns.map( function (col, idx) {\r\n\t\t\t\t\t\t// Not visible, can't match\r\n\t\t\t\t\t\tif (! col.bVisible) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Selector\r\n\t\t\t\t\t\tif (match[1]) {\r\n\t\t\t\t\t\t\treturn $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// `:visible` on its own\r\n\t\t\t\t\t\treturn idx;\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\tcase 'name':\r\n\t\t\t\t\t// match by name. `names` is column index complete and in order\r\n\t\t\t\t\treturn names.map( function (name, i) {\r\n\t\t\t\t\t\treturn name === match[1] ? i : null;\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\tcase 'title':\r\n\t\t\t\t\t// match by column title\r\n\t\t\t\t\treturn titles.map( function (title, i) {\r\n\t\t\t\t\t\treturn title === match[1] ? i : null;\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cell in the table body\r\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\r\n\t\t\treturn [ s._DT_CellIndex.column ];\r\n\t\t}\r\n\r\n\t\t// jQuery selector on the TH elements for the columns\r\n\t\tvar jqResult = $( nodes )\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\r\n\t\t// a child or such an element\r\n\t\tvar host = $(s).closest('*[data-dt-column]');\r\n\t\treturn host.length ?\r\n\t\t\t[ host.data('dt-column') ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'column', selector, run, settings, opts );\r\n};\r\n\r\n\r\nvar __setColumnVis = function ( settings, column, vis ) {\r\n\tvar\r\n\t\tcols = settings.aoColumns,\r\n\t\tcol  = cols[ column ],\r\n\t\tdata = settings.aoData,\r\n\t\tcells, i, ien, tr;\r\n\r\n\t// Get\r\n\tif ( vis === undefined ) {\r\n\t\treturn col.bVisible;\r\n\t}\r\n\r\n\t// Set\r\n\t// No change\r\n\tif ( col.bVisible === vis ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( vis ) {\r\n\t\t// Insert column\r\n\t\t// Need to decide if we should use appendChild or insertBefore\r\n\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\r\n\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\tif (data[i]) {\r\n\t\t\t\ttr = data[i].nTr;\r\n\t\t\t\tcells = data[i].anCells;\r\n\r\n\t\t\t\tif ( tr ) {\r\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\r\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Remove column\r\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\r\n\t}\r\n\r\n\t// Common actions\r\n\tcol.bVisible = vis;\r\n\r\n\t_colGroup(settings);\r\n\t\r\n\treturn true;\r\n};\r\n\r\n\r\n_api_register( 'columns()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __column_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in _row_selector?\r\n\tinst.selector.cols = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\r\n\treturn this.iterator( 'column', function (settings, column) {\r\n\t\treturn __column_header(settings, column, row);\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\tvar footer = settings.aoFooter;\r\n\r\n\t\tif (! footer.length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\r\n\treturn this.iterator( 'column-rows', __columnData, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn __columnData( settings, column, i, j, rows, type );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].mData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows,\r\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\r\n\t\t);\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().init()', 'column().init()', function () {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column];\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\t// Argument shifting\r\n\t\tif (typeof title === 'number') {\r\n\t\t\trow = title;\r\n\t\t\ttitle = undefined;\r\n\t\t}\r\n\r\n\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\r\n\r\n\t\tif (title !== undefined) {\r\n\t\t\tspan.html(title);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\treturn span.html();\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().types()', 'column().type()', function () {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\tvar type = settings.aoColumns[column].sType;\r\n\r\n\t\t// If the type was invalidated, then resolve it. This actually does\r\n\t\t// all columns at the moment. Would only happen once if getting all\r\n\t\t// column's data types.\r\n\t\tif (! type) {\r\n\t\t\t_fnColumnTypes(settings);\r\n\t\t}\r\n\r\n\t\treturn type;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\r\n\tvar that = this;\r\n\tvar changed = [];\r\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\r\n\t\tif ( vis === undefined ) {\r\n\t\t\treturn settings.aoColumns[ column ].bVisible;\r\n\t\t} // else\r\n\t\t\r\n\t\tif (__setColumnVis( settings, column, vis )) {\r\n\t\t\tchanged.push(column);\r\n\t\t}\r\n\t} );\r\n\r\n\t// Group the column visibility changes\r\n\tif ( vis !== undefined ) {\r\n\t\tthis.iterator( 'table', function ( settings ) {\r\n\t\t\t// Redraw the header after changes\r\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\r\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\r\n\t\r\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\r\n\t\t\t// listeners to do this - only need to update the empty table item here\r\n\t\t\tif ( ! settings.aiDisplay.length ) {\r\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\r\n\t\t\t}\r\n\t\r\n\t\t\t_fnSaveState( settings );\r\n\r\n\t\t\t// Second loop once the first is done for events\r\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\r\n\t\t\t\tif (changed.includes(column)) {\r\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif ( changed.length && (calc === undefined || calc) ) {\r\n\t\t\t\tthat.columns.adjust();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn ret;\r\n} );\r\n\r\n_api_registerPlural( 'columns().widths()', 'column().width()', function () {\r\n\t// Injects a fake row into the table for just a moment so the widths can\r\n\t// be read, regardless of colspan in the header and rows being present in\r\n\t// the body\r\n\tvar columns = this.columns(':visible').count();\r\n\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\r\n\r\n\t$(this.table().body()).append(row);\r\n\r\n\tvar widths = row.children().map(function () {\r\n\t\treturn $(this).outerWidth();\r\n\t});\r\n\r\n\trow.remove();\r\n\t\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\r\n\r\n\t\treturn visIdx !== null ? widths[visIdx] : 0;\r\n\t}, 1);\r\n} );\r\n\r\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn type === 'visible' ?\r\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\r\n\t\t\tcolumn;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'columns.adjust()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'column.index()', function ( type, idx ) {\r\n\tif ( this.context.length !== 0 ) {\r\n\t\tvar ctx = this.context[0];\r\n\r\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\r\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\r\n\t\t}\r\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\r\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n_api_register( 'column()', function ( selector, opts ) {\r\n\treturn _selector_first( this.columns( selector, opts ) );\r\n} );\r\n\r\nvar __cell_selector = function ( settings, selector, opts )\r\n{\r\n\tvar data = settings.aoData;\r\n\tvar rows = _selector_row_indexes( settings, opts );\r\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\r\n\tvar allCells = $(_flatten( [], cells ));\r\n\tvar row;\r\n\tvar columns = settings.aoColumns.length;\r\n\tvar a, i, ien, j, o, host;\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar fnSelector = typeof s === 'function';\r\n\r\n\t\tif ( s === null || s === undefined || fnSelector ) {\r\n\t\t\t// All cells and function selectors\r\n\t\t\ta = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\r\n\t\t\t\t\to = {\r\n\t\t\t\t\t\trow: row,\r\n\t\t\t\t\t\tcolumn: j\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( fnSelector ) {\r\n\t\t\t\t\t\t// Selector - function\r\n\t\t\t\t\t\thost = data[ row ];\r\n\r\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\r\n\t\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Selector - all\r\n\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\t\r\n\t\t// Selector - index\r\n\t\tif ( $.isPlainObject( s ) ) {\r\n\t\t\t// Valid cell index and its in the array of selectable rows\r\n\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\r\n\t\t\t\t[s] :\r\n\t\t\t\t[];\r\n\t\t}\r\n\r\n\t\t// Selector - jQuery filtered cells\r\n\t\tvar jqResult = allCells\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function (i, el) {\r\n\t\t\t\treturn { // use a new object, in case someone changes the values\r\n\t\t\t\t\trow:    el._DT_CellIndex.row,\r\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\r\n\t\t\t\t};\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise the selector is a node, and there is one last option - the\r\n\t\t// element might be a child of an element which has dt-row and dt-column\r\n\t\t// data attributes\r\n\t\thost = $(s).closest('*[data-dt-row]');\r\n\t\treturn host.length ?\r\n\t\t\t[ {\r\n\t\t\t\trow: host.data('dt-row'),\r\n\t\t\t\tcolumn: host.data('dt-column')\r\n\t\t\t} ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'cell', selector, run, settings, opts );\r\n};\r\n\r\n\r\n\r\n\r\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\r\n\t// Argument shifting\r\n\tif ( $.isPlainObject( rowSelector ) ) {\r\n\t\t// Indexes\r\n\t\tif ( rowSelector.row === undefined ) {\r\n\t\t\t// Selector options in first parameter\r\n\t\t\topts = rowSelector;\r\n\t\t\trowSelector = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Cell index objects in first parameter\r\n\t\t\topts = columnSelector;\r\n\t\t\tcolumnSelector = null;\r\n\t\t}\r\n\t}\r\n\tif ( $.isPlainObject( columnSelector ) ) {\r\n\t\topts = columnSelector;\r\n\t\tcolumnSelector = null;\r\n\t}\r\n\r\n\t// Cell selector\r\n\tif ( columnSelector === null || columnSelector === undefined ) {\r\n\t\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\r\n\t\t} );\r\n\t}\r\n\r\n\t// The default built in options need to apply to row and columns\r\n\tvar internalOpts = opts ? {\r\n\t\tpage: opts.page,\r\n\t\torder: opts.order,\r\n\t\tsearch: opts.search\r\n\t} : {};\r\n\r\n\t// Row + column selector\r\n\tvar columns = this.columns( columnSelector, internalOpts );\r\n\tvar rows = this.rows( rowSelector, internalOpts );\r\n\tvar i, ien, j, jen;\r\n\r\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\r\n\t\tvar a = [];\r\n\r\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\r\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\r\n\t\t\t\ta.push( {\r\n\t\t\t\t\trow:    rows[idx][i],\r\n\t\t\t\t\tcolumn: columns[idx][j]\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t}, 1 );\r\n\r\n\t// There is currently only one extension which uses a cell selector extension\r\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\r\n\t// an extension specific check at the moment\r\n\tvar cells = opts && opts.selected ?\r\n\t\tthis.cells( cellsNoOpts, opts ) :\r\n\t\tcellsNoOpts;\r\n\r\n\t$.extend( cells.selector, {\r\n\t\tcols: columnSelector,\r\n\t\trows: rowSelector,\r\n\t\topts: opts\r\n\t} );\r\n\r\n\treturn cells;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\tvar data = settings.aoData[ row ];\r\n\r\n\t\treturn data && data.anCells ?\r\n\t\t\tdata.anCells[ column ] :\r\n\t\t\tundefined;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_register( 'cells().data()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\r\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\r\n\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn settings.aoData[ row ][ type ][ column ];\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column, type );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn {\r\n\t\t\trow: row,\r\n\t\t\tcolumn: column,\r\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\r\n\t\t};\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\t_fnInvalidate( settings, row, src, column );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\r\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'cell().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\tvar cell = this[0];\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && cell.length ?\r\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\r\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get current ordering (sorting) that has been applied to the table.\r\n *\r\n * @returns {array} 2D array containing the sorting information for the first\r\n *   table in the current context. Each element in the parent array represents\r\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\r\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\r\n *   the column index that the sorting condition applies to, the second is the\r\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\r\n *   index of the sorting order from the `column.sorting` initialisation array.\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {integer} order Column index to sort upon.\r\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 1D array of sorting information to be applied.\r\n * @param {array} [...] Optional additional sorting conditions\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 2D array of sorting information to be applied.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order()', function ( order, dir ) {\r\n\tvar ctx = this.context;\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tif ( order === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].aaSorting :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\tif ( typeof order === 'number' ) {\r\n\t\t// Simple column / direction passed in\r\n\t\torder = [ [ order, dir ] ];\r\n\t}\r\n\telse if ( args.length > 1 ) {\r\n\t\t// Arguments passed in (list of 1D arrays)\r\n\t\torder = args;\r\n\t}\r\n\t// otherwise a 2D array was passed in\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSorting = Array.isArray(order) ? order.slice() : order;\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Attach a sort listener to an element for a given column\r\n *\r\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\r\n *   listener to. This can take the form of a single DOM node, a jQuery\r\n *   collection of nodes or a jQuery selector which will identify the node(s).\r\n * @param {integer} column the column that a click on this node will sort on\r\n * @param {function} [callback] callback function when sort is run\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order.listener()', function ( node, column, callback ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSortAttachListener(settings, node, {}, column, callback);\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'order.fixed()', function ( set ) {\r\n\tif ( ! set ) {\r\n\t\tvar ctx = this.context;\r\n\t\tvar fixed = ctx.length ?\r\n\t\t\tctx[0].aaSortingFixed :\r\n\t\t\tundefined;\r\n\r\n\t\treturn Array.isArray( fixed ) ?\r\n\t\t\t{ pre: fixed } :\r\n\t\t\tfixed;\r\n\t}\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\r\n\t} );\r\n} );\r\n\r\n\r\n// Order by the selected column(s)\r\n_api_register( [\r\n\t'columns().order()',\r\n\t'column().order()'\r\n], function ( dir ) {\r\n\tvar that = this;\r\n\r\n\tif ( ! dir ) {\r\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\r\n\t\t\tvar sort = _fnSortFlatten( settings );\r\n\r\n\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( sort[i].col === idx ) {\r\n\t\t\t\t\treturn sort[i].dir;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}, 1 );\r\n\t}\r\n\telse {\r\n\t\treturn this.iterator( 'table', function ( settings, i ) {\r\n\t\t\tsettings.aaSorting = that[i].map( function (col) {\r\n\t\t\t\treturn [ col, dir ];\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\r\n\treturn this.iterator( 'column', function ( settings, idx ) {\r\n\t\tvar col = settings.aoColumns[idx];\r\n\r\n\t\treturn directions ?\r\n\t\t\tcol.asSorting :\r\n\t\t\tcol.bSortable;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_register( 'processing()', function ( show ) {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\t_fnProcessingDisplay( ctx, show );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( input === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].oPreviousSearch.search :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof regex === 'object') {\r\n\t\t\t// New style options to pass to the search builder\r\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\r\n\t\t\t\tsearch: input\r\n\t\t\t} ) );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compat for the old options\r\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\r\n\t\t\t\tsearch: input,\r\n\t\t\t\tregex:  regex === null ? false : regex,\r\n\t\t\t\tsmart:  smart === null ? true  : smart,\r\n\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\r\n\t\t\t} ) );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n_api_register( 'search.fixed()', function ( name, search ) {\r\n\tvar ret = this.iterator( true, 'table', function ( settings ) {\r\n\t\tvar fixed = settings.searchFixed;\r\n\r\n\t\tif (! name) {\r\n\t\t\treturn Object.keys(fixed)\r\n\t\t}\r\n\t\telse if (search === undefined) {\r\n\t\t\treturn fixed[name];\r\n\t\t}\r\n\t\telse if (search === null) {\r\n\t\t\tdelete fixed[name];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfixed[name] = search;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t} );\r\n\r\n\treturn name !== undefined && search === undefined\r\n\t\t? ret[0]\r\n\t\t: ret;\r\n} );\r\n\r\n_api_registerPlural(\r\n\t'columns().search()',\r\n\t'column().search()',\r\n\tfunction ( input, regex, smart, caseInsen ) {\r\n\t\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\t\tvar preSearch = settings.aoPreSearchCols;\r\n\r\n\t\t\tif ( input === undefined ) {\r\n\t\t\t\t// get\r\n\t\t\t\treturn preSearch[ column ].search;\r\n\t\t\t}\r\n\r\n\t\t\t// set\r\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof regex === 'object') {\r\n\t\t\t\t// New style options to pass to the search builder\r\n\t\t\t\t$.extend( preSearch[ column ], regex, {\r\n\t\t\t\t\tsearch: input\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Old style (with not all options available)\r\n\t\t\t\t$.extend( preSearch[ column ], {\r\n\t\t\t\t\tsearch: input,\r\n\t\t\t\t\tregex:  regex === null ? false : regex,\r\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\r\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\r\n\t\t} );\r\n\t}\r\n);\r\n\r\n_api_register([\r\n\t\t'columns().search.fixed()',\r\n\t\t'column().search.fixed()'\r\n\t],\r\n\tfunction ( name, search ) {\r\n\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\r\n\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\r\n\r\n\t\t\tif (! name) {\r\n\t\t\t\treturn Object.keys(fixed)\r\n\t\t\t}\r\n\t\t\telse if (search === undefined) {\r\n\t\t\t\treturn fixed[name];\r\n\t\t\t}\r\n\t\t\telse if (search === null) {\r\n\t\t\t\tdelete fixed[name];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfixed[name] = search;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t} );\r\n\r\n\t\treturn name !== undefined && search === undefined\r\n\t\t\t? ret[0]\r\n\t\t\t: ret;\r\n\t}\r\n);\r\n/*\r\n * State API methods\r\n */\r\n\r\n_api_register( 'state()', function ( set, ignoreTime ) {\r\n\t// getter\r\n\tif ( ! set ) {\r\n\t\treturn this.context.length ?\r\n\t\t\tthis.context[0].oSavedState :\r\n\t\t\tnull;\r\n\t}\r\n\r\n\tvar setMutate = $.extend( true, {}, set );\r\n\r\n\t// setter\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( ignoreTime !== false ) {\r\n\t\t\tsetMutate.time = +new Date() + 100;\r\n\t\t}\r\n\r\n\t\t_fnImplementState( settings, setMutate, function(){} );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'state.clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t// Save an empty object\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'state.loaded()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oLoadedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.save()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSaveState( settings );\r\n\t} );\r\n} );\r\n\r\n/**\r\n * Set the libraries that DataTables uses, or the global objects.\r\n * Note that the arguments can be either way around (legacy support)\r\n * and the second is optional. See docs.\r\n */\r\nDataTable.use = function (arg1, arg2) {\r\n\t// Reverse arguments for legacy support\r\n\tvar module = typeof arg1 === 'string'\r\n\t\t? arg2\r\n\t\t: arg1;\r\n\tvar type = typeof arg2 === 'string'\r\n\t\t? arg2\r\n\t\t: arg1;\r\n\r\n\t// Getter\r\n\tif (module === undefined && typeof type === 'string') {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'lib':\r\n\t\t\tcase 'jq':\r\n\t\t\t\treturn $;\r\n\r\n\t\t\tcase 'win':\r\n\t\t\t\treturn window;\r\n\r\n\t\t\tcase 'datetime':\r\n\t\t\t\treturn DataTable.DateTime;\r\n\r\n\t\t\tcase 'luxon':\r\n\t\t\t\treturn __luxon;\r\n\r\n\t\t\tcase 'moment':\r\n\t\t\t\treturn __moment;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t// Setter\r\n\tif (type === 'lib' || type === 'jq' || (module && module.fn && module.fn.jquery)) {\r\n\t\t$ = module;\r\n\t}\r\n\telse if (type == 'win' || (module && module.document)) {\r\n\t\twindow = module;\r\n\t\tdocument = module.document;\r\n\t}\r\n\telse if (type === 'datetime' || (module && module.type === 'DateTime')) {\r\n\t\tDataTable.DateTime = module;\r\n\t}\r\n\telse if (type === 'luxon' || (module && module.FixedOffsetZone)) {\r\n\t\t__luxon = module;\r\n\t}\r\n\telse if (type === 'moment' || (module && module.isMoment)) {\r\n\t\t__moment = module;\r\n\t}\r\n}\r\n\r\n/**\r\n * CommonJS factory function pass through. This will check if the arguments\r\n * given are a window object or a jQuery object. If so they are set\r\n * accordingly.\r\n * @param {*} root Window\r\n * @param {*} jq jQUery\r\n * @returns {boolean} Indicator\r\n */\r\nDataTable.factory = function (root, jq) {\r\n\tvar is = false;\r\n\r\n\t// Test if the first parameter is a window object\r\n\tif (root && root.document) {\r\n\t\twindow = root;\r\n\t\tdocument = root.document;\r\n\t}\r\n\r\n\t// Test if the second parameter is a jQuery object\r\n\tif (jq && jq.fn && jq.fn.jquery) {\r\n\t\t$ = jq;\r\n\t\tis = true;\r\n\t}\r\n\r\n\treturn is;\r\n}\r\n\r\n/**\r\n * Provide a common method for plug-ins to check the version of DataTables being\r\n * used, in order to ensure compatibility.\r\n *\r\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\r\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\r\n *  @param {string} [version2=current DataTables version] As above, but optional.\r\n *   If not given the current DataTables version will be used.\r\n *  @returns {boolean} true if this version of DataTables is greater or equal to\r\n *    the required version, or false if this version of DataTales is not\r\n *    suitable\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\r\n */\r\nDataTable.versionCheck = function( version, version2 )\r\n{\r\n\tvar aThis = version2 ?\r\n\t\tversion2.split('.') :\r\n\t\tDataTable.version.split('.');\r\n\tvar aThat = version.split('.');\r\n\tvar iThis, iThat;\r\n\r\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\r\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\r\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\r\n\r\n\t\t// Parts are the same, keep comparing\r\n\t\tif (iThis === iThat) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Parts are different, return immediately\r\n\t\treturn iThis > iThat;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Check if a `<table>` node is a DataTable table already or not.\r\n *\r\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\r\n *      selector for the table to test. Note that if more than more than one\r\n *      table is passed on, only the first will be checked\r\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\r\n *      $('#example').dataTable();\r\n *    }\r\n */\r\nDataTable.isDataTable = function ( table )\r\n{\r\n\tvar t = $(table).get(0);\r\n\tvar is = false;\r\n\r\n\tif ( table instanceof DataTable.Api ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t$.each( DataTable.settings, function (i, o) {\r\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\r\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\r\n\r\n\t\tif ( o.nTable === t || head === t || foot === t ) {\r\n\t\t\tis = true;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn is;\r\n};\r\n\r\n\r\n/**\r\n * Get all DataTable tables that have been initialised - optionally you can\r\n * select to get only currently visible tables.\r\n *\r\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\r\n *    or visible tables only.\r\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\r\n *    DataTables\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    $.each( $.fn.dataTable.tables(true), function () {\r\n *      $(table).DataTable().columns.adjust();\r\n *    } );\r\n */\r\nDataTable.tables = function ( visible )\r\n{\r\n\tvar api = false;\r\n\r\n\tif ( $.isPlainObject( visible ) ) {\r\n\t\tapi = visible.api;\r\n\t\tvisible = visible.visible;\r\n\t}\r\n\r\n\tvar a = DataTable.settings\r\n\t\t.filter( function (o) {\r\n\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \r\n\t\t\t\t? true\r\n\t\t\t\t: false;\r\n\t\t} )\r\n\t\t.map( function (o) {\r\n\t\t\treturn o.nTable;\r\n\t\t});\r\n\r\n\treturn api ?\r\n\t\tnew _Api( a ) :\r\n\t\ta;\r\n};\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian notation. This is made public\r\n * for the extensions to provide the same ability as DataTables core to accept\r\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\r\n * parameters.\r\n *\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n */\r\nDataTable.camelToHungarian = _fnCamelToHungarian;\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( '$()', function ( selector, opts ) {\r\n\tvar\r\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\r\n\t\tjqRows = $(rows);\r\n\r\n\treturn $( [].concat(\r\n\t\tjqRows.filter( selector ).toArray(),\r\n\t\tjqRows.find( selector ).toArray()\r\n\t) );\r\n} );\r\n\r\n\r\n// jQuery functions to operate on the tables\r\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\r\n\t_api_register( key+'()', function ( /* event, handler */ ) {\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\r\n\t\t// Add the `dt` namespace automatically if it isn't already present\r\n\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\r\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\r\n\t\t\t\te+'.dt' :\r\n\t\t\t\te;\r\n\t\t\t} ).join( ' ' );\r\n\r\n\t\tvar inst = $( this.tables().nodes() );\r\n\t\tinst[key].apply( inst, args );\r\n\t\treturn this;\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnClearTable( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'error()', function (msg) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnLog( settings, 0, msg );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'settings()', function () {\r\n\treturn new _Api( this.context, this.context );\r\n} );\r\n\r\n\r\n_api_register( 'init()', function () {\r\n\tvar ctx = this.context;\r\n\treturn ctx.length ? ctx[0].oInit : null;\r\n} );\r\n\r\n\r\n_api_register( 'data()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\treturn _pluck( settings.aoData, '_aData' );\r\n\t} ).flatten();\r\n} );\r\n\r\n\r\n_api_register( 'trigger()', function ( name, args, bubbles ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\r\n\t} ).flatten();\r\n} );\r\n\r\n\r\n_api_register( 'ready()', function ( fn ) {\r\n\tvar ctx = this.context;\r\n\r\n\t// Get status of first table\r\n\tif (! fn) {\r\n\t\treturn ctx.length\r\n\t\t\t? (ctx[0]._bInitComplete || false)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\t// Function to run either once the table becomes ready or\r\n\t// immediately if it is already ready.\r\n\treturn this.tables().every(function () {\r\n\t\tif (this.context[0]._bInitComplete) {\r\n\t\t\tfn.call(this);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.on('init.dt.DT', function () {\r\n\t\t\t\tfn.call(this);\r\n\t\t\t});\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'destroy()', function ( remove ) {\r\n\tremove = remove || false;\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tvar classes   = settings.oClasses;\r\n\t\tvar table     = settings.nTable;\r\n\t\tvar tbody     = settings.nTBody;\r\n\t\tvar thead     = settings.nTHead;\r\n\t\tvar tfoot     = settings.nTFoot;\r\n\t\tvar jqTable   = $(table);\r\n\t\tvar jqTbody   = $(tbody);\r\n\t\tvar jqWrapper = $(settings.nTableWrapper);\r\n\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\r\n\t\tvar orderClasses = classes.order;\r\n\r\n\t\t// Flag to note that the table is currently being destroyed - no action\r\n\t\t// should be taken\r\n\t\tsettings.bDestroying = true;\r\n\r\n\t\t// Fire off the destroy callbacks for plug-ins etc\r\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\r\n\r\n\t\t// If not being removed from the document, make all columns visible\r\n\t\tif ( ! remove ) {\r\n\t\t\tnew _Api( settings ).columns().visible( true );\r\n\t\t}\r\n\r\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\r\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\r\n\t\t// for removing them\r\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\r\n\t\t$(window).off('.DT-'+settings.sInstance);\r\n\r\n\t\t// When scrolling we had to break the table up - restore it\r\n\t\tif ( table != thead.parentNode ) {\r\n\t\t\tjqTable.children('thead').detach();\r\n\t\t\tjqTable.append( thead );\r\n\t\t}\r\n\r\n\t\tif ( tfoot && table != tfoot.parentNode ) {\r\n\t\t\tjqTable.children('tfoot').detach();\r\n\t\t\tjqTable.append( tfoot );\r\n\t\t}\r\n\r\n\t\tsettings.colgroup.remove();\r\n\r\n\t\tsettings.aaSorting = [];\r\n\t\tsettings.aaSortingFixed = [];\r\n\t\t_fnSortingClasses( settings );\r\n\r\n\t\t$('th, td', thead)\r\n\t\t\t.removeClass(\r\n\t\t\t\torderClasses.canAsc + ' ' +\r\n\t\t\t\torderClasses.canDesc + ' ' +\r\n\t\t\t\torderClasses.isAsc + ' ' +\r\n\t\t\t\torderClasses.isDesc\r\n\t\t\t)\r\n\t\t\t.css('width', '');\r\n\r\n\t\t// Add the TR elements back into the table in their original order\r\n\t\tjqTbody.children().detach();\r\n\t\tjqTbody.append( rows );\r\n\r\n\t\tvar orig = settings.nTableWrapper.parentNode;\r\n\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\r\n\r\n\t\t// Remove the DataTables generated nodes, events and classes\r\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\r\n\t\tjqTable[ removedMethod ]();\r\n\t\tjqWrapper[ removedMethod ]();\r\n\r\n\t\t// If we need to reattach the table to the document\r\n\t\tif ( ! remove && orig ) {\r\n\t\t\t// insertBefore acts like appendChild if !arg[1]\r\n\t\t\torig.insertBefore( table, insertBefore );\r\n\r\n\t\t\t// Restore the width of the original table - was read from the style property,\r\n\t\t\t// so we can restore directly to that\r\n\t\t\tjqTable\r\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\r\n\t\t\t\t.removeClass( classes.table );\r\n\t\t}\r\n\r\n\t\t/* Remove the settings object from the settings array */\r\n\t\tvar idx = DataTable.settings.indexOf(settings);\r\n\t\tif ( idx !== -1 ) {\r\n\t\t\tDataTable.settings.splice( idx, 1 );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n// Add the `every()` method for rows, columns and cells in a compact form\r\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\r\n\t_api_register( type+'s().every()', function ( fn ) {\r\n\t\tvar opts = this.selector.opts;\r\n\t\tvar api = this;\r\n\t\tvar inst;\r\n\t\tvar counter = 0;\r\n\r\n\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\r\n\t\t\tinst = api[ type ](selectedIdx, opts);\r\n\r\n\t\t\tif (type === 'cell') {\r\n\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\r\n\t\t\t}\r\n\r\n\t\t\tcounter++;\r\n\t\t} );\r\n\t} );\r\n} );\r\n\r\n\r\n// i18n method for extensions to be able to use the language object from the\r\n// DataTable\r\n_api_register( 'i18n()', function ( token, def, plural ) {\r\n\tvar ctx = this.context[0];\r\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\r\n\r\n\tif ( resolved === undefined ) {\r\n\t\tresolved = def;\r\n\t}\r\n\r\n\tif ( $.isPlainObject( resolved ) ) {\r\n\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\r\n\t\t\tresolved[ plural ] :\r\n\t\t\tresolved._;\r\n\t}\r\n\r\n\treturn typeof resolved === 'string'\r\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\r\n\t\t: resolved;\r\n} );\r\n\r\n/**\r\n * Version string for plug-ins to check compatibility. Allowed format is\r\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\r\n * only for non-release builds. See https://semver.org/ for more information.\r\n *  @member\r\n *  @type string\r\n *  @default Version number\r\n */\r\nDataTable.version = \"2.1.8\";\r\n\r\n/**\r\n * Private data store, containing all of the settings objects that are\r\n * created for the tables on a given page.\r\n *\r\n * Note that the `DataTable.settings` object is aliased to\r\n * `jQuery.fn.dataTableExt` through which it may be accessed and\r\n * manipulated, or `jQuery.fn.dataTable.settings`.\r\n *  @member\r\n *  @type array\r\n *  @default []\r\n *  @private\r\n */\r\nDataTable.settings = [];\r\n\r\n/**\r\n * Object models container, for the various models that DataTables has\r\n * available to it. These models define the objects that are used to hold\r\n * the active state and configuration of the table.\r\n *  @namespace\r\n */\r\nDataTable.models = {};\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * search information for the global filter and individual column filters.\r\n *  @namespace\r\n */\r\nDataTable.models.oSearch = {\r\n\t/**\r\n\t * Flag to indicate if the filtering should be case insensitive or not\r\n\t */\r\n\t\"caseInsensitive\": true,\r\n\r\n\t/**\r\n\t * Applied search term\r\n\t */\r\n\t\"search\": \"\",\r\n\r\n\t/**\r\n\t * Flag to indicate if the search term should be interpreted as a\r\n\t * regular expression (true) or not (false) and therefore and special\r\n\t * regex characters escaped.\r\n\t */\r\n\t\"regex\": false,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\r\n\t */\r\n\t\"smart\": true,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables should only trigger a search when\r\n\t * the return key is pressed.\r\n\t */\r\n\t\"return\": false\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * each individual row. This is the object format used for the settings\r\n * aoData array.\r\n *  @namespace\r\n */\r\nDataTable.models.oRow = {\r\n\t/**\r\n\t * TR element for the row\r\n\t */\r\n\t\"nTr\": null,\r\n\r\n\t/**\r\n\t * Array of TD elements for each row. This is null until the row has been\r\n\t * created.\r\n\t */\r\n\t\"anCells\": null,\r\n\r\n\t/**\r\n\t * Data object from the original data source for the row. This is either\r\n\t * an array if using the traditional form of DataTables, or an object if\r\n\t * using mData options. The exact type will depend on the passed in\r\n\t * data from the data source, or will be an array if using DOM a data\r\n\t * source.\r\n\t */\r\n\t\"_aData\": [],\r\n\r\n\t/**\r\n\t * Sorting data cache - this array is ostensibly the same length as the\r\n\t * number of columns (although each index is generated only as it is\r\n\t * needed), and holds the data that is used for sorting each column in the\r\n\t * row. We do this cache generation at the start of the sort in order that\r\n\t * the formatting of the sort data need be done only once for each cell\r\n\t * per sort. This array should not be read from or written to by anything\r\n\t * other than the master sorting methods.\r\n\t */\r\n\t\"_aSortData\": null,\r\n\r\n\t/**\r\n\t * Per cell filtering data cache. As per the sort data cache, used to\r\n\t * increase the performance of the filtering in DataTables\r\n\t */\r\n\t\"_aFilterData\": null,\r\n\r\n\t/**\r\n\t * Filtering data cache. This is the same as the cell filtering cache, but\r\n\t * in this case a string rather than an array. This is easily computed with\r\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\r\n\t * needed on every search (memory traded for performance)\r\n\t */\r\n\t\"_sFilterRow\": null,\r\n\r\n\t/**\r\n\t * Denote if the original data source was from the DOM, or the data source\r\n\t * object. This is used for invalidating data, so DataTables can\r\n\t * automatically read data from the original source, unless uninstructed\r\n\t * otherwise.\r\n\t */\r\n\t\"src\": null,\r\n\r\n\t/**\r\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\r\n\t * object, but want to know the index\r\n\t */\r\n\t\"idx\": -1,\r\n\r\n\t/**\r\n\t * Cached display value\r\n\t */\r\n\tdisplayData: null\r\n};\r\n\r\n\r\n/**\r\n * Template object for the column information object in DataTables. This object\r\n * is held in the settings aoColumns array and contains all the information that\r\n * DataTables needs about each individual column.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults.column}\r\n * but this one is the internal data store for DataTables's cache of columns.\r\n * It should NOT be manipulated outside of DataTables. Any configuration should\r\n * be done through the initialisation options.\r\n *  @namespace\r\n */\r\nDataTable.models.oColumn = {\r\n\t/**\r\n\t * Column index.\r\n\t */\r\n\t\"idx\": null,\r\n\r\n\t/**\r\n\t * A list of the columns that sorting should occur on when this column\r\n\t * is sorted. That this property is an array allows multi-column sorting\r\n\t * to be defined for a column (for example first name / last name columns\r\n\t * would benefit from this). The values are integers pointing to the\r\n\t * columns to be sorted on (typically it will be a single integer pointing\r\n\t * at itself, but that doesn't need to be the case).\r\n\t */\r\n\t\"aDataSort\": null,\r\n\r\n\t/**\r\n\t * Define the sorting directions that are applied to the column, in sequence\r\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\r\n\t * as the sorting direction when the column if first sorted (clicked on).\r\n\t * Sort it again (click again) and it will move on to the next index.\r\n\t * Repeat until loop.\r\n\t */\r\n\t\"asSorting\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is searchable, and thus should be included\r\n\t * in the filtering or not.\r\n\t */\r\n\t\"bSearchable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is sortable or not.\r\n\t */\r\n\t\"bSortable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is currently visible in the table or not\r\n\t */\r\n\t\"bVisible\": null,\r\n\r\n\t/**\r\n\t * Store for manual type assignment using the `column.type` option. This\r\n\t * is held in store so we can manipulate the column's `sType` property.\r\n\t */\r\n\t\"_sManualType\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if HTML5 data attributes should be used as the data\r\n\t * source for filtering or sorting. True is either are.\r\n\t */\r\n\t\"_bAttrSrc\": false,\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\t/**\r\n\t * Function to get data from a cell in a column. You should <b>never</b>\r\n\t * access data directly through _aData internally in DataTables - always use\r\n\t * the method attached to this property. It allows mData to function as\r\n\t * required. This function is automatically assigned by the column\r\n\t * initialisation method\r\n\t */\r\n\t\"fnGetData\": null,\r\n\r\n\t/**\r\n\t * Function to set data for a cell in the column. You should <b>never</b>\r\n\t * set the data directly to _aData internally in DataTables - always use\r\n\t * this method. It allows mData to function as required. This function\r\n\t * is automatically assigned by the column initialisation method\r\n\t */\r\n\t\"fnSetData\": null,\r\n\r\n\t/**\r\n\t * Property to read the value for the cells in the column from the data\r\n\t * source array / object. If null, then the default content is used, if a\r\n\t * function is given then the return from the function is used.\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\t/**\r\n\t * Partner property to mData which is used (only when defined) to get\r\n\t * the data - i.e. it is basically the same as mData, but without the\r\n\t * 'set' option, and also the data fed to it is the result from mData.\r\n\t * This is the rendering method to match the data method of mData.\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\t/**\r\n\t * The class to apply to all TD elements in the table's TBODY for the column\r\n\t */\r\n\t\"sClass\": null,\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t */\r\n\t\"sContentPadding\": null,\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because mData\r\n\t * is set to null, or because the data source itself is null).\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\t/**\r\n\t * Name for the column, allowing reference to the column by name as well as\r\n\t * by index (needs a lookup to work by name).\r\n\t */\r\n\t\"sName\": null,\r\n\r\n\t/**\r\n\t * Custom sorting data type - defines which of the available plug-ins in\r\n\t * afnSortData the custom sorting will use - if any is defined.\r\n\t */\r\n\t\"sSortDataType\": 'std',\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column\r\n\t */\r\n\t\"sSortingClass\": null,\r\n\r\n\t/**\r\n\t * Title of the column - what is seen in the TH element (nTh).\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\t/**\r\n\t * Column sorting and filtering type\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\t/**\r\n\t * Width of the column\r\n\t */\r\n\t\"sWidth\": null,\r\n\r\n\t/**\r\n\t * Width of the column when it was first \"encountered\"\r\n\t */\r\n\t\"sWidthOrig\": null,\r\n\r\n\t/** Cached string which is the longest in the column */\r\n\tmaxLenString: null,\r\n\r\n\t/**\r\n\t * Store for named searches\r\n\t */\r\n\tsearchFixed: null\r\n};\r\n\r\n\r\n/*\r\n * Developer note: The properties of the object below are given in Hungarian\r\n * notation, that was used as the interface for DataTables prior to v1.10, however\r\n * from v1.10 onwards the primary interface is camel case. In order to avoid\r\n * breaking backwards compatibility utterly with this change, the Hungarian\r\n * version is still, internally the primary interface, but is is not documented\r\n * - hence the @name tags in each doc comment. This allows a Javascript function\r\n * to create a map from Hungarian notation to camel case (going the other direction\r\n * would require each property to be listed, which would add around 3K to the size\r\n * of DataTables, while this method is about a 0.5K hit).\r\n *\r\n * Ultimately this does pave the way for Hungarian notation to be dropped\r\n * completely, but that is a massive amount of work and will break current\r\n * installs (therefore is on-hold until v2).\r\n */\r\n\r\n/**\r\n * Initialisation options that can be given to DataTables at initialisation\r\n * time.\r\n *  @namespace\r\n */\r\nDataTable.defaults = {\r\n\t/**\r\n\t * An array of data to use for the table, passed in at initialisation which\r\n\t * will be used in preference to any data which is already in the DOM. This is\r\n\t * particularly useful for constructing tables purely in Javascript, for\r\n\t * example with a custom Ajax call.\r\n\t */\r\n\t\"aaData\": null,\r\n\r\n\r\n\t/**\r\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\r\n\t * initialisation. You can define which column(s) the sort is performed\r\n\t * upon, and the sorting direction, with this variable. The `sorting` array\r\n\t * should contain an array for each column to be sorted initially containing\r\n\t * the column's index and a direction string ('asc' or 'desc').\r\n\t */\r\n\t\"aaSorting\": [[0,'asc']],\r\n\r\n\r\n\t/**\r\n\t * This parameter is basically identical to the `sorting` parameter, but\r\n\t * cannot be overridden by user interaction with the table. What this means\r\n\t * is that you could have a column (visible or hidden) which the sorting\r\n\t * will always be forced on first - any sorting after that (from the user)\r\n\t * will then be performed as required. This can be useful for grouping rows\r\n\t * together.\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\r\n\t/**\r\n\t * DataTables can be instructed to load data to display in the table from a\r\n\t * Ajax source. This option defines how that Ajax call is made and where to.\r\n\t *\r\n\t * The `ajax` property has three different modes of operation, depending on\r\n\t * how it is defined. These are:\r\n\t *\r\n\t * * `string` - Set the URL from where the data should be loaded from.\r\n\t * * `object` - Define properties for `jQuery.ajax`.\r\n\t * * `function` - Custom data get function\r\n\t *\r\n\t * `string`\r\n\t * --------\r\n\t *\r\n\t * As a string, the `ajax` property simply defines the URL from which\r\n\t * DataTables will load data.\r\n\t *\r\n\t * `object`\r\n\t * --------\r\n\t *\r\n\t * As an object, the parameters in the object are passed to\r\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\r\n\t * of the Ajax request. DataTables has a number of default parameters which\r\n\t * you can override using this option. Please refer to the jQuery\r\n\t * documentation for a full description of the options available, although\r\n\t * the following parameters provide additional options in DataTables or\r\n\t * require special consideration:\r\n\t *\r\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\r\n\t *   can also be used as a function to manipulate the data DataTables sends\r\n\t *   to the server. The function takes a single parameter, an object of\r\n\t *   parameters with the values that DataTables has readied for sending. An\r\n\t *   object may be returned which will be merged into the DataTables\r\n\t *   defaults, or you can add the items to the object that was passed in and\r\n\t *   not return anything from the function. This supersedes `fnServerParams`\r\n\t *   from DataTables 1.9-.\r\n\t *\r\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\r\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\r\n\t *   from an Ajax source or for server-side processing - this parameter\r\n\t *   allows that property to be changed. You can use Javascript dotted\r\n\t *   object notation to get a data source for multiple levels of nesting, or\r\n\t *   it my be used as a function. As a function it takes a single parameter,\r\n\t *   the JSON returned from the server, which can be manipulated as\r\n\t *   required, with the returned value being that used by DataTables as the\r\n\t *   data source for the table.\r\n\t *\r\n\t * * `success` - Should not be overridden it is used internally in\r\n\t *   DataTables. To manipulate / transform the data returned by the server\r\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\r\n\t *\r\n\t * `function`\r\n\t * ----------\r\n\t *\r\n\t * As a function, making the Ajax call is left up to yourself allowing\r\n\t * complete control of the Ajax request. Indeed, if desired, a method other\r\n\t * than Ajax could be used to obtain the required data, such as Web storage\r\n\t * or an AIR database.\r\n\t *\r\n\t * The function is given four parameters and no return is required. The\r\n\t * parameters are:\r\n\t *\r\n\t * 1. _object_ - Data to send to the server\r\n\t * 2. _function_ - Callback function that must be executed when the required\r\n\t *    data has been obtained. That data should be passed into the callback\r\n\t *    as the only parameter\r\n\t * 3. _object_ - DataTables settings object for the table\r\n\t */\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to readily specify the entries in the length drop\r\n\t * down menu that DataTables shows when pagination is enabled. It can be\r\n\t * either a 1D array of options which will be used for both the displayed\r\n\t * option and the value, or a 2D array which will use the array in the first\r\n\t * position as the value, and the array in the second position as the\r\n\t * displayed options (useful for language strings such as 'All').\r\n\t *\r\n\t * Note that the `pageLength` property will be automatically set to the\r\n\t * first value given in this array, unless `pageLength` is also provided.\r\n\t */\r\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\r\n\r\n\r\n\t/**\r\n\t * The `columns` option in the initialisation parameter allows you to define\r\n\t * details about the way individual columns behave. For a full list of\r\n\t * column options that can be set, please see\r\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\r\n\t * define your columns, you must have an entry in the array for every single\r\n\t * column that you have in your table (these can be null if you don't which\r\n\t * to specify any options).\r\n\t */\r\n\t\"aoColumns\": null,\r\n\r\n\t/**\r\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\r\n\t * column, multiple columns, or all columns, using the `targets` property of\r\n\t * each object in the array. This allows great flexibility when creating\r\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\r\n\t * columns you specifically want. `columnDefs` may use any of the column\r\n\t * options available: {@link DataTable.defaults.column}, but it _must_\r\n\t * have `targets` defined in each object in the array. Values in the `targets`\r\n\t * array may be:\r\n\t *   <ul>\r\n\t *     <li>a string - class name will be matched on the TH for the column</li>\r\n\t *     <li>0 or a positive integer - column index counting from the left</li>\r\n\t *     <li>a negative integer - column index counting from the right</li>\r\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\r\n\t *   </ul>\r\n\t */\r\n\t\"aoColumnDefs\": null,\r\n\r\n\r\n\t/**\r\n\t * Basically the same as `search`, this parameter defines the individual column\r\n\t * filtering state at initialisation time. The array must be of the same size\r\n\t * as the number of columns, and each element be an object with the parameters\r\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\r\n\t * accepted and the default will be used.\r\n\t */\r\n\t\"aoSearchCols\": [],\r\n\r\n\r\n\t/**\r\n\t * Enable or disable automatic column width calculation. This can be disabled\r\n\t * as an optimisation (it takes some time to calculate the widths) if the\r\n\t * tables widths are passed in using `columns`.\r\n\t */\r\n\t\"bAutoWidth\": true,\r\n\r\n\r\n\t/**\r\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\r\n\t * are using an Ajax or JS data source for the table. This option, when set to\r\n\t * true, will cause DataTables to defer the creation of the table elements for\r\n\t * each row until they are needed for a draw - saving a significant amount of\r\n\t * time.\r\n\t */\r\n\t\"bDeferRender\": true,\r\n\r\n\r\n\t/**\r\n\t * Replace a DataTable which matches the given selector and replace it with\r\n\t * one which has the properties of the new initialisation object passed. If no\r\n\t * table matches the selector, then the new DataTable will be constructed as\r\n\t * per normal.\r\n\t */\r\n\t\"bDestroy\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\n\t * that it allows the end user to input multiple words (space separated) and\r\n\t * will match a row containing those words, even if not in the order that was\r\n\t * specified (this allow matching across multiple columns). Note that if you\r\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\r\n\t * default filtering input box and retain filtering abilities, please use\r\n\t * {@link DataTable.defaults.dom}.\r\n\t */\r\n\t\"bFilter\": true,\r\n\r\n\t/**\r\n\t * Used only for compatiblity with DT1\r\n\t * @deprecated\r\n\t */\r\n\t\"bInfo\": true,\r\n\r\n\t/**\r\n\t * Used only for compatiblity with DT1\r\n\t * @deprecated\r\n\t */\r\n\t\"bLengthChange\": true,\r\n\r\n\t/**\r\n\t * Enable or disable pagination.\r\n\t */\r\n\t\"bPaginate\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of a 'processing' indicator when the table is\r\n\t * being processed (e.g. a sort). This is particularly useful for tables with\r\n\t * large amounts of data where it can take a noticeable amount of time to sort\r\n\t * the entries.\r\n\t */\r\n\t\"bProcessing\": false,\r\n\r\n\r\n\t/**\r\n\t * Retrieve the DataTables object for the given selector. Note that if the\r\n\t * table has already been initialised, this parameter will cause DataTables\r\n\t * to simply return the object that has already been set up - it will not take\r\n\t * account of any changes you might have made to the initialisation object\r\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\r\n\t * that you understand this). `destroy` can be used to reinitialise a table if\r\n\t * you need.\r\n\t */\r\n\t\"bRetrieve\": false,\r\n\r\n\r\n\t/**\r\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\r\n\t * the table's viewport to the given height at all times (useful for layout).\r\n\t * However, this can look odd when filtering data down to a small data set,\r\n\t * and the footer is left \"floating\" further down. This parameter (when\r\n\t * enabled) will cause DataTables to collapse the table's viewport down when\r\n\t * the result set will fit within the given Y height.\r\n\t */\r\n\t\"bScrollCollapse\": false,\r\n\r\n\r\n\t/**\r\n\t * Configure DataTables to use server-side processing. Note that the\r\n\t * `ajax` parameter must also be given in order to give DataTables a\r\n\t * source to obtain the required data for each draw.\r\n\t */\r\n\t\"bServerSide\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\r\n\t * disabled by the `sortable` option for each column.\r\n\t */\r\n\t\"bSort\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or display DataTables' ability to sort multiple columns at the\r\n\t * same time (activated by shift-click by the user).\r\n\t */\r\n\t\"bSortMulti\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows control over whether DataTables should use the top (true) unique\r\n\t * cell that is found for a single column, or the bottom (false - default).\r\n\t * This is useful when using complex headers.\r\n\t */\r\n\t\"bSortCellsTop\": null,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\r\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\r\n\t * presented as a feature switch as it can increase processing time (while\r\n\t * classes are removed and added) so for large data sets you might want to\r\n\t * turn this off.\r\n\t */\r\n\t\"bSortClasses\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\r\n\t * used to save table display information such as pagination information,\r\n\t * display length, filtering and sorting. As such when the end user reloads\r\n\t * the page the display display will match what thy had previously set up.\r\n\t */\r\n\t\"bStateSave\": false,\r\n\r\n\r\n\t/**\r\n\t * This function is called when a TR element is created (and all TD child\r\n\t * elements have been inserted), or registered if using a DOM source, allowing\r\n\t * manipulation of the TR element (adding classes etc).\r\n\t */\r\n\t\"fnCreatedRow\": null,\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify any aspect you want about the created DOM.\r\n\t */\r\n\t\"fnDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Identical to fnHeaderCallback() but for the table footer this function\r\n\t * allows you to modify the table footer on every 'draw' event.\r\n\t */\r\n\t\"fnFooterCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * When rendering large numbers in the information element for the table\r\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\r\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\r\n\t * rendered as \"1,000,000\") to help readability for the end user. This\r\n\t * function will override the default method DataTables uses.\r\n\t */\r\n\t\"fnFormatNumber\": function ( toFormat ) {\r\n\t\treturn toFormat.toString().replace(\r\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\r\n\t\t\tthis.oLanguage.sThousands\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify the header row. This can be used to calculate and\r\n\t * display useful information about the table.\r\n\t */\r\n\t\"fnHeaderCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * The information element can be used to convey information about the current\r\n\t * state of the table. Although the internationalisation options presented by\r\n\t * DataTables are quite capable of dealing with most customisations, there may\r\n\t * be times where you wish to customise the string further. This callback\r\n\t * allows you to do exactly that.\r\n\t */\r\n\t\"fnInfoCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Called when the table has been initialised. Normally DataTables will\r\n\t * initialise sequentially and there will be no need for this function,\r\n\t * however, this does not hold true when using external language information\r\n\t * since that is obtained using an async XHR call.\r\n\t */\r\n\t\"fnInitComplete\": null,\r\n\r\n\r\n\t/**\r\n\t * Called at the very start of each table draw and can be used to cancel the\r\n\t * draw by returning false, any other return (including undefined) results in\r\n\t * the full draw occurring).\r\n\t */\r\n\t\"fnPreDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * This function allows you to 'post process' each row after it have been\r\n\t * generated for each table draw, but before it is rendered on screen. This\r\n\t * function might be used for setting the row class name etc.\r\n\t */\r\n\t\"fnRowCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Load the table state. With this function you can define from where, and how, the\r\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t */\r\n\t\"fnStateLoadCallback\": function ( settings ) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(\r\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\r\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the saved state prior to loading that state.\r\n\t * This callback is called when the table is loading state from the stored data, but\r\n\t * prior to the settings object being modified by the saved state. Note that for\r\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\r\n\t * a plug-in.\r\n\t */\r\n\t\"fnStateLoadParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Callback that is called when the state has been loaded from the state saving method\r\n\t * and the DataTables settings object has been modified as a result of the loaded state.\r\n\t */\r\n\t\"fnStateLoaded\": null,\r\n\r\n\r\n\t/**\r\n\t * Save the table state. This function allows you to define where and how the state\r\n\t * information for the table is stored By default DataTables will use `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t */\r\n\t\"fnStateSaveCallback\": function ( settings, data ) {\r\n\t\ttry {\r\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\r\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\r\n\t\t\t\tJSON.stringify( data )\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\t// noop\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the state to be saved. Called when the table\r\n\t * has changed state a new state save is required. This method allows modification of\r\n\t * the state saving object prior to actually doing the save, including addition or\r\n\t * other state properties or modification. Note that for plug-in authors, you should\r\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\r\n\t */\r\n\t\"fnStateSaveParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Duration for which the saved state information is considered valid. After this period\r\n\t * has elapsed the state will be returned to the default.\r\n\t * Value is given in seconds.\r\n\t */\r\n\t\"iStateDuration\": 7200,\r\n\r\n\r\n\t/**\r\n\t * Number of rows to display on a single page when using pagination. If\r\n\t * feature enabled (`lengthChange`) then the end user will be able to override\r\n\t * this to a custom setting using a pop-up menu.\r\n\t */\r\n\t\"iDisplayLength\": 10,\r\n\r\n\r\n\t/**\r\n\t * Define the starting point for data display when using DataTables with\r\n\t * pagination. Note that this parameter is the number of records, rather than\r\n\t * the page number, so if you have 10 records per page and want to start on\r\n\t * the third page, it should be \"20\".\r\n\t */\r\n\t\"iDisplayStart\": 0,\r\n\r\n\r\n\t/**\r\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\r\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\r\n\t * allows you to tab through the controls and press the enter key to activate them.\r\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\r\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\r\n\t * disable built-in keyboard navigation.\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\r\n\t/**\r\n\t * Classes that DataTables assigns to the various components and features\r\n\t * that it adds to the HTML table. This allows classes to be configured\r\n\t * during initialisation in addition to through the static\r\n\t * {@link DataTable.ext.oStdClasses} object).\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\r\n\t/**\r\n\t * All strings that DataTables uses in the user interface that it creates\r\n\t * are defined in this object, allowing you to modified them individually or\r\n\t * completely replace them all as required.\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\r\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\r\n\t\t * must be internationalised as well).\r\n\t\t */\r\n\t\t\"oAria\": {\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be sorted\r\n\t\t\t */\r\n\t\t\t\"orderable\": \": Activate to sort\",\r\n\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\r\n\t\t\t */\r\n\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\r\n\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column is currently being \r\n\t\t\t * sorted and next step is to remove sorting\r\n\t\t\t */\r\n\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\r\n\r\n\t\t\tpaginate: {\r\n\t\t\t\tfirst: 'First',\r\n\t\t\t\tlast: 'Last',\r\n\t\t\t\tnext: 'Next',\r\n\t\t\t\tprevious: 'Previous',\r\n\t\t\t\tnumber: ''\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Pagination string used by DataTables for the built-in pagination\r\n\t\t * control types.\r\n\t\t */\r\n\t\t\"oPaginate\": {\r\n\t\t\t/**\r\n\t\t\t * Label and character for first page button (Â«)\r\n\t\t\t */\r\n\t\t\t\"sFirst\": \"\\u00AB\",\r\n\r\n\t\t\t/**\r\n\t\t\t * Last page button (Â»)\r\n\t\t\t */\r\n\t\t\t\"sLast\": \"\\u00BB\",\r\n\r\n\t\t\t/**\r\n\t\t\t * Next page button (âº)\r\n\t\t\t */\r\n\t\t\t\"sNext\": \"\\u203A\",\r\n\r\n\t\t\t/**\r\n\t\t\t * Previous page button (â¹)\r\n\t\t\t */\r\n\t\t\t\"sPrevious\": \"\\u2039\",\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Plural object for the data type the table is showing\r\n\t\t */\r\n\t\tentries: {\r\n\t\t\t_: \"entries\",\r\n\t\t\t1: \"entry\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This string is shown in preference to `zeroRecords` when the table is\r\n\t\t * empty of data (regardless of filtering). Note that this is an optional\r\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\r\n\t\t * instead (either the default or given value).\r\n\t\t */\r\n\t\t\"sEmptyTable\": \"No data available in table\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This string gives information to the end user about the information\r\n\t\t * that is current on display on the page. The following tokens can be\r\n\t\t * used in the string and will be dynamically replaced as the table\r\n\t\t * display updates. This tokens can be placed anywhere in the string, or\r\n\t\t * removed as needed by the language requires:\r\n\t\t *\r\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\r\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\r\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\r\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\r\n\t\t * * `\\_PAGE\\_` - Current page number\r\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\r\n\t\t */\r\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Display information string for when the table is empty. Typically the\r\n\t\t * format of this string should match `info`.\r\n\t\t */\r\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When a user filters the information in a table, this string is appended\r\n\t\t * to the information (`info`) to give an idea of how strong the filtering\r\n\t\t * is. The variable _MAX_ is dynamically updated.\r\n\t\t */\r\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\r\n\r\n\r\n\t\t/**\r\n\t\t * If can be useful to append extra information to the info string at times,\r\n\t\t * and this variable does exactly that. This information will be appended to\r\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\r\n\t\t * being used) at all times.\r\n\t\t */\r\n\t\t\"sInfoPostFix\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This decimal place operator is a little different from the other\r\n\t\t * language options since DataTables doesn't output floating point\r\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\r\n\t\t * what this parameter does is modify the sort methods of the table so\r\n\t\t * that numbers which are in a format which has a character other than\r\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\r\n\t\t *\r\n\t\t * Note that numbers with different decimal places cannot be shown in\r\n\t\t * the same table and still be sortable, the table must be consistent.\r\n\t\t * However, multiple different tables on the page can use different\r\n\t\t * decimal place characters.\r\n\t\t */\r\n\t\t\"sDecimal\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\r\n\t\t * used to format large numbers that are used in the table information.\r\n\t\t * By default a comma is used, but this can be trivially changed to any\r\n\t\t * character you wish with this parameter.\r\n\t\t */\r\n\t\t\"sThousands\": \",\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Detail the action that will be taken when the drop down menu for the\r\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\r\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\r\n\t\t * with a custom select box if required.\r\n\t\t */\r\n\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\r\n\t\t * gathering the data, this message is shown in an empty row in the table to\r\n\t\t * indicate to the end user the the data is being loaded. Note that this\r\n\t\t * parameter is not used when loading data by server-side processing, just\r\n\t\t * Ajax sourced data with client-side processing.\r\n\t\t */\r\n\t\t\"sLoadingRecords\": \"Loading...\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text which is displayed when the table is processing a user action\r\n\t\t * (usually a sort command or similar).\r\n\t\t */\r\n\t\t\"sProcessing\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Details the actions that will be taken when the user types into the\r\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\r\n\t\t * is replaced with the HTML text box for the filtering input allowing\r\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\r\n\t\t * then the input box is appended to the string automatically.\r\n\t\t */\r\n\t\t\"sSearch\": \"Search:\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Assign a `placeholder` attribute to the search `input` element\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\r\n\t\t */\r\n\t\t\"sSearchPlaceholder\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * All of the language information can be stored in a file on the\r\n\t\t * server-side, which DataTables will look up if this parameter is passed.\r\n\t\t * It must store the URL of the language file, which is in a JSON format,\r\n\t\t * and the object has the same properties as the oLanguage object in the\r\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\r\n\t\t * the example language files to see how this works in action.\r\n\t\t */\r\n\t\t\"sUrl\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text shown inside the table records when the is no information to be\r\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\r\n\t\t * information in the table at all (regardless of filtering).\r\n\t\t */\r\n\t\t\"sZeroRecords\": \"No matching records found\"\r\n\t},\r\n\r\n\r\n\t/** The initial data order is reversed when `desc` ordering */\r\n\torderDescReverse: true,\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to have define the global filtering state at\r\n\t * initialisation time. As an object the `search` parameter must be\r\n\t * defined, but all other parameters are optional. When `regex` is true,\r\n\t * the search string will be treated as a regular expression, when false\r\n\t * (default) it will be treated as a straight string. When `smart`\r\n\t * DataTables will use it's smart filtering methods (to word match at\r\n\t * any point in the data), when false this will not be done.\r\n\t */\r\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\r\n\r\n\r\n\t/**\r\n\t * Table and control layout. This replaces the legacy `dom` option.\r\n\t */\r\n\tlayout: {\r\n\t\ttopStart: 'pageLength',\r\n\t\ttopEnd: 'search',\r\n\t\tbottomStart: 'info',\r\n\t\tbottomEnd: 'paging'\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Legacy DOM layout option\r\n\t */\r\n\t\"sDom\": null,\r\n\r\n\r\n\t/**\r\n\t * Search delay option. This will throttle full table searches that use the\r\n\t * DataTables provided search input element (it does not effect calls to\r\n\t * `dt-api search()`, providing a delay before the search is made.\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\r\n\t/**\r\n\t * DataTables features six different built-in options for the buttons to\r\n\t * display for pagination control:\r\n\t *\r\n\t * * `numbers` - Page number buttons only\r\n\t * * `simple` - 'Previous' and 'Next' buttons only\r\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\r\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\r\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\r\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\r\n\t */\r\n\t\"sPaginationType\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\r\n\t * certain layout, or you have a large number of columns in the table, you\r\n\t * can enable x-scrolling to show the table in a viewport, which can be\r\n\t * scrolled. This property can be `true` which will allow the table to\r\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\r\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\r\n\t * is recommended.\r\n\t */\r\n\t\"sScrollX\": \"\",\r\n\r\n\r\n\t/**\r\n\t * This property can be used to force a DataTable to use more width than it\r\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\r\n\t * table which requires to be well spaced, this parameter is useful for\r\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\r\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\r\n\t * measurement).\r\n\t */\r\n\t\"sScrollXInner\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\r\n\t * to the given height, and enable scrolling for any data which overflows the\r\n\t * current viewport. This can be used as an alternative to paging to display\r\n\t * a lot of data in a small area (although paging and scrolling can both be\r\n\t * enabled at the same time). This property can be any CSS unit, or a number\r\n\t * (in which case it will be treated as a pixel measurement).\r\n\t */\r\n\t\"sScrollY\": \"\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * Set the HTTP method that is used to make the Ajax call for server-side\r\n\t * processing or Ajax sourced data.\r\n\t */\r\n\t\"sServerMethod\": \"GET\",\r\n\r\n\r\n\t/**\r\n\t * DataTables makes use of renderers when displaying HTML elements for\r\n\t * a table. These renderers can be added or modified by plug-ins to\r\n\t * generate suitable mark-up for a site. For example the Bootstrap\r\n\t * integration plug-in for DataTables uses a paging button renderer to\r\n\t * display pagination buttons in the mark-up required by Bootstrap.\r\n\t *\r\n\t * For further information about the renderers available see\r\n\t * DataTable.ext.renderer\r\n\t */\r\n\t\"renderer\": null,\r\n\r\n\r\n\t/**\r\n\t * Set the data property name that DataTables should use to get a row's id\r\n\t * to set as the `id` property in the node.\r\n\t */\r\n\t\"rowId\": \"DT_RowId\",\r\n\r\n\r\n\t/**\r\n\t * Caption value\r\n\t */\r\n\t\"caption\": null,\r\n\r\n\r\n\t/**\r\n\t * For server-side processing - use the data from the DOM for the first draw\r\n\t */\r\n\tiDeferLoading: null\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults );\r\n\r\n\r\n\r\n/*\r\n * Developer note - See note in model.defaults.js about the use of Hungarian\r\n * notation and camel case.\r\n */\r\n\r\n/**\r\n * Column options that can be given to DataTables at initialisation time.\r\n *  @namespace\r\n */\r\nDataTable.defaults.column = {\r\n\t/**\r\n\t * Define which column(s) an order will occur on for this column. This\r\n\t * allows a column's ordering to take multiple columns into account when\r\n\t * doing a sort or use the data from a different column. For example first\r\n\t * name / last name columns make sense to do a multi-column sort over the\r\n\t * two columns.\r\n\t */\r\n\t\"aDataSort\": null,\r\n\t\"iDataSort\": -1,\r\n\r\n\tariaTitle: '',\r\n\r\n\r\n\t/**\r\n\t * You can control the default ordering direction, and even alter the\r\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\r\n\t * using this parameter.\r\n\t */\r\n\t\"asSorting\": [ 'asc', 'desc', '' ],\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering on the data in this column.\r\n\t */\r\n\t\"bSearchable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable ordering on this column.\r\n\t */\r\n\t\"bSortable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of this column.\r\n\t */\r\n\t\"bVisible\": true,\r\n\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\r\n\t/**\r\n\t * This property can be used to read data from any data source property,\r\n\t * including deeply nested objects / properties. `data` can be given in a\r\n\t * number of different ways which effect its behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object. Note that\r\n\t *      function notation is recommended for use in `render` rather than\r\n\t *      `data` as it is much simpler to use as a renderer.\r\n\t * * `null` - use the original data source for the row rather than plucking\r\n\t *   data directly from it. This action has effects on two other\r\n\t *   initialisation options:\r\n\t *    * `defaultContent` - When null is given as the `data` option and\r\n\t *      `defaultContent` is specified for the column, the value defined by\r\n\t *      `defaultContent` will be used for the cell.\r\n\t *    * `render` - When null is used for the `data` option and the `render`\r\n\t *      option is specified for the column, the whole data source for the\r\n\t *      row is used for the renderer.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * `{array|object}` The data source for the row\r\n\t *      * `{string}` The type call data requested - this will be 'set' when\r\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\r\n\t *        when gathering data. Note that when `undefined` is given for the\r\n\t *        type DataTables expects to get the raw data for the object back<\r\n\t *      * `{*}` Data to set when the second parameter is 'set'.\r\n\t *    * Return:\r\n\t *      * The return value from the function is not required when 'set' is\r\n\t *        the type of call, but otherwise the return is what will be used\r\n\t *        for the data requested.\r\n\t *\r\n\t * Note that `data` is a getter and setter option. If you just require\r\n\t * formatting of data for output, you will likely want to use `render` which\r\n\t * is simply a getter and thus simpler to use.\r\n\t *\r\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\r\n\t * name change reflects the flexibility of this property and is consistent\r\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\r\n\t * be used by DataTables, as it automatically maps the old name to the new\r\n\t * if required.\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\r\n\t/**\r\n\t * This property is the rendering partner to `data` and it is suggested that\r\n\t * when you want to manipulate data for display (including filtering,\r\n\t * sorting etc) without altering the underlying data for the table, use this\r\n\t * property. `render` can be considered to be the the read only companion to\r\n\t * `data` which is read / write (then as such more complex). Like `data`\r\n\t * this option can be given in a number of different ways to effect its\r\n\t * behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object.\r\n\t * * `object` - use different data for the different data types requested by\r\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\r\n\t *   of the object is the data type the property refers to and the value can\r\n\t *   defined using an integer, string or function using the same rules as\r\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\r\n\t *   This is the default value to use if you haven't specified a value for\r\n\t *   the data type requested by DataTables.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * {array|object} The data source for the row (based on `data`)\r\n\t *      * {string} The type call data requested - this will be 'filter',\r\n\t *        'display', 'type' or 'sort'.\r\n\t *      * {array|object} The full data source for the row (not based on\r\n\t *        `data`)\r\n\t *    * Return:\r\n\t *      * The return value from the function is what will be used for the\r\n\t *        data requested.\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\r\n\t/**\r\n\t * Change the cell type created for the column - either TD cells or TH cells. This\r\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\r\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\r\n\t */\r\n\t\"sCellType\": \"td\",\r\n\r\n\r\n\t/**\r\n\t * Class to give to each cell in this column.\r\n\t */\r\n\t\"sClass\": \"\",\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t * Generally you shouldn't need this!\r\n\t */\r\n\t\"sContentPadding\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because `data`\r\n\t * is set to null, or because the data source itself is null).\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter is only used in DataTables' server-side processing. It can\r\n\t * be exceptionally useful to know what columns are being displayed on the\r\n\t * client side, and to map these to database fields. When defined, the names\r\n\t * also allow DataTables to reorder information from the server if it comes\r\n\t * back in an unexpected order (i.e. if you switch your columns around on the\r\n\t * client-side, your server-side code does not also need updating).\r\n\t */\r\n\t\"sName\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Defines a data source type for the ordering which can be used to read\r\n\t * real-time information from the table (updating the internally cached\r\n\t * version) prior to ordering. This allows ordering to occur on user\r\n\t * editable elements such as form inputs.\r\n\t */\r\n\t\"sSortDataType\": \"std\",\r\n\r\n\r\n\t/**\r\n\t * The title of this column.\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\r\n\t/**\r\n\t * The type allows you to specify how the data for this column will be\r\n\t * ordered. Four types (string, numeric, date and html (which will strip\r\n\t * HTML tags before ordering)) are currently available. Note that only date\r\n\t * formats understood by Javascript's Date() object will be accepted as type\r\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\r\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\r\n\t * through plug-ins.\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\r\n\t/**\r\n\t * Defining the width of the column, this parameter may take any CSS value\r\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\n\t * been given a specific width through this interface ensuring that the table\r\n\t * remains readable.\r\n\t */\r\n\t\"sWidth\": null\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults.column );\r\n\r\n\r\n\r\n/**\r\n * DataTables settings object - this holds all the information needed for a\r\n * given table, including configuration, data and current application of the\r\n * table options. DataTables does not have a single instance for each DataTable\r\n * with the settings attached to that instance, but rather instances of the\r\n * DataTable \"class\" are created on-the-fly as needed (typically by a\r\n * $().dataTable() call) and the settings object is then applied to that\r\n * instance.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults} but this\r\n * one is the internal data store for DataTables's cache of columns. It should\r\n * NOT be manipulated outside of DataTables. Any configuration should be done\r\n * through the initialisation options.\r\n */\r\nDataTable.models.oSettings = {\r\n\t/**\r\n\t * Primary features of DataTables and their enablement state.\r\n\t */\r\n\t\"oFeatures\": {\r\n\r\n\t\t/**\r\n\t\t * Flag to say if DataTables should automatically try to calculate the\r\n\t\t * optimum table and columns widths (true) or not (false).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bAutoWidth\": null,\r\n\r\n\t\t/**\r\n\t\t * Delay the creation of TR and TD elements until they are actually\r\n\t\t * needed by a driven page draw. This can give a significant speed\r\n\t\t * increase for Ajax source and Javascript source data, but makes no\r\n\t\t * difference at all for DOM and server-side processing tables.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bDeferRender\": null,\r\n\r\n\t\t/**\r\n\t\t * Enable filtering on the table or not. Note that if this is disabled\r\n\t\t * then there is no filtering at all on the table, including fnFilter.\r\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bFilter\": null,\r\n\r\n\t\t/**\r\n\t\t * Used only for compatiblity with DT1\r\n\t\t * @deprecated\r\n\t\t */\r\n\t\t\"bInfo\": true,\r\n\r\n\t\t/**\r\n\t\t * Used only for compatiblity with DT1\r\n\t\t * @deprecated\r\n\t\t */\r\n\t\t\"bLengthChange\": true,\r\n\r\n\t\t/**\r\n\t\t * Pagination enabled or not. Note that if this is disabled then length\r\n\t\t * changing must also be disabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bPaginate\": null,\r\n\r\n\t\t/**\r\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\r\n\t\t * user request - typically an Ajax request for server-side processing.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bProcessing\": null,\r\n\r\n\t\t/**\r\n\t\t * Server-side processing enabled flag - when enabled DataTables will\r\n\t\t * get all data from the server for every draw - there is no filtering,\r\n\t\t * sorting or paging done on the client-side.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bServerSide\": null,\r\n\r\n\t\t/**\r\n\t\t * Sorting enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bSort\": null,\r\n\r\n\t\t/**\r\n\t\t * Multi-column sorting\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bSortMulti\": null,\r\n\r\n\t\t/**\r\n\t\t * Apply a class to the columns which are being sorted to provide a\r\n\t\t * visual highlight or not. This can slow things down when enabled since\r\n\t\t * there is a lot of DOM interaction.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bSortClasses\": null,\r\n\r\n\t\t/**\r\n\t\t * State saving enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bStateSave\": null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Scrolling settings for a table.\r\n\t */\r\n\t\"oScroll\": {\r\n\t\t/**\r\n\t\t * When the table is shorter in height than sScrollY, collapse the\r\n\t\t * table container down to the height of the table (when true).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"bCollapse\": null,\r\n\r\n\t\t/**\r\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\r\n\t\t * during table initialisation.\r\n\t\t */\r\n\t\t\"iBarWidth\": 0,\r\n\r\n\t\t/**\r\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\r\n\t\t * disabled if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"sX\": null,\r\n\r\n\t\t/**\r\n\t\t * Width to expand the table to when using x-scrolling. Typically you\r\n\t\t * should not need to use this.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @deprecated\r\n\t\t */\r\n\t\t\"sXInner\": null,\r\n\r\n\t\t/**\r\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\r\n\t\t * if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t */\r\n\t\t\"sY\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Language information for the table.\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Information callback function. See\r\n\t\t * {@link DataTable.defaults.fnInfoCallback}\r\n\t\t */\r\n\t\t\"fnInfoCallback\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Browser support parameters\r\n\t */\r\n\t\"oBrowser\": {\r\n\t\t/**\r\n\t\t * Determine if the vertical scrollbar is on the right or left of the\r\n\t\t * scrolling container - needed for rtl language layout, although not\r\n\t\t * all browsers move the scrollbar (Safari).\r\n\t\t */\r\n\t\t\"bScrollbarLeft\": false,\r\n\r\n\t\t/**\r\n\t\t * Browser scrollbar width\r\n\t\t */\r\n\t\t\"barWidth\": 0\r\n\t},\r\n\r\n\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * Array referencing the nodes which are used for the features. The\r\n\t * parameters of this object match what is allowed by sDom - i.e.\r\n\t *   <ul>\r\n\t *     <li>'l' - Length changing</li>\r\n\t *     <li>'f' - Filtering input</li>\r\n\t *     <li>'t' - The table!</li>\r\n\t *     <li>'i' - Information</li>\r\n\t *     <li>'p' - Pagination</li>\r\n\t *     <li>'r' - pRocessing</li>\r\n\t *   </ul>\r\n\t */\r\n\t\"aanFeatures\": [],\r\n\r\n\t/**\r\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\r\n\t * information.\r\n\t */\r\n\t\"aoData\": [],\r\n\r\n\t/**\r\n\t * Array of indexes which are in the current display (after filtering etc)\r\n\t */\r\n\t\"aiDisplay\": [],\r\n\r\n\t/**\r\n\t * Array of indexes for display - no filtering\r\n\t */\r\n\t\"aiDisplayMaster\": [],\r\n\r\n\t/**\r\n\t * Map of row ids to data indexes\r\n\t */\r\n\t\"aIds\": {},\r\n\r\n\t/**\r\n\t * Store information about each column that is in use\r\n\t */\r\n\t\"aoColumns\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's header\r\n\t */\r\n\t\"aoHeader\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's footer\r\n\t */\r\n\t\"aoFooter\": [],\r\n\r\n\t/**\r\n\t * Store the applied global search information in case we want to force a\r\n\t * research or compare the old search to a new one.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"oPreviousSearch\": {},\r\n\r\n\t/**\r\n\t * Store for named searches\r\n\t */\r\n\tsearchFixed: {},\r\n\r\n\t/**\r\n\t * Store the applied search for each column - see\r\n\t * {@link DataTable.models.oSearch} for the format that is used for the\r\n\t * filtering information for each column.\r\n\t */\r\n\t\"aoPreSearchCols\": [],\r\n\r\n\t/**\r\n\t * Sorting that is applied to the table. Note that the inner arrays are\r\n\t * used in the following manner:\r\n\t * <ul>\r\n\t *   <li>Index 0 - column number</li>\r\n\t *   <li>Index 1 - current sorting direction</li>\r\n\t * </ul>\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"aaSorting\": null,\r\n\r\n\t/**\r\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\r\n\t * aaSorting).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its width\r\n\t */\r\n\t\"sDestroyWidth\": 0,\r\n\r\n\t/**\r\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\r\n\t */\r\n\t\"aoRowCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for the header on each draw.\r\n\t */\r\n\t\"aoHeaderCallback\": [],\r\n\r\n\t/**\r\n\t * Callback function for the footer on each draw.\r\n\t */\r\n\t\"aoFooterCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for draw callback functions\r\n\t */\r\n\t\"aoDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for row created function\r\n\t */\r\n\t\"aoRowCreatedCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for just before the table is redrawn. A return of\r\n\t * false will be used to cancel the draw.\r\n\t */\r\n\t\"aoPreDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for when the table has been initialised.\r\n\t */\r\n\t\"aoInitComplete\": [],\r\n\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\r\n\t * saving state.\r\n\t */\r\n\t\"aoStateSaveParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings that have been stored for state saving\r\n\t * prior to using the stored values to restore the state.\r\n\t */\r\n\t\"aoStateLoadParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for operating on the settings object once the saved state has been\r\n\t * loaded\r\n\t */\r\n\t\"aoStateLoaded\": [],\r\n\r\n\t/**\r\n\t * Cache the table ID for quick access\r\n\t */\r\n\t\"sTableId\": \"\",\r\n\r\n\t/**\r\n\t * The TABLE node for the main table\r\n\t */\r\n\t\"nTable\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the thead element\r\n\t */\r\n\t\"nTHead\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tfoot element - if it exists\r\n\t */\r\n\t\"nTFoot\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tbody element\r\n\t */\r\n\t\"nTBody\": null,\r\n\r\n\t/**\r\n\t * Cache the wrapper node (contains all DataTables controlled elements)\r\n\t */\r\n\t\"nTableWrapper\": null,\r\n\r\n\t/**\r\n\t * Indicate if all required information has been read in\r\n\t */\r\n\t\"bInitialised\": false,\r\n\r\n\t/**\r\n\t * Information about open rows. Each object in the array has the parameters\r\n\t * 'nTr' and 'nParent'\r\n\t */\r\n\t\"aoOpenRows\": [],\r\n\r\n\t/**\r\n\t * Dictate the positioning of DataTables' control elements - see\r\n\t * {@link DataTable.model.oInit.sDom}.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"sDom\": null,\r\n\r\n\t/**\r\n\t * Search delay (in mS)\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\t/**\r\n\t * Which type of pagination should be used.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"sPaginationType\": \"two_button\",\r\n\r\n\t/**\r\n\t * Number of paging controls on the page. Only used for backwards compatibility\r\n\t */\r\n\tpagingControls: 0,\r\n\r\n\t/**\r\n\t * The state duration (for `stateSave`) in seconds.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"iStateDuration\": 0,\r\n\r\n\t/**\r\n\t * Array of callback functions for state saving. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the JSON string to save that has been thus far created. Returns\r\n\t *       a JSON string to be inserted into a json object\r\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t */\r\n\t\"aoStateSave\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for state loading. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the object stored. May return false to cancel state loading</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t */\r\n\t\"aoStateLoad\": [],\r\n\r\n\t/**\r\n\t * State that was saved. Useful for back reference\r\n\t */\r\n\t\"oSavedState\": null,\r\n\r\n\t/**\r\n\t * State that was loaded. Useful for back reference\r\n\t */\r\n\t\"oLoadedState\": null,\r\n\r\n\t/**\r\n\t * Note if draw should be blocked while getting data\r\n\t */\r\n\t\"bAjaxDataGet\": true,\r\n\r\n\t/**\r\n\t * The last jQuery XHR object that was used for server-side data gathering.\r\n\t * This can be used for working with the XHR information in one of the\r\n\t * callbacks\r\n\t */\r\n\t\"jqXHR\": null,\r\n\r\n\t/**\r\n\t * JSON returned from the server in the last Ajax request\r\n\t */\r\n\t\"json\": undefined,\r\n\r\n\t/**\r\n\t * Data submitted as part of the last Ajax request\r\n\t */\r\n\t\"oAjaxData\": undefined,\r\n\r\n\t/**\r\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\r\n\t * required).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"sServerMethod\": null,\r\n\r\n\t/**\r\n\t * Format numbers for display.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"fnFormatNumber\": null,\r\n\r\n\t/**\r\n\t * List of options that can be used for the user selectable length menu.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"aLengthMenu\": null,\r\n\r\n\t/**\r\n\t * Counter for the draws that the table does. Also used as a tracker for\r\n\t * server-side processing\r\n\t */\r\n\t\"iDraw\": 0,\r\n\r\n\t/**\r\n\t * Indicate if a redraw is being done - useful for Ajax\r\n\t */\r\n\t\"bDrawing\": false,\r\n\r\n\t/**\r\n\t * Draw index (iDraw) of the last error when parsing the returned data\r\n\t */\r\n\t\"iDrawError\": -1,\r\n\r\n\t/**\r\n\t * Paging display length\r\n\t */\r\n\t\"_iDisplayLength\": 10,\r\n\r\n\t/**\r\n\t * Paging start point - aiDisplay index\r\n\t */\r\n\t\"_iDisplayStart\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the result set\r\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t */\r\n\t\"_iRecordsTotal\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the current display set\r\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t */\r\n\t\"_iRecordsDisplay\": 0,\r\n\r\n\t/**\r\n\t * The classes to use for the table\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if filtering has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @deprecated\r\n\t */\r\n\t\"bFiltered\": false,\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if sorting has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @deprecated\r\n\t */\r\n\t\"bSorted\": false,\r\n\r\n\t/**\r\n\t * Indicate that if multiple rows are in the header and there is more than\r\n\t * one unique cell per column, if the top one (true) or bottom one (false)\r\n\t * should be used for sorting / title by DataTables.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t */\r\n\t\"bSortCellsTop\": null,\r\n\r\n\t/**\r\n\t * Initialisation object that is used for the table\r\n\t */\r\n\t\"oInit\": null,\r\n\r\n\t/**\r\n\t * Destroy callback functions - for plug-ins to attach themselves to the\r\n\t * destroy so they can clean up markup and events.\r\n\t */\r\n\t\"aoDestroyCallback\": [],\r\n\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, before filtering\r\n\t */\r\n\t\"fnRecordsTotal\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsTotal * 1 :\r\n\t\t\tthis.aiDisplayMaster.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, after filtering\r\n\t */\r\n\t\"fnRecordsDisplay\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsDisplay * 1 :\r\n\t\t\tthis.aiDisplay.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the display end point - aiDisplay index\r\n\t */\r\n\t\"fnDisplayEnd\": function ()\r\n\t{\r\n\t\tvar\r\n\t\t\tlen      = this._iDisplayLength,\r\n\t\t\tstart    = this._iDisplayStart,\r\n\t\t\tcalc     = start + len,\r\n\t\t\trecords  = this.aiDisplay.length,\r\n\t\t\tfeatures = this.oFeatures,\r\n\t\t\tpaginate = features.bPaginate;\r\n\r\n\t\tif ( features.bServerSide ) {\r\n\t\t\treturn paginate === false || len === -1 ?\r\n\t\t\t\tstart + records :\r\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ! paginate || calc>records || len===-1 ?\r\n\t\t\t\trecords :\r\n\t\t\t\tcalc;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * The DataTables object for this table\r\n\t */\r\n\t\"oInstance\": null,\r\n\r\n\t/**\r\n\t * Unique identifier for each instance of the DataTables object. If there\r\n\t * is an ID on the table node, then it takes that value, otherwise an\r\n\t * incrementing internal counter is used.\r\n\t */\r\n\t\"sInstance\": null,\r\n\r\n\t/**\r\n\t * tabindex attribute value that is added to DataTables control elements, allowing\r\n\t * keyboard navigation of the table and its controls.\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollHead\": null,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollFoot\": null,\r\n\r\n\t/**\r\n\t * Last applied sort\r\n\t */\r\n\t\"aLastSort\": [],\r\n\r\n\t/**\r\n\t * Stored plug-in instances\r\n\t */\r\n\t\"oPlugins\": {},\r\n\r\n\t/**\r\n\t * Function used to get a row's id from the row's data\r\n\t */\r\n\t\"rowIdFn\": null,\r\n\r\n\t/**\r\n\t * Data location where to store a row's id\r\n\t */\r\n\t\"rowId\": null,\r\n\r\n\tcaption: '',\r\n\r\n\tcaptionNode: null,\r\n\r\n\tcolgroup: null,\r\n\r\n\t/** Delay loading of data */\r\n\tdeferLoading: null,\r\n\r\n\t/** Allow auto type detection */\r\n\ttypeDetect: true\r\n};\r\n\r\n/**\r\n * Extension object for DataTables that is used to provide all extension\r\n * options.\r\n *\r\n * Note that the `DataTable.ext` object is available through\r\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\r\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\r\n *  @namespace\r\n *  @extends DataTable.models.ext\r\n */\r\n\r\n\r\nvar extPagination = DataTable.ext.pager;\r\n\r\n// Paging buttons configuration\r\n$.extend( extPagination, {\r\n\tsimple: function () {\r\n\t\treturn [ 'previous', 'next' ];\r\n\t},\r\n\r\n\tfull: function () {\r\n\t\treturn [ 'first', 'previous', 'next', 'last' ];\r\n\t},\r\n\r\n\tnumbers: function () {\r\n\t\treturn [ 'numbers' ];\r\n\t},\r\n\r\n\tsimple_numbers: function () {\r\n\t\treturn [ 'previous', 'numbers', 'next' ];\r\n\t},\r\n\r\n\tfull_numbers: function () {\r\n\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\r\n\t},\r\n\r\n\tfirst_last: function () {\r\n\t\treturn ['first', 'last'];\r\n\t},\r\n\r\n\tfirst_last_numbers: function () {\r\n\t\treturn ['first', 'numbers', 'last'];\r\n\t},\r\n\r\n\t// For testing and plug-ins to use\r\n\t_numbers: _pagingNumbers,\r\n\r\n\t// Number of number buttons - legacy, use `numbers` option for paging feature\r\n\tnumbers_length: 7\r\n} );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\tpagingButton: {\r\n\t\t_: function (settings, buttonType, content, active, disabled) {\r\n\t\t\tvar classes = settings.oClasses.paging;\r\n\t\t\tvar btnClasses = [classes.button];\r\n\t\t\tvar btn;\r\n\r\n\t\t\tif (active) {\r\n\t\t\t\tbtnClasses.push(classes.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (disabled) {\r\n\t\t\t\tbtnClasses.push(classes.disabled)\r\n\t\t\t}\r\n\r\n\t\t\tif (buttonType === 'ellipsis') {\r\n\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbtn = $('<button>', {\r\n\t\t\t\t\tclass: btnClasses.join(' '),\r\n\t\t\t\t\trole: 'link',\r\n\t\t\t\t\ttype: 'button'\r\n\t\t\t\t}).html(content);\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdisplay: btn,\r\n\t\t\t\tclicker: btn\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpagingContainer: {\r\n\t\t_: function (settings, buttons) {\r\n\t\t\t// No wrapping element - just append directly to the host\r\n\t\t\treturn buttons;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Common function to remove new lines, strip HTML and diacritic control\r\nvar _filterString = function (stripHtml, normalize) {\r\n\treturn function (str) {\r\n\t\tif (_empty(str) || typeof str !== 'string') {\r\n\t\t\treturn str;\r\n\t\t}\r\n\r\n\t\tstr = str.replace( _re_new_lines, \" \" );\r\n\r\n\t\tif (stripHtml) {\r\n\t\t\tstr = _stripHtml(str);\r\n\t\t}\r\n\r\n\t\tif (normalize) {\r\n\t\t\tstr = _normalize(str, false);\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t};\r\n}\r\n\r\n/*\r\n * Public helper functions. These aren't used internally by DataTables, or\r\n * called by any of the options passed into DataTables, but they can be used\r\n * externally by developers working with DataTables. They are helper functions\r\n * to make working with DataTables a little bit easier.\r\n */\r\n\r\n/**\r\n * Common logic for moment, luxon or a date action.\r\n *\r\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\r\n */\r\nfunction __mld( dtLib, momentFn, luxonFn, dateFn, arg1 ) {\r\n\tif (__moment) {\r\n\t\treturn dtLib[momentFn]( arg1 );\r\n\t}\r\n\telse if (__luxon) {\r\n\t\treturn dtLib[luxonFn]( arg1 );\r\n\t}\r\n\t\r\n\treturn dateFn ? dtLib[dateFn]( arg1 ) : dtLib;\r\n}\r\n\r\n\r\nvar __mlWarning = false;\r\nvar __luxon; // Can be assigned in DateTeble.use()\r\nvar __moment; // Can be assigned in DateTeble.use()\r\n\r\n/**\r\n * \r\n */\r\nfunction resolveWindowLibs() {\r\n\tif (window.luxon && ! __luxon) {\r\n\t\t__luxon = window.luxon;\r\n\t}\r\n\t\r\n\tif (window.moment && ! __moment) {\r\n\t\t__moment = window.moment;\r\n\t}\r\n}\r\n\r\nfunction __mldObj (d, format, locale) {\r\n\tvar dt;\r\n\r\n\tresolveWindowLibs();\r\n\r\n\tif (__moment) {\r\n\t\tdt = __moment.utc( d, format, locale, true );\r\n\r\n\t\tif (! dt.isValid()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\telse if (__luxon) {\r\n\t\tdt = format && typeof d === 'string'\r\n\t\t\t? __luxon.DateTime.fromFormat( d, format )\r\n\t\t\t: __luxon.DateTime.fromISO( d );\r\n\r\n\t\tif (! dt.isValid) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tdt.setLocale(locale);\r\n\t}\r\n\telse if (! format) {\r\n\t\t// No format given, must be ISO\r\n\t\tdt = new Date(d);\r\n\t}\r\n\telse {\r\n\t\tif (! __mlWarning) {\r\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\r\n\t\t}\r\n\r\n\t\t__mlWarning = true;\r\n\t}\r\n\r\n\treturn dt;\r\n}\r\n\r\n// Wrapper for date, datetime and time which all operate the same way with the exception of\r\n// the output string for auto locale support\r\nfunction __mlHelper (localeString) {\r\n\treturn function ( from, to, locale, def ) {\r\n\t\t// Luxon and Moment support\r\n\t\t// Argument shifting\r\n\t\tif ( arguments.length === 0 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = null; // means toLocaleString\r\n\t\t\tfrom = null; // means iso8601\r\n\t\t}\r\n\t\telse if ( arguments.length === 1 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\t\telse if ( arguments.length === 2 ) {\r\n\t\t\tlocale = to;\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\r\n\t\tvar typeName = 'datetime' + (to ? '-' + to : '');\r\n\r\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\r\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\r\n\t\tif (! DataTable.ext.type.order[typeName + '-pre']) {\r\n\t\t\tDataTable.type(typeName, {\r\n\t\t\t\tdetect: function (d) {\r\n\t\t\t\t\t// The renderer will give the value to type detect as the type!\r\n\t\t\t\t\treturn d === typeName ? typeName : false;\r\n\t\t\t\t},\r\n\t\t\t\torder: {\r\n\t\t\t\t\tpre: function (d) {\r\n\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\r\n\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\r\n\t\t\t\t\t\treturn d.valueOf();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tclassName: 'dt-right'\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\t\treturn function ( d, type ) {\r\n\t\t\t// Allow for a default value\r\n\t\t\tif (d === null || d === undefined) {\r\n\t\t\t\tif (def === '--now') {\r\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\r\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\r\n\t\t\t\t\t// UTC\r\n\t\t\t\t\tvar local = new Date();\r\n\t\t\t\t\td = new Date( Date.UTC(\r\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\r\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\r\n\t\t\t\t\t) );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'type') {\r\n\t\t\t\t// Typing uses the type name for fast matching\r\n\t\t\t\treturn typeName;\r\n\t\t\t}\r\n\r\n\t\t\tif (d === '') {\r\n\t\t\t\treturn type !== 'sort'\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\r\n\t\t\t}\r\n\r\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\r\n\t\t\t// format for ordering, not display - its already in the display format.\r\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tvar dt = __mldObj(d, from, locale);\r\n\r\n\t\t\tif (dt === null) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'sort') {\r\n\t\t\t\treturn dt;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar formatted = to === null\r\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\r\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\r\n\r\n\t\t\t// XSS protection\r\n\t\t\treturn type === 'display' ?\r\n\t\t\t\t_escapeHtml( formatted ) :\r\n\t\t\t\tformatted;\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Based on locale, determine standard number formatting\r\n// Fallback for legacy browsers is US English\r\nvar __thousands = ',';\r\nvar __decimal = '.';\r\n\r\nif (window.Intl !== undefined) {\r\n\ttry {\r\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\r\n\t\r\n\t\tfor (var i=0 ; i<num.length ; i++) {\r\n\t\t\tif (num[i].type === 'group') {\r\n\t\t\t\t__thousands = num[i].value;\r\n\t\t\t}\r\n\t\t\telse if (num[i].type === 'decimal') {\r\n\t\t\t\t__decimal = num[i].value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcatch (e) {\r\n\t\t// noop\r\n\t}\r\n}\r\n\r\n// Formatted date time detection - use by declaring the formats you are going to use\r\nDataTable.datetime = function ( format, locale ) {\r\n\tvar typeName = 'datetime-' + format;\r\n\r\n\tif (! locale) {\r\n\t\tlocale = 'en';\r\n\t}\r\n\r\n\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\tDataTable.type(typeName, {\r\n\t\t\tdetect: function (d) {\r\n\t\t\t\tvar dt = __mldObj(d, format, locale);\r\n\t\t\t\treturn d === '' || dt ? typeName : false;\r\n\t\t\t},\r\n\t\t\torder: {\r\n\t\t\t\tpre: function (d) {\r\n\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclassName: 'dt-right'\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Helpers for `columns.render`.\r\n *\r\n * The options defined here can be used with the `columns.render` initialisation\r\n * option to provide a display renderer. The following functions are defined:\r\n *\r\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\r\n * This renderer has three overloads:\r\n *   * 1 parameter:\r\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\r\n *   * 2 parameters:\r\n *     * `string` - Format to convert from\r\n *     * `string` - Format to convert to. Assumes `en` locale\r\n *   * 3 parameters:\r\n *     * `string` - Format to convert from\r\n *     * `string` - Format to convert to\r\n *     * `string` - Locale\r\n * * `number` - Will format numeric data (defined by `columns.data`) for\r\n *   display, retaining the original unformatted data for sorting and filtering.\r\n *   It takes 5 parameters:\r\n *   * `string` - Thousands grouping separator\r\n *   * `string` - Decimal point indicator\r\n *   * `integer` - Number of decimal points to show\r\n *   * `string` (optional) - Prefix.\r\n *   * `string` (optional) - Postfix (/suffix).\r\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\r\n *   parameters.\r\n *\r\n * @example\r\n *   // Column definition using the number renderer\r\n *   {\r\n *     data: \"salary\",\r\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\r\n *   }\r\n *\r\n * @namespace\r\n */\r\nDataTable.render = {\r\n\tdate: __mlHelper('toLocaleDateString'),\r\n\tdatetime: __mlHelper('toLocaleString'),\r\n\ttime: __mlHelper('toLocaleTimeString'),\r\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\r\n\t\t// Auto locale detection\r\n\t\tif (thousands === null || thousands === undefined) {\r\n\t\t\tthousands = __thousands;\r\n\t\t}\r\n\r\n\t\tif (decimal === null || decimal === undefined) {\r\n\t\t\tdecimal = __decimal;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdisplay: function ( d ) {\r\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (d === '' || d === null) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar negative = d < 0 ? '-' : '';\r\n\t\t\t\tvar flo = parseFloat( d );\r\n\t\t\t\tvar abs = Math.abs(flo);\r\n\r\n\t\t\t\t// Scientific notation for large and small numbers\r\n\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\r\n\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\r\n\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\r\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\r\n\t\t\t\t// be a number after all)\r\n\t\t\t\tif ( isNaN( flo ) ) {\r\n\t\t\t\t\treturn _escapeHtml( d );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tflo = flo.toFixed( precision );\r\n\t\t\t\td = Math.abs( flo );\r\n\r\n\t\t\t\tvar intPart = parseInt( d, 10 );\r\n\t\t\t\tvar floatPart = precision ?\r\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\r\n\t\t\t\t\t'';\r\n\r\n\t\t\t\t// If zero, then can't have a negative prefix\r\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\r\n\t\t\t\t\tnegative = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn negative + (prefix||'') +\r\n\t\t\t\t\tintPart.toString().replace(\r\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\r\n\t\t\t\t\t) +\r\n\t\t\t\t\tfloatPart +\r\n\t\t\t\t\t(postfix||'');\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\ttext: function () {\r\n\t\treturn {\r\n\t\t\tdisplay: _escapeHtml,\r\n\t\t\tfilter: _escapeHtml\r\n\t\t};\r\n\t}\r\n};\r\n\r\n\r\nvar _extTypes = DataTable.ext.type;\r\n\r\n// Get / set type\r\nDataTable.type = function (name, prop, val) {\r\n\tif (! prop) {\r\n\t\treturn {\r\n\t\t\tclassName: _extTypes.className[name],\r\n\t\t\tdetect: _extTypes.detect.find(function (fn) {\r\n\t\t\t\treturn fn._name === name;\r\n\t\t\t}),\r\n\t\t\torder: {\r\n\t\t\t\tpre: _extTypes.order[name + '-pre'],\r\n\t\t\t\tasc: _extTypes.order[name + '-asc'],\r\n\t\t\t\tdesc: _extTypes.order[name + '-desc']\r\n\t\t\t},\r\n\t\t\trender: _extTypes.render[name],\r\n\t\t\tsearch: _extTypes.search[name]\r\n\t\t};\r\n\t}\r\n\r\n\tvar setProp = function(prop, propVal) {\r\n\t\t_extTypes[prop][name] = propVal;\r\n\t};\r\n\tvar setDetect = function (detect) {\r\n\t\t// `detect` can be a function or an object - we set a name\r\n\t\t// property for either - that is used for the detection\r\n\t\tObject.defineProperty(detect, \"_name\", {value: name});\r\n\r\n\t\tvar idx = _extTypes.detect.findIndex(function (item) {\r\n\t\t\treturn item._name === name;\r\n\t\t});\r\n\r\n\t\tif (idx === -1) {\r\n\t\t\t_extTypes.detect.unshift(detect);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_extTypes.detect.splice(idx, 1, detect);\r\n\t\t}\r\n\t};\r\n\tvar setOrder = function (obj) {\r\n\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\r\n\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\r\n\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\r\n\t};\r\n\r\n\t// prop is optional\r\n\tif (val === undefined) {\r\n\t\tval = prop;\r\n\t\tprop = null;\r\n\t}\r\n\r\n\tif (prop === 'className') {\r\n\t\tsetProp('className', val);\r\n\t}\r\n\telse if (prop === 'detect') {\r\n\t\tsetDetect(val);\r\n\t}\r\n\telse if (prop === 'order') {\r\n\t\tsetOrder(val);\r\n\t}\r\n\telse if (prop === 'render') {\r\n\t\tsetProp('render', val);\r\n\t}\r\n\telse if (prop === 'search') {\r\n\t\tsetProp('search', val);\r\n\t}\r\n\telse if (! prop) {\r\n\t\tif (val.className) {\r\n\t\t\tsetProp('className', val.className);\r\n\t\t}\r\n\r\n\t\tif (val.detect !== undefined) {\r\n\t\t\tsetDetect(val.detect);\r\n\t\t}\r\n\r\n\t\tif (val.order) {\r\n\t\t\tsetOrder(val.order);\r\n\t\t}\r\n\r\n\t\tif (val.render !== undefined) {\r\n\t\t\tsetProp('render', val.render);\r\n\t\t}\r\n\r\n\t\tif (val.search !== undefined) {\r\n\t\t\tsetProp('search', val.search);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Get a list of types\r\nDataTable.types = function () {\r\n\treturn _extTypes.detect.map(function (fn) {\r\n\t\treturn fn._name;\r\n\t});\r\n};\r\n\r\nvar __diacriticSort = function (a, b) {\r\n\ta = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\r\n\tb = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\r\n\r\n\t// Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\r\n\t// Safari and thus can disable this check\r\n\t// eslint-disable-next-line compat/compat\r\n\treturn a.localeCompare(b, navigator.languages[0] || navigator.language, {\r\n\t\tnumeric: true,\r\n\t\tignorePunctuation: true,\r\n\t});\r\n}\r\n\r\n//\r\n// Built in data types\r\n//\r\n\r\nDataTable.type('string', {\r\n\tdetect: function () {\r\n\t\treturn 'string';\r\n\t},\r\n\torder: {\r\n\t\tpre: function ( a ) {\r\n\t\t\t// This is a little complex, but faster than always calling toString,\r\n\t\t\t// http://jsperf.com/tostring-v-check\r\n\t\t\treturn _empty(a) && typeof a !== 'boolean' ?\r\n\t\t\t\t'' :\r\n\t\t\t\ttypeof a === 'string' ?\r\n\t\t\t\t\ta.toLowerCase() :\r\n\t\t\t\t\t! a.toString ?\r\n\t\t\t\t\t\t'' :\r\n\t\t\t\t\t\ta.toString();\r\n\t\t}\r\n\t},\r\n\tsearch: _filterString(false, true)\r\n});\r\n\r\nDataTable.type('string-utf8', {\r\n\tdetect: {\r\n\t\tallOf: function ( d ) {\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\toneOf: function ( d ) {\r\n\t\t\t// At least one data point must contain a non-ASCII character\r\n\t\t\t// This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\r\n\t\t\t// this data type won't be supported.\r\n\t\t\t// eslint-disable-next-line compat/compat\r\n\t\t\treturn ! _empty( d ) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tasc: __diacriticSort,\r\n\t\tdesc: function (a, b) {\r\n\t\t\treturn __diacriticSort(a, b) * -1;\r\n\t\t}\r\n\t},\r\n\tsearch: _filterString(false, true)\r\n});\r\n\r\n\r\nDataTable.type('html', {\r\n\tdetect: {\r\n\t\tallOf: function ( d ) {\r\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\r\n\t\t},\r\n\t\toneOf: function ( d ) {\r\n\t\t\t// At least one data point must contain a `<`\r\n\t\t\treturn ! _empty( d ) && typeof d === 'string' && d.indexOf('<') !== -1;\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tpre: function ( a ) {\r\n\t\t\treturn _empty(a) ?\r\n\t\t\t\t'' :\r\n\t\t\t\ta.replace ?\r\n\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\r\n\t\t\t\t\ta+'';\r\n\t\t}\r\n\t},\r\n\tsearch: _filterString(true, true)\r\n});\r\n\r\n\r\nDataTable.type('date', {\r\n\tclassName: 'dt-type-date',\r\n\tdetect: {\r\n\t\tallOf: function ( d ) {\r\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\r\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\r\n\t\t\t// plug-in for anything other than ISO8601 style strings\r\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tvar parsed = Date.parse(d);\r\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d);\r\n\t\t},\r\n\t\toneOf: function ( d ) {\r\n\t\t\t// At least one entry must be a date or a string with a date\r\n\t\t\treturn (d instanceof Date) || (typeof d === 'string' && _re_date.test(d));\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tpre: function ( d ) {\r\n\t\t\tvar ts = Date.parse( d );\r\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nDataTable.type('html-num-fmt', {\r\n\tclassName: 'dt-type-numeric',\r\n\tdetect: {\r\n\t\tallOf: function ( d, settings ) {\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\r\n\t\t},\r\n\t\toneOf: function (d, settings) {\r\n\t\t\t// At least one data point must contain a numeric value\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tpre: function ( d, s ) {\r\n\t\t\tvar dp = s.oLanguage.sDecimal;\r\n\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\r\n\t\t}\r\n\t},\r\n\tsearch: _filterString(true, true)\r\n});\r\n\r\n\r\nDataTable.type('html-num', {\r\n\tclassName: 'dt-type-numeric',\r\n\tdetect: {\r\n\t\tallOf: function ( d, settings ) {\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _htmlNumeric( d, decimal, false, true );\r\n\t\t},\r\n\t\toneOf: function (d, settings) {\r\n\t\t\t// At least one data point must contain a numeric value\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _htmlNumeric( d, decimal, false, false );\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tpre: function ( d, s ) {\r\n\t\t\tvar dp = s.oLanguage.sDecimal;\r\n\t\t\treturn __numericReplace( d, dp, _re_html );\r\n\t\t}\r\n\t},\r\n\tsearch: _filterString(true, true)\r\n});\r\n\r\n\r\nDataTable.type('num-fmt', {\r\n\tclassName: 'dt-type-numeric',\r\n\tdetect: {\r\n\t\tallOf: function ( d, settings ) {\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _isNumber( d, decimal, true, true );\r\n\t\t},\r\n\t\toneOf: function (d, settings) {\r\n\t\t\t// At least one data point must contain a numeric value\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _isNumber( d, decimal, true, false );\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tpre: function ( d, s ) {\r\n\t\t\tvar dp = s.oLanguage.sDecimal;\r\n\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nDataTable.type('num', {\r\n\tclassName: 'dt-type-numeric',\r\n\tdetect: {\r\n\t\tallOf: function ( d, settings ) {\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _isNumber( d, decimal, false, true );\r\n\t\t},\r\n\t\toneOf: function (d, settings) {\r\n\t\t\t// At least one data point must contain a numeric value\r\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\t\treturn _isNumber( d, decimal, false, false );\r\n\t\t}\r\n\t},\r\n\torder: {\r\n\t\tpre: function (d, s) {\r\n\t\t\tvar dp = s.oLanguage.sDecimal;\r\n\t\t\treturn __numericReplace( d, dp );\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n\r\n\r\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\r\n\tif ( d !== 0 && (!d || d === '-') ) {\r\n\t\treturn -Infinity;\r\n\t}\r\n\t\r\n\tvar type = typeof d;\r\n\r\n\tif (type === 'number' || type === 'bigint') {\r\n\t\treturn d;\r\n\t}\r\n\r\n\t// If a decimal place other than `.` is used, it needs to be given to the\r\n\t// function so we can detect it and replace with a `.` which is the only\r\n\t// decimal place Javascript recognises - it is not locale aware.\r\n\tif ( decimalPlace ) {\r\n\t\td = _numToDecimal( d, decimalPlace );\r\n\t}\r\n\r\n\tif ( d.replace ) {\r\n\t\tif ( re1 ) {\r\n\t\t\td = d.replace( re1, '' );\r\n\t\t}\r\n\r\n\t\tif ( re2 ) {\r\n\t\t\td = d.replace( re2, '' );\r\n\t\t}\r\n\t}\r\n\r\n\treturn d * 1;\r\n};\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\tfooter: {\r\n\t\t_: function ( settings, cell, classes ) {\r\n\t\t\tcell.addClass(classes.tfoot.cell);\r\n\t\t}\r\n\t},\r\n\r\n\theader: {\r\n\t\t_: function ( settings, cell, classes ) {\r\n\t\t\tcell.addClass(classes.thead.cell);\r\n\r\n\t\t\tif (! settings.oFeatures.bSort) {\r\n\t\t\t\tcell.addClass(classes.order.none);\r\n\t\t\t}\r\n\r\n\t\t\tvar legacyTop = settings.bSortCellsTop;\r\n\t\t\tvar headerRows = cell.closest('thead').find('tr');\r\n\t\t\tvar rowIdx = cell.parent().index();\r\n\r\n\t\t\t// Conditions to not apply the ordering icons\r\n\t\t\tif (\r\n\t\t\t\t// Cells and rows which have the attribute to disable the icons\r\n\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\r\n\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\r\n\r\n\t\t\t\t// Legacy support for `orderCellsTop`. If it is set, then cells\r\n\t\t\t\t// which are not in the top or bottom row of the header (depending\r\n\t\t\t\t// on the value) do not get the sorting classes applied to them\r\n\t\t\t\t(legacyTop === true && rowIdx !== 0) ||\r\n\t\t\t\t(legacyTop === false && rowIdx !== headerRows.length - 1)\r\n\t\t\t) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// No additional mark-up required\r\n\t\t\t// Attach a sort listener to update on sort - note that using the\r\n\t\t\t// `DT` namespace will allow the event to be removed automatically\r\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\r\n\t\t\t// listening for\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT column-visibility.dt.DT', function ( e, ctx ) {\r\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\r\n\t\t\t\t\treturn;               // table, not a nested one\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sorting = ctx.sortDetails;\r\n\r\n\t\t\t\tif (! sorting) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar i;\r\n\t\t\t\tvar orderClasses = classes.order;\r\n\t\t\t\tvar columns = ctx.api.columns( cell );\r\n\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\r\n\t\t\t\tvar orderable = columns.orderable().includes(true);\r\n\t\t\t\tvar ariaType = '';\r\n\t\t\t\tvar indexes = columns.indexes();\r\n\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\r\n\t\t\t\tvar orderedColumns = _pluck(sorting, 'col');\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\torderClasses.isAsc +' '+\r\n\t\t\t\t\t\torderClasses.isDesc\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\r\n\t\t\t\t\t.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )\r\n\t\t\t\t\t.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );\r\n\r\n\t\t\t\t// Determine if all of the columns that this cell covers are included in the\r\n\t\t\t\t// current ordering\r\n\t\t\t\tvar isOrdering = true;\r\n\t\t\t\t\r\n\t\t\t\tfor (i=0; i<indexes.length; i++) {\r\n\t\t\t\t\tif (! orderedColumns.includes(indexes[i])) {\r\n\t\t\t\t\t\tisOrdering = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isOrdering ) {\r\n\t\t\t\t\t// Get the ordering direction for the columns under this cell\r\n\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\r\n\t\t\t\t\t// (column spanning cells)\r\n\t\t\t\t\tvar orderDirs = columns.order();\r\n\r\n\t\t\t\t\tcell.addClass(\r\n\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\r\n\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find the first visible column that has ordering applied to it - it get's\r\n\t\t\t\t// the aria information, as the ARIA spec says that only one column should\r\n\t\t\t\t// be marked with aria-sort\r\n\t\t\t\tvar firstVis = -1; // column index\r\n\r\n\t\t\t\tfor (i=0; i<orderedColumns.length; i++) {\r\n\t\t\t\t\tif (settings.aoColumns[orderedColumns[i]].bVisible) {\r\n\t\t\t\t\t\tfirstVis = orderedColumns[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (indexes[0] == firstVis) {\r\n\t\t\t\t\tvar firstSort = sorting[0];\r\n\t\t\t\t\tvar sortOrder = col.asSorting;\r\n\r\n\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\r\n\r\n\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\r\n\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcell.removeAttr('aria-sort');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcell.attr('aria-label', orderable\r\n\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\r\n\t\t\t\t\t: col.ariaTitle\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Make the headers tab-able for keyboard navigation\r\n\t\t\t\tif (orderable) {\r\n\t\t\t\t\tcell.find('.dt-column-title').attr('role', 'button');\r\n\t\t\t\t\tcell.attr('tabindex', 0)\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\tlayout: {\r\n\t\t_: function ( settings, container, items ) {\r\n\t\t\tvar classes = settings.oClasses.layout;\r\n\t\t\tvar row = $('<div/>')\r\n\t\t\t\t.attr('id', items.id || null)\r\n\t\t\t\t.addClass(items.className || classes.row)\r\n\t\t\t\t.appendTo( container );\r\n\r\n\t\t\t$.each( items, function (key, val) {\r\n\t\t\t\tif (key === 'id' || key === 'className') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar klass = '';\r\n\r\n\t\t\t\tif (val.table) {\r\n\t\t\t\t\trow.addClass(classes.tableRow);\r\n\t\t\t\t\tklass += classes.tableCell + ' ';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (key === 'start') {\r\n\t\t\t\t\tklass += classes.start;\r\n\t\t\t\t}\r\n\t\t\t\telse if (key === 'end') {\r\n\t\t\t\t\tklass += classes.end;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tklass += classes.full;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$('<div/>')\r\n\t\t\t\t\t.attr({\r\n\t\t\t\t\t\tid: val.id || null,\r\n\t\t\t\t\t\t\"class\": val.className\r\n\t\t\t\t\t\t\t? val.className\r\n\t\t\t\t\t\t\t: classes.cell + ' ' + klass\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.append( val.contents )\r\n\t\t\t\t\t.appendTo( row );\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\nDataTable.feature = {};\r\n\r\n// Third parameter is internal only!\r\nDataTable.feature.register = function ( name, cb, legacy ) {\r\n\tDataTable.ext.features[ name ] = cb;\r\n\r\n\tif (legacy) {\r\n\t\t_ext.feature.push({\r\n\t\t\tcFeature: legacy,\r\n\t\t\tfnInit: cb\r\n\t\t});\r\n\t}\r\n};\r\n\r\nfunction _divProp(el, prop, val) {\r\n\tif (val) {\r\n\t\tel[prop] = val;\r\n\t}\r\n}\r\n\r\nDataTable.feature.register( 'div', function ( settings, opts ) {\r\n\tvar n = $('<div>')[0];\r\n\r\n\tif (opts) {\r\n\t\t_divProp(n, 'className', opts.className);\r\n\t\t_divProp(n, 'id', opts.id);\r\n\t\t_divProp(n, 'innerHTML', opts.html);\r\n\t\t_divProp(n, 'textContent', opts.text);\r\n\t}\r\n\r\n\treturn n;\r\n} );\r\n\r\nDataTable.feature.register( 'info', function ( settings, opts ) {\r\n\t// For compatibility with the legacy `info` top level option\r\n\tif (! settings.oFeatures.bInfo) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar\r\n\t\tlang  = settings.oLanguage,\r\n\t\ttid = settings.sTableId,\r\n\t\tn = $('<div/>', {\r\n\t\t\t'class': settings.oClasses.info.container,\r\n\t\t} );\r\n\r\n\topts = $.extend({\r\n\t\tcallback: lang.fnInfoCallback,\r\n\t\tempty: lang.sInfoEmpty,\r\n\t\tpostfix: lang.sInfoPostFix,\r\n\t\tsearch: lang.sInfoFiltered,\r\n\t\ttext: lang.sInfo,\r\n\t}, opts);\r\n\r\n\r\n\t// Update display on each draw\r\n\tsettings.aoDrawCallback.push(function (s) {\r\n\t\t_fnUpdateInfo(s, opts, n);\r\n\t});\r\n\r\n\t// For the first info display in the table, we add a callback and aria information.\r\n\tif (! settings._infoEl) {\r\n\t\tn.attr({\r\n\t\t\t'aria-live': 'polite',\r\n\t\t\tid: tid+'_info',\r\n\t\t\trole: 'status'\r\n\t\t});\r\n\r\n\t\t// Table is described by our info div\r\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\r\n\r\n\t\tsettings._infoEl = n;\r\n\t}\r\n\r\n\treturn n;\r\n}, 'i' );\r\n\r\n/**\r\n * Update the information elements in the display\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnUpdateInfo ( settings, opts, node )\r\n{\r\n\tvar\r\n\t\tstart = settings._iDisplayStart+1,\r\n\t\tend   = settings.fnDisplayEnd(),\r\n\t\tmax   = settings.fnRecordsTotal(),\r\n\t\ttotal = settings.fnRecordsDisplay(),\r\n\t\tout   = total\r\n\t\t\t? opts.text\r\n\t\t\t: opts.empty;\r\n\r\n\tif ( total !== max ) {\r\n\t\t// Record set after filtering\r\n\t\tout += ' ' + opts.search;\r\n\t}\r\n\r\n\t// Convert the macros\r\n\tout += opts.postfix;\r\n\tout = _fnMacros( settings, out );\r\n\r\n\tif ( opts.callback ) {\r\n\t\tout = opts.callback.call( settings.oInstance,\r\n\t\t\tsettings, start, end, max, total, out\r\n\t\t);\r\n\t}\r\n\r\n\tnode.html( out );\r\n\r\n\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\r\n}\r\n\r\nvar __searchCounter = 0;\r\n\r\n// opts\r\n// - text\r\n// - placeholder\r\nDataTable.feature.register( 'search', function ( settings, opts ) {\r\n\t// Don't show the input if filtering isn't available on the table\r\n\tif (! settings.oFeatures.bFilter) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar classes = settings.oClasses.search;\r\n\tvar tableId = settings.sTableId;\r\n\tvar language = settings.oLanguage;\r\n\tvar previousSearch = settings.oPreviousSearch;\r\n\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\r\n\r\n\topts = $.extend({\r\n\t\tplaceholder: language.sSearchPlaceholder,\r\n\t\tprocessing: false,\r\n\t\ttext: language.sSearch\r\n\t}, opts);\r\n\r\n\t// The _INPUT_ is optional - is appended if not present\r\n\tif (opts.text.indexOf('_INPUT_') === -1) {\r\n\t\topts.text += '_INPUT_';\r\n\t}\r\n\r\n\topts.text = _fnMacros(settings, opts.text);\r\n\r\n\t// We can put the <input> outside of the label if it is at the start or end\r\n\t// which helps improve accessability (not all screen readers like implicit\r\n\t// for elements).\r\n\tvar end = opts.text.match(/_INPUT_$/);\r\n\tvar start = opts.text.match(/^_INPUT_/);\r\n\tvar removed = opts.text.replace(/_INPUT_/, '');\r\n\tvar str = '<label>' + opts.text + '</label>';\r\n\r\n\tif (start) {\r\n\t\tstr = '_INPUT_<label>' + removed + '</label>';\r\n\t}\r\n\telse if (end) {\r\n\t\tstr = '<label>' + removed + '</label>_INPUT_';\r\n\t}\r\n\r\n\tvar filter = $('<div>')\r\n\t\t.addClass(classes.container)\r\n\t\t.append(str.replace(/_INPUT_/, input));\r\n\r\n\t// add for and id to label and input\r\n\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\r\n\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\r\n\t__searchCounter++;\r\n\r\n\tvar searchFn = function(event) {\r\n\t\tvar val = this.value;\r\n\r\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/* Now do the filter */\r\n\t\tif ( val != previousSearch.search ) {\r\n\t\t\t_fnProcessingRun(settings, opts.processing, function () {\r\n\t\t\t\tpreviousSearch.search = val;\r\n\t\t\r\n\t\t\t\t_fnFilterComplete( settings, previousSearch );\r\n\t\t\r\n\t\t\t\t// Need to redraw, without resorting\r\n\t\t\t\tsettings._iDisplayStart = 0;\r\n\t\t\t\t_fnDraw( settings );\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tvar searchDelay = settings.searchDelay !== null ?\r\n\t\tsettings.searchDelay :\r\n\t\t0;\r\n\r\n\tvar jqFilter = $('input', filter)\r\n\t\t.val( previousSearch.search )\r\n\t\t.attr( 'placeholder', opts.placeholder )\r\n\t\t.on(\r\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\r\n\t\t\tsearchDelay ?\r\n\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\r\n\t\t\t\tsearchFn\r\n\t\t)\r\n\t\t.on( 'mouseup.DT', function(e) {\r\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\r\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\r\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\r\n\t\t\tsetTimeout( function () {\r\n\t\t\t\tsearchFn.call(jqFilter[0], e);\r\n\t\t\t}, 10);\r\n\t\t} )\r\n\t\t.on( 'keypress.DT', function(e) {\r\n\t\t\t/* Prevent form submission */\r\n\t\t\tif ( e.keyCode == 13 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.attr('aria-controls', tableId);\r\n\r\n\t// Update the input elements whenever the table is filtered\r\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\r\n\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\r\n\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\r\n\t\t\t\t? previousSearch.search\r\n\t\t\t\t: ''\r\n\t\t\t);\r\n\t\t}\r\n\t} );\r\n\r\n\treturn filter;\r\n}, 'f' );\r\n\r\n// opts\r\n// - type - button configuration\r\n// - buttons - number of buttons to show - must be odd\r\nDataTable.feature.register( 'paging', function ( settings, opts ) {\r\n\t// Don't show the paging input if the table doesn't have paging enabled\r\n\tif (! settings.oFeatures.bPaginate) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\topts = $.extend({\r\n\t\tbuttons: DataTable.ext.pager.numbers_length,\r\n\t\ttype: settings.sPaginationType,\r\n\t\tboundaryNumbers: true,\r\n\t\tfirstLast: true,\r\n\t\tpreviousNext: true,\r\n\t\tnumbers: true\r\n\t}, opts);\r\n\r\n\tvar host = $('<div/>')\r\n\t\t.addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : ''))\r\n\t\t.append(\r\n\t\t\t$('<nav>')\r\n\t\t\t\t.attr('aria-label', 'pagination')\r\n\t\t\t\t.addClass(settings.oClasses.paging.nav)\r\n\t\t);\r\n\tvar draw = function () {\r\n\t\t_pagingDraw(settings, host.children(), opts);\r\n\t};\r\n\r\n\tsettings.aoDrawCallback.push(draw);\r\n\r\n\t// Responsive redraw of paging control\r\n\t$(settings.nTable).on('column-sizing.dt.DT', draw);\r\n\r\n\treturn host;\r\n}, 'p' );\r\n\r\n/**\r\n * Dynamically create the button type array based on the configuration options.\r\n * This will only happen if the paging type is not defined.\r\n */\r\nfunction _pagingDynamic(opts) {\r\n\tvar out = [];\r\n\r\n\tif (opts.numbers) {\r\n\t\tout.push('numbers');\r\n\t}\r\n\r\n\tif (opts.previousNext) {\r\n\t\tout.unshift('previous');\r\n\t\tout.push('next');\r\n\t}\r\n\r\n\tif (opts.firstLast) {\r\n\t\tout.unshift('first');\r\n\t\tout.push('last');\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\nfunction _pagingDraw(settings, host, opts) {\r\n\tif (! settings._bInitComplete) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\tplugin = opts.type\r\n\t\t\t? DataTable.ext.pager[ opts.type ]\r\n\t\t\t: _pagingDynamic,\r\n\t\taria = settings.oLanguage.oAria.paginate || {},\r\n\t\tstart      = settings._iDisplayStart,\r\n\t\tlen        = settings._iDisplayLength,\r\n\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1,\r\n\t\tpage = all ? 0 : Math.ceil( start / len ),\r\n\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\r\n\t\tbuttons = [],\r\n\t\tbuttonEls = [],\r\n\t\tbuttonsNested = plugin(opts)\r\n\t\t\t.map(function (val) {\r\n\t\t\t\treturn val === 'numbers'\r\n\t\t\t\t\t? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)\r\n\t\t\t\t\t: val;\r\n\t\t\t});\r\n\r\n\t// .flat() would be better, but not supported in old Safari\r\n\tbuttons = buttons.concat.apply(buttons, buttonsNested);\r\n\r\n\tfor (var i=0 ; i<buttons.length ; i++) {\r\n\t\tvar button = buttons[i];\r\n\r\n\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\r\n\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\r\n\t\t\tsettings,\r\n\t\t\tbutton,\r\n\t\t\tbtnInfo.display,\r\n\t\t\tbtnInfo.active,\r\n\t\t\tbtnInfo.disabled\r\n\t\t);\r\n\r\n\t\tvar ariaLabel = typeof button === 'string'\r\n\t\t\t? aria[ button ]\r\n\t\t\t: aria.number\r\n\t\t\t\t? aria.number + (button+1)\r\n\t\t\t\t: null;\r\n\r\n\t\t// Common attributes\r\n\t\t$(btn.clicker).attr({\r\n\t\t\t'aria-controls': settings.sTableId,\r\n\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\r\n\t\t\t'aria-current': btnInfo.active ? 'page' : null,\r\n\t\t\t'aria-label': ariaLabel,\r\n\t\t\t'data-dt-idx': button,\r\n\t\t\t'tabIndex': btnInfo.disabled\r\n\t\t\t\t? -1\r\n\t\t\t\t: settings.iTabIndex\r\n\t\t\t\t\t? settings.iTabIndex\r\n\t\t\t\t\t: null, // `0` doesn't need a tabIndex since it is the default\r\n\t\t});\r\n\r\n\t\tif (typeof button !== 'number') {\r\n\t\t\t$(btn.clicker).addClass(button);\r\n\t\t}\r\n\r\n\t\t_fnBindAction(\r\n\t\t\tbtn.clicker, {action: button}, function(e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t_fnPageChange( settings, e.data.action, true );\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tbuttonEls.push(btn.display);\r\n\t}\r\n\r\n\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\r\n\t\tsettings, buttonEls\r\n\t);\r\n\r\n\tvar activeEl = host.find(document.activeElement).data('dt-idx');\r\n\r\n\thost.empty().append(wrapped);\r\n\r\n\tif ( activeEl !== undefined ) {\r\n\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\r\n\t}\r\n\r\n\t// Responsive - check if the buttons are over two lines based on the\r\n\t// height of the buttons and the container.\r\n\tif (\r\n\t\tbuttonEls.length && // any buttons\r\n\t\topts.buttons > 1 && // prevent infinite\r\n\t\t$(host).height() >= ($(buttonEls[0]).outerHeight() * 2) - 10\r\n\t) {\r\n\t\t_pagingDraw(settings, host, $.extend({}, opts, { buttons: opts.buttons - 2 }));\r\n\t}\r\n}\r\n\r\n/**\r\n * Get properties for a button based on the current paging state of the table\r\n *\r\n * @param {*} settings DT settings object\r\n * @param {*} button The button type in question\r\n * @param {*} page Table's current page\r\n * @param {*} pages Number of pages\r\n * @returns Info object\r\n */\r\nfunction _pagingButtonInfo(settings, button, page, pages) {\r\n\tvar lang = settings.oLanguage.oPaginate;\r\n\tvar o = {\r\n\t\tdisplay: '',\r\n\t\tactive: false,\r\n\t\tdisabled: false\r\n\t};\r\n\r\n\tswitch ( button ) {\r\n\t\tcase 'ellipsis':\r\n\t\t\to.display = '&#x2026;';\r\n\t\t\to.disabled = true;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'first':\r\n\t\t\to.display = lang.sFirst;\r\n\r\n\t\t\tif (page === 0) {\r\n\t\t\t\to.disabled = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'previous':\r\n\t\t\to.display = lang.sPrevious;\r\n\r\n\t\t\tif ( page === 0 ) {\r\n\t\t\t\to.disabled = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'next':\r\n\t\t\to.display = lang.sNext;\r\n\r\n\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\to.disabled = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'last':\r\n\t\t\to.display = lang.sLast;\r\n\r\n\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\to.disabled = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tif ( typeof button === 'number' ) {\r\n\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\r\n\t\t\t\t\r\n\t\t\t\tif (page === button) {\r\n\t\t\t\t\to.active = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn o;\r\n}\r\n\r\n/**\r\n * Compute what number buttons to show in the paging control\r\n *\r\n * @param {*} page Current page\r\n * @param {*} pages Total number of pages\r\n * @param {*} buttons Target number of number buttons\r\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\r\n * @returns Buttons to show\r\n */\r\nfunction _pagingNumbers ( page, pages, buttons, addFirstLast ) {\r\n\tvar\r\n\t\tnumbers = [],\r\n\t\thalf = Math.floor(buttons / 2),\r\n\t\tbefore = addFirstLast ? 2 : 1,\r\n\t\tafter = addFirstLast ? 1 : 0;\r\n\r\n\tif ( pages <= buttons ) {\r\n\t\tnumbers = _range(0, pages);\r\n\t}\r\n\telse if (buttons === 1) {\r\n\t\t// Single button - current page only\r\n\t\tnumbers = [page];\r\n\t}\r\n\telse if (buttons === 3) {\r\n\t\t// Special logic for just three buttons\r\n\t\tif (page <= 1) {\r\n\t\t\tnumbers = [0, 1, 'ellipsis'];\r\n\t\t}\r\n\t\telse if (page >= pages - 2) {\r\n\t\t\tnumbers = _range(pages-2, pages);\r\n\t\t\tnumbers.unshift('ellipsis');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\r\n\t\t}\r\n\t}\r\n\telse if ( page <= half ) {\r\n\t\tnumbers = _range(0, buttons-before);\r\n\t\tnumbers.push('ellipsis');\r\n\r\n\t\tif (addFirstLast) {\r\n\t\t\tnumbers.push(pages-1);\r\n\t\t}\r\n\t}\r\n\telse if ( page >= pages - 1 - half ) {\r\n\t\tnumbers = _range(pages-(buttons-before), pages);\r\n\t\tnumbers.unshift('ellipsis');\r\n\r\n\t\tif (addFirstLast) {\r\n\t\t\tnumbers.unshift(0);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tnumbers = _range(page-half+before, page+half-after);\r\n\t\tnumbers.push('ellipsis');\r\n\t\tnumbers.unshift('ellipsis');\r\n\r\n\t\tif (addFirstLast) {\r\n\t\t\tnumbers.push(pages-1);\r\n\t\t\tnumbers.unshift(0);\r\n\t\t}\r\n\t}\r\n\r\n\treturn numbers;\r\n}\r\n\r\nvar __lengthCounter = 0;\r\n\r\n// opts\r\n// - menu\r\n// - text\r\nDataTable.feature.register( 'pageLength', function ( settings, opts ) {\r\n\tvar features = settings.oFeatures;\r\n\r\n\t// For compatibility with the legacy `pageLength` top level option\r\n\tif (! features.bPaginate || ! features.bLengthChange) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\topts = $.extend({\r\n\t\tmenu: settings.aLengthMenu,\r\n\t\ttext: settings.oLanguage.sLengthMenu\r\n\t}, opts);\r\n\r\n\tvar\r\n\t\tclasses  = settings.oClasses.length,\r\n\t\ttableId  = settings.sTableId,\r\n\t\tmenu     = opts.menu,\r\n\t\tlengths  = [],\r\n\t\tlanguage = [],\r\n\t\ti;\r\n\r\n\t// Options can be given in a number of ways\r\n\tif (Array.isArray( menu[0] )) {\r\n\t\t// Old 1.x style - 2D array\r\n\t\tlengths = menu[0];\r\n\t\tlanguage = menu[1];\r\n\t}\r\n\telse {\r\n\t\tfor ( i=0 ; i<menu.length ; i++ ) {\r\n\t\t\t// An object with different label and value\r\n\t\t\tif ($.isPlainObject(menu[i])) {\r\n\t\t\t\tlengths.push(menu[i].value);\r\n\t\t\t\tlanguage.push(menu[i].label);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Or just a number to display and use\r\n\t\t\t\tlengths.push(menu[i]);\r\n\t\t\t\tlanguage.push(menu[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// We can put the <select> outside of the label if it is at the start or\r\n\t// end which helps improve accessability (not all screen readers like\r\n\t// implicit for elements).\r\n\tvar end = opts.text.match(/_MENU_$/);\r\n\tvar start = opts.text.match(/^_MENU_/);\r\n\tvar removed = opts.text.replace(/_MENU_/, '');\r\n\tvar str = '<label>' + opts.text + '</label>';\r\n\r\n\tif (start) {\r\n\t\tstr = '_MENU_<label>' + removed + '</label>';\r\n\t}\r\n\telse if (end) {\r\n\t\tstr = '<label>' + removed + '</label>_MENU_';\r\n\t}\r\n\r\n\t// Wrapper element - use a span as a holder for where the select will go\r\n\tvar tmpId = 'tmp-' + (+new Date())\r\n\tvar div = $('<div/>')\r\n\t\t.addClass( classes.container )\r\n\t\t.append(\r\n\t\t\tstr.replace( '_MENU_', '<span id=\"'+tmpId+'\"></span>' )\r\n\t\t);\r\n\r\n\t// Save text node content for macro updating\r\n\tvar textNodes = [];\r\n\tArray.from(div.find('label')[0].childNodes).forEach(function (el) {\r\n\t\tif (el.nodeType === Node.TEXT_NODE) {\r\n\t\t\ttextNodes.push({\r\n\t\t\t\tel: el,\r\n\t\t\t\ttext: el.textContent\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// Update the label text in case it has an entries value\r\n\tvar updateEntries = function (len) {\r\n\t\ttextNodes.forEach(function (node) {\r\n\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\r\n\t\t});\r\n\t}\r\n\r\n\t// Next, the select itself, along with the options\r\n\tvar select = $('<select/>', {\r\n\t\t'name':          tableId+'_length',\r\n\t\t'aria-controls': tableId,\r\n\t\t'class':         classes.select\r\n\t} );\r\n\r\n\tfor ( i=0 ; i<lengths.length ; i++ ) {\r\n\t\tselect[0][ i ] = new Option(\r\n\t\t\ttypeof language[i] === 'number' ?\r\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\r\n\t\t\t\tlanguage[i],\r\n\t\t\tlengths[i]\r\n\t\t);\r\n\t}\r\n\r\n\t// add for and id to label and input\r\n\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\r\n\tselect.attr('id', 'dt-length-' + __lengthCounter);\r\n\t__lengthCounter++;\r\n\r\n\t// Swap in the select list\r\n\tdiv.find('#' + tmpId).replaceWith(select);\r\n\r\n\t// Can't use `select` variable as user might provide their own and the\r\n\t// reference is broken by the use of outerHTML\r\n\t$('select', div)\r\n\t\t.val( settings._iDisplayLength )\r\n\t\t.on( 'change.DT', function() {\r\n\t\t\t_fnLengthChange( settings, $(this).val() );\r\n\t\t\t_fnDraw( settings );\r\n\t\t} );\r\n\r\n\t// Update node value whenever anything changes the table's length\r\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t$('select', div).val( len );\r\n\r\n\t\t\t// Resolve plurals in the text for the new length\r\n\t\t\tupdateEntries(len);\r\n\t\t}\r\n\t} );\r\n\r\n\tupdateEntries(settings._iDisplayLength);\r\n\r\n\treturn div;\r\n}, 'l' );\r\n\r\n// jQuery access\r\n$.fn.dataTable = DataTable;\r\n\r\n// Provide access to the host jQuery object (circular reference)\r\nDataTable.$ = $;\r\n\r\n// Legacy aliases\r\n$.fn.dataTableSettings = DataTable.settings;\r\n$.fn.dataTableExt = DataTable.ext;\r\n\r\n// With a capital `D` we return a DataTables API instance rather than a\r\n// jQuery object\r\n$.fn.DataTable = function ( opts ) {\r\n\treturn $(this).dataTable( opts ).api();\r\n};\r\n\r\n// All properties that are available to $.fn.dataTable should also be\r\n// available on $.fn.DataTable\r\n$.each( DataTable, function ( prop, val ) {\r\n\t$.fn.DataTable[ prop ] = val;\r\n} );\r\n\r\nexport default DataTable;\r\n"],
  "mappings": "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",
  "names": ["jQuery", "i", "td", "attr", "cell", "row", "k", "state", "col", "idx", "caption", "e", "settings", "prop"]
}
